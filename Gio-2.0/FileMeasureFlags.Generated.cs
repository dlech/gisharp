// ATTENTION: This file is automatically generated. Do not edit by manually.
namespace GISharp.Lib.Gio
{
    /// <summary>
    /// Flags that can be used with g_file_measure_disk_usage().
    /// </summary>
    [GISharp.Runtime.SinceAttribute("2.38")]
    [GISharp.Runtime.GTypeAttribute("GFileMeasureFlags", IsProxyForUnmanagedType = true)]
    [System.FlagsAttribute]
    public enum FileMeasureFlags
    {
        /// <summary>
        /// No flags set.
        /// </summary>
        None = 0b0000_0000_0000_0000_0000_0000_0000_0000,
        /// <summary>
        /// Report any error encountered
        ///   while traversing the directory tree.  Normally errors are only
        ///   reported for the toplevel file.
        /// </summary>
        ReportAnyError = 0b0000_0000_0000_0000_0000_0000_0000_0010,
        /// <summary>
        /// Tally usage based on apparent file
        ///   sizes.  Normally, the block-size is used, if available, as this is a
        ///   more accurate representation of disk space used.
        ///   Compare with `du --apparent-size`.
        /// </summary>
        ApparentSize = 0b0000_0000_0000_0000_0000_0000_0000_0100,
        /// <summary>
        /// Do not cross mount point boundaries.
        ///   Compare with `du -x`.
        /// </summary>
        NoCrossMountPoint = 0b0000_0000_0000_0000_0000_0000_0000_1000
    }

    public partial class FileMeasureFlagsExtensions
    {
        static readonly GISharp.Lib.GObject.GType _GType = g_file_measure_flags_get_type();

        [System.Runtime.InteropServices.DllImportAttribute("gio-2.0", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        /* <type name="GType" type="GType" managed-name="GISharp.Lib.GObject.GType" /> */
        /* transfer-ownership:full direction:out */
        static extern unsafe GISharp.Lib.GObject.GType g_file_measure_flags_get_type();
    }
}