// ATTENTION: This file is automatically generated. Do not edit manually.
#nullable enable
namespace GISharp.Lib.Gio
{
    /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum']/*" />
    [GISharp.Runtime.GTypeAttribute("GIOErrorEnum", IsProxyForUnmanagedType = true)]
    [GISharp.Runtime.GErrorDomainAttribute("g-io-error-quark")]
    public enum IOErrorEnum
    {
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='Failed']/*" />
        Failed = 0,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='NotFound']/*" />
        NotFound = 1,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='Exists']/*" />
        Exists = 2,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IsDirectory']/*" />
        IsDirectory = 3,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='NotDirectory']/*" />
        NotDirectory = 4,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='NotEmpty']/*" />
        NotEmpty = 5,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='NotRegularFile']/*" />
        NotRegularFile = 6,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='NotSymbolicLink']/*" />
        NotSymbolicLink = 7,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='NotMountableFile']/*" />
        NotMountableFile = 8,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='FilenameTooLong']/*" />
        FilenameTooLong = 9,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='InvalidFilename']/*" />
        InvalidFilename = 10,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='TooManyLinks']/*" />
        TooManyLinks = 11,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='NoSpace']/*" />
        NoSpace = 12,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='InvalidArgument']/*" />
        InvalidArgument = 13,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='PermissionDenied']/*" />
        PermissionDenied = 14,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='NotSupported']/*" />
        NotSupported = 15,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='NotMounted']/*" />
        NotMounted = 16,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='AlreadyMounted']/*" />
        AlreadyMounted = 17,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='Closed']/*" />
        Closed = 18,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='Cancelled']/*" />
        Cancelled = 19,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='Pending']/*" />
        Pending = 20,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='ReadOnly']/*" />
        ReadOnly = 21,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='CantCreateBackup']/*" />
        CantCreateBackup = 22,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='WrongEtag']/*" />
        WrongEtag = 23,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='TimedOut']/*" />
        TimedOut = 24,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='WouldRecurse']/*" />
        WouldRecurse = 25,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='Busy']/*" />
        Busy = 26,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='WouldBlock']/*" />
        WouldBlock = 27,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='HostNotFound']/*" />
        HostNotFound = 28,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='WouldMerge']/*" />
        WouldMerge = 29,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='FailedHandled']/*" />
        FailedHandled = 30,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='TooManyOpenFiles']/*" />
        [GISharp.Runtime.SinceAttribute("2.20")]
        TooManyOpenFiles = 31,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='NotInitialized']/*" />
        [GISharp.Runtime.SinceAttribute("2.22")]
        NotInitialized = 32,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='AddressInUse']/*" />
        [GISharp.Runtime.SinceAttribute("2.22")]
        AddressInUse = 33,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='PartialInput']/*" />
        [GISharp.Runtime.SinceAttribute("2.24")]
        PartialInput = 34,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='InvalidData']/*" />
        [GISharp.Runtime.SinceAttribute("2.24")]
        InvalidData = 35,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='DbusError']/*" />
        [GISharp.Runtime.SinceAttribute("2.26")]
        DbusError = 36,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='HostUnreachable']/*" />
        [GISharp.Runtime.SinceAttribute("2.26")]
        HostUnreachable = 37,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='NetworkUnreachable']/*" />
        [GISharp.Runtime.SinceAttribute("2.26")]
        NetworkUnreachable = 38,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='ConnectionRefused']/*" />
        [GISharp.Runtime.SinceAttribute("2.26")]
        ConnectionRefused = 39,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='ProxyFailed']/*" />
        [GISharp.Runtime.SinceAttribute("2.26")]
        ProxyFailed = 40,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='ProxyAuthFailed']/*" />
        [GISharp.Runtime.SinceAttribute("2.26")]
        ProxyAuthFailed = 41,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='ProxyNeedAuth']/*" />
        [GISharp.Runtime.SinceAttribute("2.26")]
        ProxyNeedAuth = 42,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='ProxyNotAllowed']/*" />
        [GISharp.Runtime.SinceAttribute("2.26")]
        ProxyNotAllowed = 43,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='BrokenPipe']/*" />
        [GISharp.Runtime.SinceAttribute("2.36")]
        BrokenPipe = 44,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='ConnectionClosed']/*" />
        [GISharp.Runtime.SinceAttribute("2.44")]
        ConnectionClosed = 44,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='NotConnected']/*" />
        [GISharp.Runtime.SinceAttribute("2.44")]
        NotConnected = 45,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='MessageTooLarge']/*" />
        [GISharp.Runtime.SinceAttribute("2.48")]
        MessageTooLarge = 46
    }

    /// <summary>
    /// Extension methods for <see cref="IOErrorEnum"/>.
    /// </summary>
    public partial class IOErrorEnumDomain
    {
        static readonly GISharp.Lib.GObject.GType _GType = g_io_error_enum_get_type();

        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='Quark']/*" />
        public static GISharp.Lib.GLib.Quark Quark { get => GetQuark(); }

        /// <summary>
        /// Converts errno.h error codes into GIO error codes. The fallback
        /// value %G_IO_ERROR_FAILED is returned for error codes not currently
        /// handled (but note that future GLib releases may return a more
        /// specific value instead).
        /// </summary>
        /// <remarks>
        /// As %errno is global and may be modified by intermediate function
        /// calls, you should save its value as soon as the call which sets it
        /// </remarks>
        /// <param name="errno">
        /// Error number as defined in errno.h.
        /// </param>
        /// <returns>
        /// #GIOErrorEnum value for the given errno.h error number.
        /// </returns>
        [System.Runtime.InteropServices.DllImportAttribute("gio-2.0", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        /* <type name="IOErrorEnum" type="GIOErrorEnum" managed-name="IOErrorEnum" /> */
        /* transfer-ownership:none direction:out */
        static extern unsafe GISharp.Lib.Gio.IOErrorEnum g_io_error_from_errno(
        /* <type name="gint" type="gint" managed-name="System.Int32" /> */
        /* transfer-ownership:none direction:in */
        System.Int32 errno);

        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='FromErrno(System.Int32)']/*" />
        public static unsafe GISharp.Lib.Gio.IOErrorEnum FromErrno(System.Int32 errno)
        {
            var errno_ = (System.Int32)errno;
            var ret_ = g_io_error_from_errno(errno_);
            var ret = (GISharp.Lib.Gio.IOErrorEnum)ret_;
            return ret;
        }

        /// <summary>
        /// Gets the GIO Error Quark.
        /// </summary>
        /// <returns>
        /// a #GQuark.
        /// </returns>
        [System.Runtime.InteropServices.DllImportAttribute("gio-2.0", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        /* <type name="GLib.Quark" type="GQuark" managed-name="GISharp.Lib.GLib.Quark" /> */
        /* transfer-ownership:none direction:out */
        static extern unsafe GISharp.Lib.GLib.Quark g_io_error_quark();

        private static unsafe GISharp.Lib.GLib.Quark GetQuark()
        {
            var ret_ = g_io_error_quark();
            var ret = (GISharp.Lib.GLib.Quark)ret_;
            return ret;
        }

        [System.Runtime.InteropServices.DllImportAttribute("gio-2.0", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        /* <type name="GType" type="GType" managed-name="GISharp.Lib.GObject.GType" /> */
        /* transfer-ownership:full direction:out */
        static extern unsafe GISharp.Lib.GObject.GType g_io_error_enum_get_type();
    }
}