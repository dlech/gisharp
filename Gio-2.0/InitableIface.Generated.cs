// ATTENTION: This file is automatically generated. Do not edit by manually.
namespace GISharp.Lib.Gio
{
    /// <summary>
    /// Provides an interface for initializing object such that initialization
    /// may fail.
    /// </summary>
    [GISharp.Runtime.SinceAttribute("2.22")]
    public sealed class InitableIface : GISharp.Lib.GObject.TypeInterface
    {
        unsafe new struct Struct
        {
#pragma warning disable CS0649
            /// <summary>
            /// The parent interface.
            /// </summary>
            public GISharp.Lib.GObject.TypeInterface.Struct GIface;
            public System.IntPtr Init;
#pragma warning restore CS0649
        }

        static InitableIface()
        {
            System.Int32 initOffset = (System.Int32)System.Runtime.InteropServices.Marshal.OffsetOf<Struct>(nameof(Struct.Init));
            RegisterVirtualMethod(initOffset, InitFactory.Create);
        }

        public delegate void Init(GISharp.Lib.Gio.Cancellable? cancellable = null);

        [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Cdecl)]
        /* <type name="gboolean" type="gboolean" managed-name="System.Boolean" /> */
        /* transfer-ownership:none skip:1 direction:out */
        public unsafe delegate System.Boolean UnmanagedInit(
/* <type name="Initable" type="GInitable*" managed-name="Initable" is-pointer="1" /> */
/* transfer-ownership:none direction:in */
System.IntPtr initable,
/* <type name="Cancellable" type="GCancellable*" managed-name="Cancellable" is-pointer="1" /> */
/* transfer-ownership:none nullable:1 allow-none:1 direction:in */
System.IntPtr cancellable,
/* <type name="GLib.Error" type="GError**" managed-name="GISharp.Lib.GLib.Error" is-pointer="1" /> */
/* direction:inout transfer-ownership:full */
System.IntPtr* error);

        /// <summary>
        /// Factory for creating <see cref="Init"/> methods.
        /// </summary>
        public static class InitFactory
        {
            public static unsafe UnmanagedInit Create(System.Reflection.MethodInfo methodInfo)
            {
                System.Boolean unmanagedInit(System.IntPtr initable_, System.IntPtr cancellable_, System.IntPtr* error_)
                {
                    try
                    {
                        var initable = (GISharp.Lib.Gio.IInitable)GISharp.Lib.GObject.Object.GetInstance(initable_, GISharp.Runtime.Transfer.None)!;
                        var cancellable = GISharp.Runtime.Opaque.GetInstance<GISharp.Lib.Gio.Cancellable>(cancellable_, GISharp.Runtime.Transfer.None);
                        var doInit = (Init)methodInfo.CreateDelegate(typeof(Init), initable);
                        doInit(cancellable);
                        return true;
                    }
                    catch (GISharp.Runtime.GErrorException ex)
                    {
                        GISharp.Runtime.GMarshal.PropagateError(error_, ex.Error);
                    }
                    catch (System.Exception ex)
                    {
                        GISharp.Lib.GLib.Log.LogUnhandledException(ex);
                    }

                    return default(System.Boolean);
                }

                return unmanagedInit;
            }
        }

        public InitableIface(System.IntPtr handle, GISharp.Runtime.Transfer ownership) : base(handle, ownership)
        {
        }
    }
}