// SPDX-License-Identifier: MIT
// ATTENTION: This file is automatically generated. Do not edit manually.
#nullable enable
namespace GISharp.Lib.GLib
{
    /// <include file="KeyFileError.xmldoc" path="declaration/member[@name='KeyFileError']/*" />
    [GISharp.Runtime.GErrorDomainAttribute("g-key-file-error-quark")]
    public enum KeyFileError
    {
        /// <include file="KeyFileError.xmldoc" path="declaration/member[@name='KeyFileError.UnknownEncoding']/*" />
        UnknownEncoding = 0,
        /// <include file="KeyFileError.xmldoc" path="declaration/member[@name='KeyFileError.Parse']/*" />
        Parse = 1,
        /// <include file="KeyFileError.xmldoc" path="declaration/member[@name='KeyFileError.NotFound']/*" />
        NotFound = 2,
        /// <include file="KeyFileError.xmldoc" path="declaration/member[@name='KeyFileError.KeyNotFound']/*" />
        KeyNotFound = 3,
        /// <include file="KeyFileError.xmldoc" path="declaration/member[@name='KeyFileError.GroupNotFound']/*" />
        GroupNotFound = 4,
        /// <include file="KeyFileError.xmldoc" path="declaration/member[@name='KeyFileError.InvalidValue']/*" />
        InvalidValue = 5
    }

    /// <summary>
    /// Extension methods for <see cref="KeyFileError"/>.
    /// </summary>
    public static unsafe partial class KeyFileErrorDomain
    {
        /// <include file="KeyFileError.xmldoc" path="declaration/member[@name='KeyFileErrorDomain.Quark']/*" />
        public static GISharp.Lib.GLib.Quark Quark { get => GetQuark(); }

        static partial void CheckGetQuarkArgs();
        [System.Runtime.InteropServices.DllImportAttribute("glib-2.0", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        /* <type name="Quark" type="GQuark" managed-name="Quark" /> */
        /* transfer-ownership:none direction:in */
        private static extern GISharp.Lib.GLib.Quark g_key_file_error_quark();

        private static GISharp.Lib.GLib.Quark GetQuark()
        {
            CheckGetQuarkArgs();
            var ret_ = g_key_file_error_quark();
            var ret = (GISharp.Lib.GLib.Quark)ret_;
            return ret;
        }
    }
}