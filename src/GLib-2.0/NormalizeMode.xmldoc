<declaration>

<member name='NormalizeMode.Default'>
<summary>
standardize differences that do not affect the
    text content, such as the above-mentioned accent representation
</summary>
</member>

<member name='NormalizeMode.NFD'>
<summary>
another name for <see cref="NormalizeMode.Default"/>
</summary>
</member>

<member name='NormalizeMode.DefaultCompose'>
<summary>
like <see cref="NormalizeMode.Default"/>, but with
    composed forms rather than a maximally decomposed form
</summary>
</member>

<member name='NormalizeMode.NFC'>
<summary>
another name for <see cref="NormalizeMode.DefaultCompose"/>
</summary>
</member>

<member name='NormalizeMode.All'>
<summary>
beyond <see cref="NormalizeMode.Default"/> also standardize the
    "compatibility" characters in Unicode, such as SUPERSCRIPT THREE
    to the standard forms (in this case DIGIT THREE). Formatting
    information may be lost but for most text operations such
    characters should be considered the same
</summary>
</member>

<member name='NormalizeMode.NFKD'>
<summary>
another name for <see cref="NormalizeMode.All"/>
</summary>
</member>

<member name='NormalizeMode.AllCompose'>
<summary>
like <see cref="NormalizeMode.All"/>, but with composed
    forms rather than a maximally decomposed form
</summary>
</member>

<member name='NormalizeMode.NFKC'>
<summary>
another name for <see cref="NormalizeMode.AllCompose"/>
</summary>
</member>

<member name='NormalizeMode'>
<summary>
Defines how a Unicode string is transformed in a canonical
form, standardizing such issues as whether a character with
an accent is represented as a base character and combining
accent or as a single precomposed character. Unicode strings
should generally be normalized before comparing them.
</summary>
</member>

</declaration>
