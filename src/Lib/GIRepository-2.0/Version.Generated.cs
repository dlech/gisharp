// SPDX-License-Identifier: MIT
// ATTENTION: This file is automatically generated. Do not edit manually.
#nullable enable
namespace GISharp.Lib.GIRepository
{
    /// <include file="Version.xmldoc" path="declaration/member[@name='Version']/*" />
    public static unsafe partial class Version
    {
        /// <include file="Version.xmldoc" path="declaration/member[@name='Version.compileTimeMajorVersion']/*" />
        [GISharp.Runtime.SinceAttribute("1.60")]
        private const int compileTimeMajorVersion = 1;

        /// <include file="Version.xmldoc" path="declaration/member[@name='Version.compileTimeMicroVersion']/*" />
        [GISharp.Runtime.SinceAttribute("1.60")]
        private const int compileTimeMicroVersion = 0;

        /// <include file="Version.xmldoc" path="declaration/member[@name='Version.compileTimeMinorVersion']/*" />
        [GISharp.Runtime.SinceAttribute("1.60")]
        private const int compileTimeMinorVersion = 72;

        /// <include file="Version.xmldoc" path="declaration/member[@name='Version.RunTimeMajorVersion']/*" />
        [GISharp.Runtime.SinceAttribute("1.60")]
        private static uint RunTimeMajorVersion { get => GetRunTimeMajorVersion(); }

        /// <include file="Version.xmldoc" path="declaration/member[@name='Version.RunTimeMicroVersion']/*" />
        [GISharp.Runtime.SinceAttribute("1.60")]
        private static uint RunTimeMicroVersion { get => GetRunTimeMicroVersion(); }

        /// <include file="Version.xmldoc" path="declaration/member[@name='Version.RunTimeMinorVersion']/*" />
        [GISharp.Runtime.SinceAttribute("1.60")]
        private static uint RunTimeMinorVersion { get => GetRunTimeMinorVersion(); }

        /// <summary>
        /// Returns the major version number of the girepository library.
        /// (e.g. in version 1.58.2 this is 1.)
        /// </summary>
        /// <returns>
        /// the major version number of the girepository library
        /// </returns>
        [GISharp.Runtime.SinceAttribute("1.60")]
        [System.Runtime.InteropServices.DllImportAttribute("girepository-1.0", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        /* <type name="guint" type="guint" /> */
        /* transfer-ownership:none direction:in */
        private static extern uint gi_get_major_version();
        static partial void CheckGetRunTimeMajorVersionArgs();

        [GISharp.Runtime.SinceAttribute("1.60")]
        private static uint GetRunTimeMajorVersion()
        {
            CheckGetRunTimeMajorVersionArgs();
            var ret_ = gi_get_major_version();
            GISharp.Runtime.GMarshal.PopUnhandledException();
            var ret = (uint)ret_;
            return ret;
        }

        /// <summary>
        /// Returns the micro version number of the girepository library.
        /// (e.g. in version 1.58.2 this is 2.)
        /// </summary>
        /// <returns>
        /// the micro version number of the girepository library
        /// </returns>
        [GISharp.Runtime.SinceAttribute("1.60")]
        [System.Runtime.InteropServices.DllImportAttribute("girepository-1.0", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        /* <type name="guint" type="guint" /> */
        /* transfer-ownership:none direction:in */
        private static extern uint gi_get_micro_version();
        static partial void CheckGetRunTimeMicroVersionArgs();

        [GISharp.Runtime.SinceAttribute("1.60")]
        private static uint GetRunTimeMicroVersion()
        {
            CheckGetRunTimeMicroVersionArgs();
            var ret_ = gi_get_micro_version();
            GISharp.Runtime.GMarshal.PopUnhandledException();
            var ret = (uint)ret_;
            return ret;
        }

        /// <summary>
        /// Returns the minor version number of the girepository library.
        /// (e.g. in version 1.58.2 this is 58.)
        /// </summary>
        /// <returns>
        /// the minor version number of the girepository library
        /// </returns>
        [GISharp.Runtime.SinceAttribute("1.60")]
        [System.Runtime.InteropServices.DllImportAttribute("girepository-1.0", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        /* <type name="guint" type="guint" /> */
        /* transfer-ownership:none direction:in */
        private static extern uint gi_get_minor_version();
        static partial void CheckGetRunTimeMinorVersionArgs();

        [GISharp.Runtime.SinceAttribute("1.60")]
        private static uint GetRunTimeMinorVersion()
        {
            CheckGetRunTimeMinorVersionArgs();
            var ret_ = gi_get_minor_version();
            GISharp.Runtime.GMarshal.PopUnhandledException();
            var ret = (uint)ret_;
            return ret;
        }
    }
}