// SPDX-License-Identifier: MIT
// ATTENTION: This file is automatically generated. Do not edit manually.
#nullable enable
namespace GISharp.Lib.Gio
{
    /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum']/*" />
    [GISharp.Runtime.GTypeAttribute("GIOErrorEnum", IsProxyForUnmanagedType = true)]
    [GISharp.Runtime.GErrorDomainAttribute("g-io-error-quark")]
    public enum IOErrorEnum
    {
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.Failed']/*" />
        Failed = 0,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.NotFound']/*" />
        NotFound = 1,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.Exists']/*" />
        Exists = 2,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.IsDirectory']/*" />
        IsDirectory = 3,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.NotDirectory']/*" />
        NotDirectory = 4,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.NotEmpty']/*" />
        NotEmpty = 5,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.NotRegularFile']/*" />
        NotRegularFile = 6,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.NotSymbolicLink']/*" />
        NotSymbolicLink = 7,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.NotMountableFile']/*" />
        NotMountableFile = 8,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.FilenameTooLong']/*" />
        FilenameTooLong = 9,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.InvalidFilename']/*" />
        InvalidFilename = 10,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.TooManyLinks']/*" />
        TooManyLinks = 11,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.NoSpace']/*" />
        NoSpace = 12,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.InvalidArgument']/*" />
        InvalidArgument = 13,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.PermissionDenied']/*" />
        PermissionDenied = 14,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.NotSupported']/*" />
        NotSupported = 15,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.NotMounted']/*" />
        NotMounted = 16,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.AlreadyMounted']/*" />
        AlreadyMounted = 17,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.Closed']/*" />
        Closed = 18,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.Cancelled']/*" />
        Cancelled = 19,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.Pending']/*" />
        Pending = 20,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.ReadOnly']/*" />
        ReadOnly = 21,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.CantCreateBackup']/*" />
        CantCreateBackup = 22,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.WrongEtag']/*" />
        WrongEtag = 23,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.TimedOut']/*" />
        TimedOut = 24,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.WouldRecurse']/*" />
        WouldRecurse = 25,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.Busy']/*" />
        Busy = 26,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.WouldBlock']/*" />
        WouldBlock = 27,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.HostNotFound']/*" />
        HostNotFound = 28,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.WouldMerge']/*" />
        WouldMerge = 29,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.FailedHandled']/*" />
        FailedHandled = 30,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.TooManyOpenFiles']/*" />
        [GISharp.Runtime.SinceAttribute("2.20")]
        TooManyOpenFiles = 31,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.NotInitialized']/*" />
        [GISharp.Runtime.SinceAttribute("2.22")]
        NotInitialized = 32,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.AddressInUse']/*" />
        [GISharp.Runtime.SinceAttribute("2.22")]
        AddressInUse = 33,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.PartialInput']/*" />
        [GISharp.Runtime.SinceAttribute("2.24")]
        PartialInput = 34,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.InvalidData']/*" />
        [GISharp.Runtime.SinceAttribute("2.24")]
        InvalidData = 35,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.DbusError']/*" />
        [GISharp.Runtime.SinceAttribute("2.26")]
        DbusError = 36,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.HostUnreachable']/*" />
        [GISharp.Runtime.SinceAttribute("2.26")]
        HostUnreachable = 37,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.NetworkUnreachable']/*" />
        [GISharp.Runtime.SinceAttribute("2.26")]
        NetworkUnreachable = 38,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.ConnectionRefused']/*" />
        [GISharp.Runtime.SinceAttribute("2.26")]
        ConnectionRefused = 39,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.ProxyFailed']/*" />
        [GISharp.Runtime.SinceAttribute("2.26")]
        ProxyFailed = 40,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.ProxyAuthFailed']/*" />
        [GISharp.Runtime.SinceAttribute("2.26")]
        ProxyAuthFailed = 41,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.ProxyNeedAuth']/*" />
        [GISharp.Runtime.SinceAttribute("2.26")]
        ProxyNeedAuth = 42,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.ProxyNotAllowed']/*" />
        [GISharp.Runtime.SinceAttribute("2.26")]
        ProxyNotAllowed = 43,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.BrokenPipe']/*" />
        [GISharp.Runtime.SinceAttribute("2.36")]
        BrokenPipe = 44,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.ConnectionClosed']/*" />
        [GISharp.Runtime.SinceAttribute("2.44")]
        ConnectionClosed = 44,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.NotConnected']/*" />
        [GISharp.Runtime.SinceAttribute("2.44")]
        NotConnected = 45,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.MessageTooLarge']/*" />
        [GISharp.Runtime.SinceAttribute("2.48")]
        MessageTooLarge = 46,
        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnum.NoSuchDevice']/*" />
        [GISharp.Runtime.SinceAttribute("2.74")]
        NoSuchDevice = 47
    }

    /// <summary>
    /// Extension methods for <see cref="IOErrorEnum"/>.
    /// </summary>
    public static unsafe partial class IOErrorEnumDomain
    {
        private static readonly GISharp.Runtime.GType _GType = g_io_error_enum_get_type();

        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnumDomain.Quark']/*" />
        public static GISharp.Lib.GLib.Quark Quark { get => GetQuark(); }

        /// <summary>
        /// Converts errno.h error codes into GIO error codes. The fallback
        /// value %G_IO_ERROR_FAILED is returned for error codes not currently
        /// handled (but note that future GLib releases may return a more
        /// specific value instead).
        /// </summary>
        /// <remarks>
        /// <para>
        /// As %errno is global and may be modified by intermediate function
        /// calls, you should save its value as soon as the call which sets it
        /// </para>
        /// </remarks>
        /// <param name="errno">
        /// Error number as defined in errno.h.
        /// </param>
        /// <returns>
        /// #GIOErrorEnum value for the given errno.h error number.
        /// </returns>
        [System.Runtime.InteropServices.DllImportAttribute("gio-2.0", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        /* <type name="IOErrorEnum" type="GIOErrorEnum" /> */
        /* transfer-ownership:none direction:in */
        private static extern GISharp.Lib.Gio.IOErrorEnum g_io_error_from_errno(
        /* <type name="gint" type="gint" /> */
        /* transfer-ownership:none direction:in */
        int errno);
        static partial void CheckFromErrnoArgs(int errno);

        /// <include file="IOErrorEnum.xmldoc" path="declaration/member[@name='IOErrorEnumDomain.FromErrno(int)']/*" />
        public static GISharp.Lib.Gio.IOErrorEnum FromErrno(int errno)
        {
            CheckFromErrnoArgs(errno);
            var errno_ = (int)errno;
            var ret_ = g_io_error_from_errno(errno_);
            GISharp.Runtime.GMarshal.PopUnhandledException();
            var ret = (GISharp.Lib.Gio.IOErrorEnum)ret_;
            return ret;
        }

        /// <summary>
        /// Gets the GIO Error Quark.
        /// </summary>
        /// <returns>
        /// a #GQuark.
        /// </returns>
        [System.Runtime.InteropServices.DllImportAttribute("gio-2.0", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        /* <type name="GLib.Quark" type="GQuark" /> */
        /* transfer-ownership:none direction:in */
        private static extern GISharp.Lib.GLib.Quark g_io_error_quark();
        static partial void CheckGetQuarkArgs();

        private static GISharp.Lib.GLib.Quark GetQuark()
        {
            CheckGetQuarkArgs();
            var ret_ = g_io_error_quark();
            GISharp.Runtime.GMarshal.PopUnhandledException();
            var ret = (GISharp.Lib.GLib.Quark)ret_;
            return ret;
        }

        [System.Runtime.InteropServices.DllImportAttribute("gio-2.0", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        /* <type name="GType" type="GType" /> */
        /* transfer-ownership:full direction:in */
        private static extern GISharp.Runtime.GType g_io_error_enum_get_type();
    }
}