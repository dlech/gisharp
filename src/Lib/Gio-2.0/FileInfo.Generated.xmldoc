<declaration>

<member name='FileInfo.ContentType'>
<summary>
Gets the file's content type.
</summary>
</member>

<member name='FileInfo.DeletionDate'>
<summary>
Returns the #GDateTime representing the deletion date of the file, as
available in G_FILE_ATTRIBUTE_TRASH_DELETION_DATE. If the
G_FILE_ATTRIBUTE_TRASH_DELETION_DATE attribute is unset, <c>null</c> is returned.
</summary>
</member>

<member name='FileInfo.DisplayName'>
<summary>
Gets a display name for a file. This is guaranteed to always be set.
</summary>
</member>

<member name='FileInfo.EditName'>
<summary>
Gets the edit name for a file.
</summary>
</member>

<member name='FileInfo.Etag'>
<summary>
Gets the [entity tag][gfile-etag] for a given
<see cref="FileInfo"/>. See %G_FILE_ATTRIBUTE_ETAG_VALUE.
</summary>
</member>

<member name='FileInfo.FileType'>
<summary>
Gets a file's type (whether it is a regular file, symlink, etc).
This is different from the file's content type, see <see cref="FileInfo.GetContentType()"/>.
</summary>
</member>

<member name='FileInfo.Icon'>
<summary>
Gets the icon for a file.
</summary>
</member>

<member name='FileInfo.IsBackup'>
<summary>
Checks if a file is a backup file.
</summary>
</member>

<member name='FileInfo.IsHidden'>
<summary>
Checks if a file is hidden.
</summary>
</member>

<member name='FileInfo.IsSymlink'>
<summary>
Checks if a file is a symlink.
</summary>
</member>

<member name='FileInfo.ModificationDateTime'>
<summary>
Gets the modification time of the current this instance and returns it as a
#GDateTime.
</summary>
<remarks>
This requires the %G_FILE_ATTRIBUTE_TIME_MODIFIED attribute. If
%G_FILE_ATTRIBUTE_TIME_MODIFIED_USEC is provided, the resulting #GDateTime
will have microsecond precision.
</remarks>
</member>

<member name='FileInfo.Name'>
<summary>
Gets the name for a file. This is guaranteed to always be set.
</summary>
</member>

<member name='FileInfo.Size'>
<summary>
Gets the file's size.
</summary>
</member>

<member name='FileInfo.SortOrder'>
<summary>
Gets the value of the sort_order attribute from the <see cref="FileInfo"/>.
See %G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER.
</summary>
</member>

<member name='FileInfo.SymbolicIcon'>
<summary>
Gets the symbolic icon for a file.
</summary>
</member>

<member name='FileInfo.SymlinkTarget'>
<summary>
Gets the symlink target for a given <see cref="FileInfo"/>.
</summary>
</member>

<member name='FileInfo.FileInfo()'>
<summary>
Creates a new file info structure.
</summary>
</member>

<member name='FileInfo.ClearStatus()'>
<summary>
Clears the status information from this instance.
</summary>
</member>

<member name='FileInfo.CopyInto(GISharp.Lib.Gio.FileInfo)'>
<summary>
First clears all of the [GFileAttribute][gio-GFileAttribute] of <paramref name="destInfo"/>,
and then copies all of the file attributes from this instance to <paramref name="destInfo"/>.
</summary>
<param name="destInfo">
destination to copy attributes to.
</param>
</member>

<member name='FileInfo.Dup()'>
<summary>
Duplicates a file info structure.
</summary>
<returns>
a duplicate <see cref="FileInfo"/> of this instance.
</returns>
</member>

<member name='FileInfo.GetAttributeAsString(GISharp.Lib.GLib.UnownedUtf8)'>
<summary>
Gets the value of a attribute, formatted as a string.
This escapes things as needed to make the string valid
UTF-8.
</summary>
<param name="attribute">
a file attribute key.
</param>
<returns>
a UTF-8 string associated with the given <paramref name="attribute"/>, or
   <c>null</c> if the attribute wasnâ€™t set.
   When you're done with the string it must be freed with g_free().
</returns>
</member>

<member name='FileInfo.GetAttributeBoolean(GISharp.Lib.GLib.UnownedUtf8)'>
<summary>
Gets the value of a boolean attribute. If the attribute does not
contain a boolean value, <c>false</c> will be returned.
</summary>
<param name="attribute">
a file attribute key.
</param>
<returns>
the boolean value contained within the attribute.
</returns>
</member>

<member name='FileInfo.GetAttributeByteString(GISharp.Lib.GLib.UnownedUtf8)'>
<summary>
Gets the value of a byte string attribute. If the attribute does
not contain a byte string, <c>null</c> will be returned.
</summary>
<param name="attribute">
a file attribute key.
</param>
<returns>
the contents of the <paramref name="attribute"/> value as a byte string, or
<c>null</c> otherwise.
</returns>
</member>

<member name='FileInfo.TryGetAttributeData(GISharp.Lib.GLib.UnownedUtf8,GISharp.Lib.Gio.FileAttributeType,System.IntPtr,GISharp.Lib.Gio.FileAttributeStatus)'>
<summary>
Gets the attribute type, value and status for an attribute key.
</summary>
<param name="attribute">
a file attribute key
</param>
<param name="type">
return location for the attribute type, or <c>null</c>
</param>
<param name="valuePp">
return location for the
   attribute value, or <c>null</c>; the attribute value will not be <c>null</c>
</param>
<param name="status">
return location for the attribute status, or <c>null</c>
</param>
<returns>
<c>true</c> if this instance has an attribute named <paramref name="attribute"/>,
     <c>false</c> otherwise.
</returns>
</member>

<member name='FileInfo.GetAttributeInt32(GISharp.Lib.GLib.UnownedUtf8)'>
<summary>
Gets a signed 32-bit integer contained within the attribute. If the
attribute does not contain a signed 32-bit integer, or is invalid,
0 will be returned.
</summary>
<param name="attribute">
a file attribute key.
</param>
<returns>
a signed 32-bit integer from the attribute.
</returns>
</member>

<member name='FileInfo.GetAttributeInt64(GISharp.Lib.GLib.UnownedUtf8)'>
<summary>
Gets a signed 64-bit integer contained within the attribute. If the
attribute does not contain a signed 64-bit integer, or is invalid,
0 will be returned.
</summary>
<param name="attribute">
a file attribute key.
</param>
<returns>
a signed 64-bit integer from the attribute.
</returns>
</member>

<member name='FileInfo.GetAttributeObject(GISharp.Lib.GLib.UnownedUtf8)'>
<summary>
Gets the value of a #GObject attribute. If the attribute does
not contain a #GObject, <c>null</c> will be returned.
</summary>
<param name="attribute">
a file attribute key.
</param>
<returns>
a #GObject associated with the given <paramref name="attribute"/>,
or <c>null</c> otherwise.
</returns>
</member>

<member name='FileInfo.GetAttributeStatus(GISharp.Lib.GLib.UnownedUtf8)'>
<summary>
Gets the attribute status for an attribute key.
</summary>
<param name="attribute">
a file attribute key
</param>
<returns>
a <see cref="FileAttributeStatus"/> for the given <paramref name="attribute"/>, or
   <see cref="FileAttributeStatus.Unset"/> if the key is invalid.
</returns>
</member>

<member name='FileInfo.GetAttributeString(GISharp.Lib.GLib.UnownedUtf8)'>
<summary>
Gets the value of a string attribute. If the attribute does
not contain a string, <c>null</c> will be returned.
</summary>
<param name="attribute">
a file attribute key.
</param>
<returns>
the contents of the <paramref name="attribute"/> value as a UTF-8 string,
or <c>null</c> otherwise.
</returns>
</member>

<member name='FileInfo.GetAttributeStringv(GISharp.Lib.GLib.UnownedUtf8)'>
<summary>
Gets the value of a stringv attribute. If the attribute does
not contain a stringv, <c>null</c> will be returned.
</summary>
<param name="attribute">
a file attribute key.
</param>
<returns>
the contents of the <paramref name="attribute"/> value as a stringv,
or <c>null</c> otherwise. Do not free. These returned strings are UTF-8.
</returns>
</member>

<member name='FileInfo.GetAttributeType(GISharp.Lib.GLib.UnownedUtf8)'>
<summary>
Gets the attribute type for an attribute key.
</summary>
<param name="attribute">
a file attribute key.
</param>
<returns>
a <see cref="FileAttributeType"/> for the given <paramref name="attribute"/>, or
<see cref="FileAttributeType.Invalid"/> if the key is not set.
</returns>
</member>

<member name='FileInfo.GetAttributeUint32(GISharp.Lib.GLib.UnownedUtf8)'>
<summary>
Gets an unsigned 32-bit integer contained within the attribute. If the
attribute does not contain an unsigned 32-bit integer, or is invalid,
0 will be returned.
</summary>
<param name="attribute">
a file attribute key.
</param>
<returns>
an unsigned 32-bit integer from the attribute.
</returns>
</member>

<member name='FileInfo.GetAttributeUint64(GISharp.Lib.GLib.UnownedUtf8)'>
<summary>
Gets a unsigned 64-bit integer contained within the attribute. If the
attribute does not contain an unsigned 64-bit integer, or is invalid,
0 will be returned.
</summary>
<param name="attribute">
a file attribute key.
</param>
<returns>
a unsigned 64-bit integer from the attribute.
</returns>
</member>

<member name='FileInfo.GetModificationTime(GISharp.Lib.GLib.TimeVal)'>
<summary>
Gets the modification time of the current this instance and sets it
in <paramref name="result"/>.
</summary>
<param name="result">
a #GTimeVal.
</param>
</member>

<member name='FileInfo.HasAttribute(GISharp.Lib.GLib.UnownedUtf8)'>
<summary>
Checks if a file info structure has an attribute named <paramref name="attribute"/>.
</summary>
<param name="attribute">
a file attribute key.
</param>
<returns>
<c>true</c> if this instance has an attribute named <paramref name="attribute"/>,
    <c>false</c> otherwise.
</returns>
</member>

<member name='FileInfo.HasNamespace(GISharp.Lib.GLib.UnownedUtf8)'>
<summary>
Checks if a file info structure has an attribute in the
specified <paramref name="nameSpace"/>.
</summary>
<param name="nameSpace">
a file attribute namespace.
</param>
<returns>
<c>true</c> if this instance has an attribute in <paramref name="nameSpace"/>,
    <c>false</c> otherwise.
</returns>
</member>

<member name='FileInfo.ListAttributes(GISharp.Lib.GLib.NullableUnownedUtf8)'>
<summary>
Lists the file info structure's attributes.
</summary>
<param name="nameSpace">
a file attribute key's namespace, or <c>null</c> to list
  all attributes.
</param>
<returns>
a
null-terminated array of strings of all of the possible attribute
types for the given <paramref name="nameSpace"/>, or <c>null</c> on error.
</returns>
</member>

<member name='FileInfo.RemoveAttribute(GISharp.Lib.GLib.UnownedUtf8)'>
<summary>
Removes all cases of <paramref name="attribute"/> from this instance if it exists.
</summary>
<param name="attribute">
a file attribute key.
</param>
</member>

<member name='FileInfo.SetAttribute(GISharp.Lib.GLib.UnownedUtf8,GISharp.Lib.Gio.FileAttributeType,System.IntPtr)'>
<summary>
Sets the <paramref name="attribute"/> to contain the given value, if possible. To unset the
attribute, use <see cref="FileAttributeType.Invalid"/> for <paramref name="type"/>.
</summary>
<param name="attribute">
a file attribute key.
</param>
<param name="type">
a <see cref="FileAttributeType"/>
</param>
<param name="valueP">
pointer to the value
</param>
</member>

<member name='FileInfo.SetAttributeBoolean(GISharp.Lib.GLib.UnownedUtf8,bool)'>
<summary>
Sets the <paramref name="attribute"/> to contain the given <paramref name="attrValue"/>,
if possible.
</summary>
<param name="attribute">
a file attribute key.
</param>
<param name="attrValue">
a boolean value.
</param>
</member>

<member name='FileInfo.SetAttributeByteString(GISharp.Lib.GLib.UnownedUtf8,GISharp.Lib.GLib.UnownedUtf8)'>
<summary>
Sets the <paramref name="attribute"/> to contain the given <paramref name="attrValue"/>,
if possible.
</summary>
<param name="attribute">
a file attribute key.
</param>
<param name="attrValue">
a byte string.
</param>
</member>

<member name='FileInfo.SetAttributeInt32(GISharp.Lib.GLib.UnownedUtf8,int)'>
<summary>
Sets the <paramref name="attribute"/> to contain the given <paramref name="attrValue"/>,
if possible.
</summary>
<param name="attribute">
a file attribute key.
</param>
<param name="attrValue">
a signed 32-bit integer
</param>
</member>

<member name='FileInfo.SetAttributeInt64(GISharp.Lib.GLib.UnownedUtf8,long)'>
<summary>
Sets the <paramref name="attribute"/> to contain the given <paramref name="attrValue"/>,
if possible.
</summary>
<param name="attribute">
attribute name to set.
</param>
<param name="attrValue">
int64 value to set attribute to.
</param>
</member>

<member name='FileInfo.SetAttributeMask(GISharp.Lib.Gio.FileAttributeMatcher)'>
<summary>
Sets <paramref name="mask"/> on this instance to match specific attribute types.
</summary>
<param name="mask">
a <see cref="FileAttributeMatcher"/>.
</param>
</member>

<member name='FileInfo.SetAttributeObject(GISharp.Lib.GLib.UnownedUtf8,GISharp.Lib.GObject.Object)'>
<summary>
Sets the <paramref name="attribute"/> to contain the given <paramref name="attrValue"/>,
if possible.
</summary>
<param name="attribute">
a file attribute key.
</param>
<param name="attrValue">
a #GObject.
</param>
</member>

<member name='FileInfo.SetAttributeStatus(GISharp.Lib.GLib.UnownedUtf8,GISharp.Lib.Gio.FileAttributeStatus)'>
<summary>
Sets the attribute status for an attribute key. This is only
needed by external code that implement <see cref="File.SetAttributesFromInfo(GISharp.Lib.Gio.IFile,GISharp.Lib.Gio.FileInfo,GISharp.Lib.Gio.FileQueryInfoFlags,GISharp.Lib.Gio.Cancellable)"/>
or similar functions.
</summary>
<remarks>
The attribute must exist in this instance for this to work. Otherwise <c>false</c>
is returned and this instance is unchanged.
</remarks>
<param name="attribute">
a file attribute key
</param>
<param name="status">
a <see cref="FileAttributeStatus"/>
</param>
<returns>
<c>true</c> if the status was changed, <c>false</c> if the key was not set.
</returns>
</member>

<member name='FileInfo.SetAttributeString(GISharp.Lib.GLib.UnownedUtf8,GISharp.Lib.GLib.UnownedUtf8)'>
<summary>
Sets the <paramref name="attribute"/> to contain the given <paramref name="attrValue"/>,
if possible.
</summary>
<param name="attribute">
a file attribute key.
</param>
<param name="attrValue">
a UTF-8 string.
</param>
</member>

<member name='FileInfo.SetAttributeStringv(GISharp.Lib.GLib.UnownedUtf8,GISharp.Lib.GLib.Strv)'>
<summary>
Sets the <paramref name="attribute"/> to contain the given <paramref name="attrValue"/>,
if possible.
</summary>
<remarks>
Sinze: 2.22
</remarks>
<param name="attribute">
a file attribute key
</param>
<param name="attrValue">
a <c>null</c>
  terminated array of UTF-8 strings.
</param>
</member>

<member name='FileInfo.SetAttributeUint32(GISharp.Lib.GLib.UnownedUtf8,uint)'>
<summary>
Sets the <paramref name="attribute"/> to contain the given <paramref name="attrValue"/>,
if possible.
</summary>
<param name="attribute">
a file attribute key.
</param>
<param name="attrValue">
an unsigned 32-bit integer.
</param>
</member>

<member name='FileInfo.SetAttributeUint64(GISharp.Lib.GLib.UnownedUtf8,ulong)'>
<summary>
Sets the <paramref name="attribute"/> to contain the given <paramref name="attrValue"/>,
if possible.
</summary>
<param name="attribute">
a file attribute key.
</param>
<param name="attrValue">
an unsigned 64-bit integer.
</param>
</member>

<member name='FileInfo.SetModificationTime(GISharp.Lib.GLib.TimeVal)'>
<summary>
Sets the %G_FILE_ATTRIBUTE_TIME_MODIFIED and
%G_FILE_ATTRIBUTE_TIME_MODIFIED_USEC attributes in the file info to the
given time value.
</summary>
<param name="mtime">
a #GTimeVal.
</param>
</member>

<member name='FileInfo.UnsetAttributeMask()'>
<summary>
Unsets a mask set by <see cref="FileInfo.SetAttributeMask(GISharp.Lib.Gio.FileAttributeMatcher)"/>, if one
is set.
</summary>
</member>

<member name='FileInfo'>
<summary>
Functionality for manipulating basic metadata for files. <see cref="FileInfo"/>
implements methods for getting information that all files should
contain, and allows for manipulation of extended attributes.
</summary>
<remarks>
See [GFileAttribute][gio-GFileAttribute] for more information on how
GIO handles file attributes.

To obtain a <see cref="FileInfo"/> for a <see cref="IFile"/>, use <see cref="File.QueryInfo(GISharp.Lib.Gio.IFile,GISharp.Lib.GLib.UnownedUtf8,GISharp.Lib.Gio.FileQueryInfoFlags,GISharp.Lib.Gio.Cancellable)"/> (or its
async variant). To obtain a <see cref="FileInfo"/> for a file input or output
stream, use <see cref="FileInputStream.QueryInfo(GISharp.Lib.GLib.UnownedUtf8,GISharp.Lib.Gio.Cancellable)"/> or
<see cref="FileOutputStream.QueryInfo(GISharp.Lib.GLib.UnownedUtf8,GISharp.Lib.Gio.Cancellable)"/> (or their async variants).

To change the actual attributes of a file, you should then set the
attribute in the <see cref="FileInfo"/> and call <see cref="File.SetAttributesFromInfo(GISharp.Lib.Gio.IFile,GISharp.Lib.Gio.FileInfo,GISharp.Lib.Gio.FileQueryInfoFlags,GISharp.Lib.Gio.Cancellable)"/>
or <see cref="File.SetAttributesAsync(GISharp.Lib.Gio.IFile,GISharp.Lib.Gio.FileInfo,GISharp.Lib.Gio.FileQueryInfoFlags,int,GISharp.Lib.Gio.Cancellable)"/> on a GFile.

However, not all attributes can be changed in the file. For instance,
the actual size of a file cannot be changed via <see cref="FileInfo.SetSize(long)"/>.
You may call <see cref="File.QuerySettableAttributes(GISharp.Lib.Gio.IFile,GISharp.Lib.Gio.Cancellable)"/> and
<see cref="File.QueryWritableNamespaces(GISharp.Lib.Gio.IFile,GISharp.Lib.Gio.Cancellable)"/> to discover the settable attributes
of a particular file at runtime.

<see cref="FileAttributeMatcher"/> allows for searching through a <see cref="FileInfo"/> for
attributes.
</remarks>
</member>

</declaration>
