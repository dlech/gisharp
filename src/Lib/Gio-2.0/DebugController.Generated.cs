// SPDX-License-Identifier: MIT
// ATTENTION: This file is automatically generated. Do not edit manually.
#nullable enable
namespace GISharp.Lib.Gio
{
    /// <include file="DebugController.xmldoc" path="declaration/member[@name='IDebugController']/*" />
    [GISharp.Runtime.SinceAttribute("2.72")]
    [GISharp.Runtime.GTypeAttribute("GDebugController", IsProxyForUnmanagedType = true)]
    [GISharp.Runtime.GTypeStructAttribute(typeof(DebugControllerInterface))]
    public unsafe partial interface IDebugController : GISharp.Lib.Gio.IInitable, GISharp.Lib.GObject.GInterface<GISharp.Lib.GObject.Object>
    {
        private static readonly GISharp.Runtime.GType _GType = g_debug_controller_get_type();

        /// <include file="DebugController.xmldoc" path="declaration/member[@name='IDebugController.DebugEnabled']/*" />
        [GISharp.Runtime.SinceAttribute("2.72")]
        [GISharp.Runtime.GPropertyAttribute("debug-enabled")]
        bool DebugEnabled { get; set; }

        [System.Runtime.InteropServices.DllImportAttribute("gio-2.0", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        /* <type name="GType" type="GType" /> */
        /* transfer-ownership:full direction:in */
        private static extern GISharp.Runtime.GType g_debug_controller_get_type();
    }

    /// <summary>
    /// Extension methods for <see cref="IDebugController"/>
    /// </summary>
    public static unsafe partial class DebugController
    {
        /// <summary>
        /// The unmanaged data structure.
        /// </summary>
        public struct UnmanagedStruct
        {
        }

        /// <summary>
        /// Get the value of #GDebugController:debug-enabled.
        /// </summary>
        /// <param name="self">
        /// a #GDebugController
        /// </param>
        /// <returns>
        /// %TRUE if debug output should be exposed, %FALSE otherwise
        /// </returns>
        [GISharp.Runtime.SinceAttribute("2.72")]
        [System.Runtime.InteropServices.DllImportAttribute("gio-2.0", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        /* <type name="gboolean" type="gboolean" /> */
        /* transfer-ownership:none direction:in */
        private static extern GISharp.Runtime.Boolean g_debug_controller_get_debug_enabled(
        /* <type name="DebugController" type="GDebugController*" is-pointer="1" /> */
        /* transfer-ownership:none direction:in */
        GISharp.Lib.Gio.DebugController.UnmanagedStruct* self);
        static partial void CheckGetDebugEnabledArgs(this GISharp.Lib.Gio.IDebugController self);

        /// <include file="DebugController.xmldoc" path="declaration/member[@name='DebugController.GetDebugEnabled(GISharp.Lib.Gio.IDebugController)']/*" />
        [GISharp.Runtime.SinceAttribute("2.72")]
        public static bool GetDebugEnabled(this GISharp.Lib.Gio.IDebugController self)
        {
            CheckGetDebugEnabledArgs(self);
            var self_ = (GISharp.Lib.Gio.DebugController.UnmanagedStruct*)self.UnsafeHandle;
            var ret_ = g_debug_controller_get_debug_enabled(self_);
            GISharp.Runtime.GMarshal.PopUnhandledException();
            var ret = GISharp.Runtime.BooleanExtensions.IsTrue(ret_);
            return ret;
        }

        /// <summary>
        /// Set the value of #GDebugController:debug-enabled.
        /// </summary>
        /// <param name="self">
        /// a #GDebugController
        /// </param>
        /// <param name="debugEnabled">
        /// %TRUE if debug output should be exposed, %FALSE otherwise
        /// </param>
        [GISharp.Runtime.SinceAttribute("2.72")]
        [System.Runtime.InteropServices.DllImportAttribute("gio-2.0", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        /* <type name="none" type="void" /> */
        /* transfer-ownership:none direction:in */
        private static extern void g_debug_controller_set_debug_enabled(
        /* <type name="DebugController" type="GDebugController*" is-pointer="1" /> */
        /* transfer-ownership:none direction:in */
        GISharp.Lib.Gio.DebugController.UnmanagedStruct* self,
        /* <type name="gboolean" type="gboolean" /> */
        /* transfer-ownership:none direction:in */
        GISharp.Runtime.Boolean debugEnabled);
        static partial void CheckSetDebugEnabledArgs(this GISharp.Lib.Gio.IDebugController self, bool debugEnabled);

        /// <include file="DebugController.xmldoc" path="declaration/member[@name='DebugController.SetDebugEnabled(GISharp.Lib.Gio.IDebugController,bool)']/*" />
        [GISharp.Runtime.SinceAttribute("2.72")]
        public static void SetDebugEnabled(this GISharp.Lib.Gio.IDebugController self, bool debugEnabled)
        {
            CheckSetDebugEnabledArgs(self, debugEnabled);
            var self_ = (GISharp.Lib.Gio.DebugController.UnmanagedStruct*)self.UnsafeHandle;
            var debugEnabled_ = GISharp.Runtime.BooleanExtensions.ToBoolean(debugEnabled);
            g_debug_controller_set_debug_enabled(self_, debugEnabled_);
            GISharp.Runtime.GMarshal.PopUnhandledException();
        }
    }
}