<declaration>

<member name='IActionMap.DoAddAction(GISharp.Lib.Gio.IAction)'>
<summary>
Adds an action to this instance.
</summary>
<remarks>
<para>
If the action map already contains an action with the same name
as <paramref name="action"/> then the old action is dropped from the action map.
</para>
<para>
The action map takes its own reference on <paramref name="action"/>.
</para>
</remarks>
<param name="action">
a <see cref="IAction"/>
</param>
</member>

<member name='IActionMap.DoLookupAction(GISharp.Runtime.UnownedUtf8)'>
<summary>
Looks up the action with the name <paramref name="actionName"/> in this instance.
</summary>
<remarks>
<para>
If no such action exists, returns <c>null</c>.
</para>
</remarks>
<param name="actionName">
the name of an action
</param>
<returns>
a <see cref="IAction"/>, or <c>null</c>
</returns>
</member>

<member name='IActionMap.DoRemoveAction(GISharp.Runtime.UnownedUtf8)'>
<summary>
Removes the named action from the action map.
</summary>
<remarks>
<para>
If no action of this name is in the map then nothing happens.
</para>
</remarks>
<param name="actionName">
the name of the action
</param>
</member>

<member name='IActionMap'>
<summary>
The GActionMap interface is implemented by <see cref="IActionGroup"/>
implementations that operate by containing a number of
named <see cref="IAction"/> instances, such as <see cref="T:SimpleActionGroup"/>.
</summary>
<remarks>
<para>
One useful application of this interface is to map the
names of actions from various action groups to unique,
prefixed names (e.g. by prepending "app." or "win.").
This is the motivation for the 'Map' part of the interface
name.
</para>
</remarks>
</member>

<member name='ActionMap.AddAction(GISharp.Lib.Gio.IActionMap,GISharp.Lib.Gio.IAction)'>
<summary>
Adds an action to the <paramref name="actionMap"/>.
</summary>
<remarks>
<para>
If the action map already contains an action with the same name
as <paramref name="action"/> then the old action is dropped from the action map.
</para>
<para>
The action map takes its own reference on <paramref name="action"/>.
</para>
</remarks>
<param name="actionMap">
a <see cref="IActionMap"/>
</param>
<param name="action">
a <see cref="IAction"/>
</param>
</member>

<member name='ActionMap.LookupAction(GISharp.Lib.Gio.IActionMap,GISharp.Runtime.UnownedUtf8)'>
<summary>
Looks up the action with the name <paramref name="actionName"/> in <paramref name="actionMap"/>.
</summary>
<remarks>
<para>
If no such action exists, returns <c>null</c>.
</para>
</remarks>
<param name="actionMap">
a <see cref="IActionMap"/>
</param>
<param name="actionName">
the name of an action
</param>
<returns>
a <see cref="IAction"/>, or <c>null</c>
</returns>
</member>

<member name='ActionMap.RemoveAction(GISharp.Lib.Gio.IActionMap,GISharp.Runtime.UnownedUtf8)'>
<summary>
Removes the named action from the action map.
</summary>
<remarks>
<para>
If no action of this name is in the map then nothing happens.
</para>
</remarks>
<param name="actionMap">
a <see cref="IActionMap"/>
</param>
<param name="actionName">
the name of the action
</param>
</member>

</declaration>
