<declaration>

<member name='PixbufAlphaMode.Bilevel'>
<summary>
A bilevel clipping mask (black and white)
 will be created and used to draw the image.  Pixels below 0.5 opacity
 will be considered fully transparent, and all others will be
 considered fully opaque.
</summary>
</member>

<member name='PixbufAlphaMode.Full'>
<summary>
For now falls back to #GDK_PIXBUF_ALPHA_BILEVEL.
 In the future it will do full alpha compositing.
</summary>
</member>

<member name='PixbufAlphaMode'>
<summary>
Control the alpha channel for drawables.
</summary>
<remarks>
<para>
These values can be passed to gdk_pixbuf_xlib_render_to_drawable_alpha()
in gdk-pixbuf-xlib to control how the alpha channel of an image should
be handled.
</para>
<para>
This function can create a bilevel clipping mask (black and white) and use
it while painting the image.
</para>
<para>
In the future, when the X Window System gets an alpha channel extension,
it will be possible to do full alpha compositing onto arbitrary drawables.
For now both cases fall back to a bilevel clipping mask.
</para>
</remarks>
</member>

</declaration>
