// SPDX-License-Identifier: MIT
// ATTENTION: This file is automatically generated. Do not edit manually.
#nullable enable
namespace GISharp.Lib.Gtk
{
    /// <include file="AccessibleInvalidState.xmldoc" path="declaration/member[@name='AccessibleInvalidState']/*" />
    [GISharp.Runtime.GTypeAttribute("GtkAccessibleInvalidState", IsProxyForUnmanagedType = true)]
    public enum AccessibleInvalidState
    {
        /// <include file="AccessibleInvalidState.xmldoc" path="declaration/member[@name='AccessibleInvalidState.False']/*" />
        False = 0,
        /// <include file="AccessibleInvalidState.xmldoc" path="declaration/member[@name='AccessibleInvalidState.True']/*" />
        True = 1,
        /// <include file="AccessibleInvalidState.xmldoc" path="declaration/member[@name='AccessibleInvalidState.Grammar']/*" />
        Grammar = 2,
        /// <include file="AccessibleInvalidState.xmldoc" path="declaration/member[@name='AccessibleInvalidState.Spelling']/*" />
        Spelling = 3
    }

    /// <summary>
    /// Extension methods for <see cref="AccessibleInvalidState"/>.
    /// </summary>
    public static unsafe partial class AccessibleInvalidStateExtensions
    {
        private static readonly GISharp.Lib.GObject.GType _GType = gtk_accessible_invalid_state_get_type();

        [System.Runtime.InteropServices.DllImportAttribute("gtk-4.1", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        /* <type name="GType" type="GType" managed-name="GISharp.Lib.GObject.GType" /> */
        /* transfer-ownership:full direction:in */
        private static extern GISharp.Lib.GObject.GType gtk_accessible_invalid_state_get_type();
    }
}