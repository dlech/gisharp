// SPDX-License-Identifier: MIT
// ATTENTION: This file is automatically generated. Do not edit manually.
#nullable enable
namespace GISharp.Lib.Gtk
{
    /// <include file="DirectionType.xmldoc" path="declaration/member[@name='DirectionType']/*" />
    [GISharp.Runtime.GTypeAttribute("GtkDirectionType", IsProxyForUnmanagedType = true)]
    public enum DirectionType
    {
        /// <include file="DirectionType.xmldoc" path="declaration/member[@name='DirectionType.TabForward']/*" />
        TabForward = 0,
        /// <include file="DirectionType.xmldoc" path="declaration/member[@name='DirectionType.TabBackward']/*" />
        TabBackward = 1,
        /// <include file="DirectionType.xmldoc" path="declaration/member[@name='DirectionType.Up']/*" />
        Up = 2,
        /// <include file="DirectionType.xmldoc" path="declaration/member[@name='DirectionType.Down']/*" />
        Down = 3,
        /// <include file="DirectionType.xmldoc" path="declaration/member[@name='DirectionType.Left']/*" />
        Left = 4,
        /// <include file="DirectionType.xmldoc" path="declaration/member[@name='DirectionType.Right']/*" />
        Right = 5
    }

    /// <summary>
    /// Extension methods for <see cref="DirectionType"/>.
    /// </summary>
    public static unsafe partial class DirectionTypeExtensions
    {
        private static readonly GISharp.Runtime.GType _GType = gtk_direction_type_get_type();

        [System.Runtime.InteropServices.DllImportAttribute("gtk-4.1", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        /* <type name="GType" type="GType" /> */
        /* transfer-ownership:full direction:in */
        private static extern GISharp.Runtime.GType gtk_direction_type_get_type();
    }
}