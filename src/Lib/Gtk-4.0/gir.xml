<?xml version="1.0" encoding="utf-8"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2" xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0" xmlns:gs="http://gisharp.org/introspection/gisharp/1.0">
  <include name="Gdk" version="4.0" gs:managed-name="Gdk" />
  <include name="Gsk" version="4.0" gs:managed-name="Gsk" />
  <package name="gtk4" gs:managed-name="Gtk4" />
  <c:include name="gtk/gtk.h" gs:managed-name="Gtk/gtk.h" />
  <namespace name="Gtk" version="4.0" shared-library="libgtk-4.1.dylib" c:identifier-prefixes="Gtk" c:symbol-prefixes="gtk" gs:managed-name="Gtk">
    <enumeration name="AccessibleAutocomplete" glib:type-name="GtkAccessibleAutocomplete" glib:get-type="gtk_accessible_autocomplete_get_type" c:type="GtkAccessibleAutocomplete" gs:managed-name="AccessibleAutocomplete">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1597">The possible values for the %GTK_ACCESSIBLE_PROPERTY_AUTOCOMPLETE
accessible property.</doc>
      <member name="none" value="0" c:identifier="GTK_ACCESSIBLE_AUTOCOMPLETE_NONE" glib:nick="none" glib:name="GTK_ACCESSIBLE_AUTOCOMPLETE_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1599">Automatic suggestions are not displayed.</doc>
      </member>
      <member name="inline" value="1" c:identifier="GTK_ACCESSIBLE_AUTOCOMPLETE_INLINE" glib:nick="inline" glib:name="GTK_ACCESSIBLE_AUTOCOMPLETE_INLINE" gs:managed-name="Inline">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1600">When a user is providing input, text
   suggesting one way to complete the provided input may be dynamically
   inserted after the caret.</doc>
      </member>
      <member name="list" value="2" c:identifier="GTK_ACCESSIBLE_AUTOCOMPLETE_LIST" glib:nick="list" glib:name="GTK_ACCESSIBLE_AUTOCOMPLETE_LIST" gs:managed-name="List">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1603">When a user is providing input, an element
   containing a collection of values that could complete the provided input
   may be displayed.</doc>
      </member>
      <member name="both" value="3" c:identifier="GTK_ACCESSIBLE_AUTOCOMPLETE_BOTH" glib:nick="both" glib:name="GTK_ACCESSIBLE_AUTOCOMPLETE_BOTH" gs:managed-name="Both">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1606">When a user is providing input, an element
   containing a collection of values that could complete the provided input
   may be displayed. If displayed, one value in the collection is automatically
   selected, and the text needed to complete the automatically selected value
   appears after the caret in the input.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_accessible_autocomplete_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="AccessibleInvalidState" glib:type-name="GtkAccessibleInvalidState" glib:get-type="gtk_accessible_invalid_state_get_type" c:type="GtkAccessibleInvalidState" gs:managed-name="AccessibleInvalidState">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1576">The possible values for the %GTK_ACCESSIBLE_STATE_INVALID
accessible state.

Note that the %GTK_ACCESSIBLE_INVALID_FALSE and
%GTK_ACCESSIBLE_INVALID_TRUE have the same values
as %FALSE and %TRUE.</doc>
      <member name="false" value="0" c:identifier="GTK_ACCESSIBLE_INVALID_FALSE" glib:nick="false" glib:name="GTK_ACCESSIBLE_INVALID_FALSE" gs:managed-name="False">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1578">There are no detected errors in the value</doc>
      </member>
      <member name="true" value="1" c:identifier="GTK_ACCESSIBLE_INVALID_TRUE" glib:nick="true" glib:name="GTK_ACCESSIBLE_INVALID_TRUE" gs:managed-name="True">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1579">The value entered by the user has failed validation</doc>
      </member>
      <member name="grammar" value="2" c:identifier="GTK_ACCESSIBLE_INVALID_GRAMMAR" glib:nick="grammar" glib:name="GTK_ACCESSIBLE_INVALID_GRAMMAR" gs:managed-name="Grammar">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1580">A grammatical error was detected</doc>
      </member>
      <member name="spelling" value="3" c:identifier="GTK_ACCESSIBLE_INVALID_SPELLING" glib:nick="spelling" glib:name="GTK_ACCESSIBLE_INVALID_SPELLING" gs:managed-name="Spelling">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1581">A spelling error was detected</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_accessible_invalid_state_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="AccessibleProperty" glib:type-name="GtkAccessibleProperty" glib:get-type="gtk_accessible_property_get_type" c:type="GtkAccessibleProperty" gs:managed-name="AccessibleProperty">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1412">The possible accessible properties of a [iface@Accessible].</doc>
      <member name="autocomplete" value="0" c:identifier="GTK_ACCESSIBLE_PROPERTY_AUTOCOMPLETE" glib:nick="autocomplete" glib:name="GTK_ACCESSIBLE_PROPERTY_AUTOCOMPLETE" gs:managed-name="Autocomplete">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1414">Indicates whether inputting text
   could trigger display of one or more predictions of the user's intended
   value for a combobox, searchbox, or textbox and specifies how predictions
   would be presented if they were made. Value type: [enum@AccessibleAutocomplete]</doc>
      </member>
      <member name="description" value="1" c:identifier="GTK_ACCESSIBLE_PROPERTY_DESCRIPTION" glib:nick="description" glib:name="GTK_ACCESSIBLE_PROPERTY_DESCRIPTION" gs:managed-name="Description">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1418">Defines a string value that describes
   or annotates the current element. Value type: string</doc>
      </member>
      <member name="has_popup" value="2" c:identifier="GTK_ACCESSIBLE_PROPERTY_HAS_POPUP" glib:nick="has-popup" glib:name="GTK_ACCESSIBLE_PROPERTY_HAS_POPUP" gs:managed-name="HasPopup">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1420">Indicates the availability and type of
   interactive popup element, such as menu or dialog, that can be triggered
   by an element.</doc>
      </member>
      <member name="key_shortcuts" value="3" c:identifier="GTK_ACCESSIBLE_PROPERTY_KEY_SHORTCUTS" glib:nick="key-shortcuts" glib:name="GTK_ACCESSIBLE_PROPERTY_KEY_SHORTCUTS" gs:managed-name="KeyShortcuts">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1423">Indicates keyboard shortcuts that an
   author has implemented to activate or give focus to an element. Value type:
   string</doc>
      </member>
      <member name="label" value="4" c:identifier="GTK_ACCESSIBLE_PROPERTY_LABEL" glib:nick="label" glib:name="GTK_ACCESSIBLE_PROPERTY_LABEL" gs:managed-name="Label">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1426">Defines a string value that labels the current
   element. Value type: string</doc>
      </member>
      <member name="level" value="5" c:identifier="GTK_ACCESSIBLE_PROPERTY_LEVEL" glib:nick="level" glib:name="GTK_ACCESSIBLE_PROPERTY_LEVEL" gs:managed-name="Level">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1428">Defines the hierarchical level of an element
   within a structure. Value type: integer</doc>
      </member>
      <member name="modal" value="6" c:identifier="GTK_ACCESSIBLE_PROPERTY_MODAL" glib:nick="modal" glib:name="GTK_ACCESSIBLE_PROPERTY_MODAL" gs:managed-name="Modal">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1430">Indicates whether an element is modal when
   displayed. Value type: boolean</doc>
      </member>
      <member name="multi_line" value="7" c:identifier="GTK_ACCESSIBLE_PROPERTY_MULTI_LINE" glib:nick="multi-line" glib:name="GTK_ACCESSIBLE_PROPERTY_MULTI_LINE" gs:managed-name="MultiLine">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1432">Indicates whether a text box accepts
   multiple lines of input or only a single line. Value type: boolean</doc>
      </member>
      <member name="multi_selectable" value="8" c:identifier="GTK_ACCESSIBLE_PROPERTY_MULTI_SELECTABLE" glib:nick="multi-selectable" glib:name="GTK_ACCESSIBLE_PROPERTY_MULTI_SELECTABLE" gs:managed-name="MultiSelectable">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1434">Indicates that the user may select
   more than one item from the current selectable descendants. Value type:
   boolean</doc>
      </member>
      <member name="orientation" value="9" c:identifier="GTK_ACCESSIBLE_PROPERTY_ORIENTATION" glib:nick="orientation" glib:name="GTK_ACCESSIBLE_PROPERTY_ORIENTATION" gs:managed-name="Orientation">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1437">Indicates whether the element's
   orientation is horizontal, vertical, or unknown/ambiguous. Value type:
   [enum@Orientation]</doc>
      </member>
      <member name="placeholder" value="10" c:identifier="GTK_ACCESSIBLE_PROPERTY_PLACEHOLDER" glib:nick="placeholder" glib:name="GTK_ACCESSIBLE_PROPERTY_PLACEHOLDER" gs:managed-name="Placeholder">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1440">Defines a short hint (a word or short
   phrase) intended to aid the user with data entry when the control has no
   value. A hint could be a sample value or a brief description of the expected
   format. Value type: string</doc>
      </member>
      <member name="read_only" value="11" c:identifier="GTK_ACCESSIBLE_PROPERTY_READ_ONLY" glib:nick="read-only" glib:name="GTK_ACCESSIBLE_PROPERTY_READ_ONLY" gs:managed-name="ReadOnly">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1444">Indicates that the element is not editable,
   but is otherwise operable. Value type: boolean</doc>
      </member>
      <member name="required" value="12" c:identifier="GTK_ACCESSIBLE_PROPERTY_REQUIRED" glib:nick="required" glib:name="GTK_ACCESSIBLE_PROPERTY_REQUIRED" gs:managed-name="Required">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1446">Indicates that user input is required on
   the element before a form may be submitted. Value type: boolean</doc>
      </member>
      <member name="role_description" value="13" c:identifier="GTK_ACCESSIBLE_PROPERTY_ROLE_DESCRIPTION" glib:nick="role-description" glib:name="GTK_ACCESSIBLE_PROPERTY_ROLE_DESCRIPTION" gs:managed-name="RoleDescription">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1448">Defines a human-readable,
   author-localized description for the role of an element. Value type: string</doc>
      </member>
      <member name="sort" value="14" c:identifier="GTK_ACCESSIBLE_PROPERTY_SORT" glib:nick="sort" glib:name="GTK_ACCESSIBLE_PROPERTY_SORT" gs:managed-name="Sort">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1450">Indicates if items in a table or grid are
   sorted in ascending or descending order. Value type: [enum@AccessibleSort]</doc>
      </member>
      <member name="value_max" value="15" c:identifier="GTK_ACCESSIBLE_PROPERTY_VALUE_MAX" glib:nick="value-max" glib:name="GTK_ACCESSIBLE_PROPERTY_VALUE_MAX" gs:managed-name="ValueMax">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1452">Defines the maximum allowed value for a
   range widget. Value type: double</doc>
      </member>
      <member name="value_min" value="16" c:identifier="GTK_ACCESSIBLE_PROPERTY_VALUE_MIN" glib:nick="value-min" glib:name="GTK_ACCESSIBLE_PROPERTY_VALUE_MIN" gs:managed-name="ValueMin">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1454">Defines the minimum allowed value for a
   range widget. Value type: double</doc>
      </member>
      <member name="value_now" value="17" c:identifier="GTK_ACCESSIBLE_PROPERTY_VALUE_NOW" glib:nick="value-now" glib:name="GTK_ACCESSIBLE_PROPERTY_VALUE_NOW" gs:managed-name="ValueNow">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1456">Defines the current value for a range widget.
   Value type: double</doc>
      </member>
      <member name="value_text" value="18" c:identifier="GTK_ACCESSIBLE_PROPERTY_VALUE_TEXT" glib:nick="value-text" glib:name="GTK_ACCESSIBLE_PROPERTY_VALUE_TEXT" gs:managed-name="ValueText">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1458">Defines the human readable text alternative
   of aria-valuenow for a range widget. Value type: string</doc>
      </member>
      <method name="init_value" c:identifier="gtk_accessible_property_init_value" gs:dll-name="gtk-4.1" gs:managed-name="InitValue" gs:extension-method="1">
        <source-position filename="../gtk/gtkaccessible.h" line="83" />
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <type name="none" c:type="void" />
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none" gs:managed-name="property" direction="in">
            <type name="AccessibleProperty" c:type="GtkAccessibleProperty" />
          </instance-parameter>
          <parameter name="value" transfer-ownership="none" gs:managed-name="value" direction="in">
            <type name="GObject.Value" c:type="GValue*" gs:is-pointer="1" />
          </parameter>
        </parameters>
        <gs:managed-parameters>
          <instance-parameter name="property" transfer-ownership="none" gs:managed-name="property" direction="in">
            <type name="AccessibleProperty" c:type="GtkAccessibleProperty" />
          </instance-parameter>
          <parameter name="value" transfer-ownership="none" gs:managed-name="value" direction="in">
            <type name="GObject.Value" c:type="GValue*" gs:is-pointer="1" />
          </parameter>
        </gs:managed-parameters>
      </method>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_accessible_property_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="AccessibleRelation" glib:type-name="GtkAccessibleRelation" glib:get-type="gtk_accessible_relation_get_type" c:type="GtkAccessibleRelation" gs:managed-name="AccessibleRelation">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1485">The possible accessible relations of a [iface@Accessible].

Accessible relations can be references to other widgets,
integers or strings.</doc>
      <member name="active_descendant" value="0" c:identifier="GTK_ACCESSIBLE_RELATION_ACTIVE_DESCENDANT" glib:nick="active-descendant" glib:name="GTK_ACCESSIBLE_RELATION_ACTIVE_DESCENDANT" gs:managed-name="ActiveDescendant">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1487">Identifies the currently active
   element when focus is on a composite widget, combobox, textbox, group,
   or application. Value type: reference</doc>
      </member>
      <member name="col_count" value="1" c:identifier="GTK_ACCESSIBLE_RELATION_COL_COUNT" glib:nick="col-count" glib:name="GTK_ACCESSIBLE_RELATION_COL_COUNT" gs:managed-name="ColCount">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1490">Defines the total number of columns
   in a table, grid, or treegrid. Value type: integer</doc>
      </member>
      <member name="col_index" value="2" c:identifier="GTK_ACCESSIBLE_RELATION_COL_INDEX" glib:nick="col-index" glib:name="GTK_ACCESSIBLE_RELATION_COL_INDEX" gs:managed-name="ColIndex">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1492">Defines an element's column index or
   position with respect to the total number of columns within a table,
   grid, or treegrid. Value type: integer</doc>
      </member>
      <member name="col_index_text" value="3" c:identifier="GTK_ACCESSIBLE_RELATION_COL_INDEX_TEXT" glib:nick="col-index-text" glib:name="GTK_ACCESSIBLE_RELATION_COL_INDEX_TEXT" gs:managed-name="ColIndexText">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1495">Defines a human readable text
  alternative of %GTK_ACCESSIBLE_RELATION_COL_INDEX. Value type: string</doc>
      </member>
      <member name="col_span" value="4" c:identifier="GTK_ACCESSIBLE_RELATION_COL_SPAN" glib:nick="col-span" glib:name="GTK_ACCESSIBLE_RELATION_COL_SPAN" gs:managed-name="ColSpan">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1497">Defines the number of columns spanned
  by a cell or gridcell within a table, grid, or treegrid. Value type: integer</doc>
      </member>
      <member name="controls" value="5" c:identifier="GTK_ACCESSIBLE_RELATION_CONTROLS" glib:nick="controls" glib:name="GTK_ACCESSIBLE_RELATION_CONTROLS" gs:managed-name="Controls">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1499">Identifies the element (or elements) whose
   contents or presence are controlled by the current element. Value type: reference</doc>
      </member>
      <member name="described_by" value="6" c:identifier="GTK_ACCESSIBLE_RELATION_DESCRIBED_BY" glib:nick="described-by" glib:name="GTK_ACCESSIBLE_RELATION_DESCRIBED_BY" gs:managed-name="DescribedBy">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1501">Identifies the element (or elements)
   that describes the object. Value type: reference</doc>
      </member>
      <member name="details" value="7" c:identifier="GTK_ACCESSIBLE_RELATION_DETAILS" glib:nick="details" glib:name="GTK_ACCESSIBLE_RELATION_DETAILS" gs:managed-name="Details">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1503">Identifies the element (or elements) that
   provide additional information related to the object. Value type: reference</doc>
      </member>
      <member name="error_message" value="8" c:identifier="GTK_ACCESSIBLE_RELATION_ERROR_MESSAGE" glib:nick="error-message" glib:name="GTK_ACCESSIBLE_RELATION_ERROR_MESSAGE" gs:managed-name="ErrorMessage">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1505">Identifies the element that provides
   an error message for an object. Value type: reference</doc>
      </member>
      <member name="flow_to" value="9" c:identifier="GTK_ACCESSIBLE_RELATION_FLOW_TO" glib:nick="flow-to" glib:name="GTK_ACCESSIBLE_RELATION_FLOW_TO" gs:managed-name="FlowTo">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1507">Identifies the next element (or elements)
   in an alternate reading order of content which, at the user's discretion,
   allows assistive technology to override the general default of reading in
   document source order. Value type: reference</doc>
      </member>
      <member name="labelled_by" value="10" c:identifier="GTK_ACCESSIBLE_RELATION_LABELLED_BY" glib:nick="labelled-by" glib:name="GTK_ACCESSIBLE_RELATION_LABELLED_BY" gs:managed-name="LabelledBy">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1511">Identifies the element (or elements)
   that labels the current element. Value type: reference</doc>
      </member>
      <member name="owns" value="11" c:identifier="GTK_ACCESSIBLE_RELATION_OWNS" glib:nick="owns" glib:name="GTK_ACCESSIBLE_RELATION_OWNS" gs:managed-name="Owns">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1513">Identifies an element (or elements) in order
   to define a visual, functional, or contextual parent/child relationship
   between elements where the widget hierarchy cannot be used to represent
   the relationship. Value type: reference</doc>
      </member>
      <member name="pos_in_set" value="12" c:identifier="GTK_ACCESSIBLE_RELATION_POS_IN_SET" glib:nick="pos-in-set" glib:name="GTK_ACCESSIBLE_RELATION_POS_IN_SET" gs:managed-name="PosInSet">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1517">Defines an element's number or position
   in the current set of listitems or treeitems. Value type: integer</doc>
      </member>
      <member name="row_count" value="13" c:identifier="GTK_ACCESSIBLE_RELATION_ROW_COUNT" glib:nick="row-count" glib:name="GTK_ACCESSIBLE_RELATION_ROW_COUNT" gs:managed-name="RowCount">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1519">Defines the total number of rows in a table,
   grid, or treegrid. Value type: integer</doc>
      </member>
      <member name="row_index" value="14" c:identifier="GTK_ACCESSIBLE_RELATION_ROW_INDEX" glib:nick="row-index" glib:name="GTK_ACCESSIBLE_RELATION_ROW_INDEX" gs:managed-name="RowIndex">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1521">Defines an element's row index or position
   with respect to the total number of rows within a table, grid, or treegrid.
   Value type: integer</doc>
      </member>
      <member name="row_index_text" value="15" c:identifier="GTK_ACCESSIBLE_RELATION_ROW_INDEX_TEXT" glib:nick="row-index-text" glib:name="GTK_ACCESSIBLE_RELATION_ROW_INDEX_TEXT" gs:managed-name="RowIndexText">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1524">Defines a human readable text
   alternative of aria-rowindex. Value type: string</doc>
      </member>
      <member name="row_span" value="16" c:identifier="GTK_ACCESSIBLE_RELATION_ROW_SPAN" glib:nick="row-span" glib:name="GTK_ACCESSIBLE_RELATION_ROW_SPAN" gs:managed-name="RowSpan">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1526">Defines the number of rows spanned by a
   cell or gridcell within a table, grid, or treegrid. Value type: integer</doc>
      </member>
      <member name="set_size" value="17" c:identifier="GTK_ACCESSIBLE_RELATION_SET_SIZE" glib:nick="set-size" glib:name="GTK_ACCESSIBLE_RELATION_SET_SIZE" gs:managed-name="SetSize">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1528">Defines the number of items in the current
   set of listitems or treeitems. Value type: integer</doc>
      </member>
      <method name="init_value" c:identifier="gtk_accessible_relation_init_value" gs:dll-name="gtk-4.1" gs:managed-name="InitValue" gs:extension-method="1">
        <source-position filename="../gtk/gtkaccessible.h" line="86" />
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <type name="none" c:type="void" />
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none" gs:managed-name="relation" direction="in">
            <type name="AccessibleRelation" c:type="GtkAccessibleRelation" />
          </instance-parameter>
          <parameter name="value" transfer-ownership="none" gs:managed-name="value" direction="in">
            <type name="GObject.Value" c:type="GValue*" gs:is-pointer="1" />
          </parameter>
        </parameters>
        <gs:managed-parameters>
          <instance-parameter name="relation" transfer-ownership="none" gs:managed-name="relation" direction="in">
            <type name="AccessibleRelation" c:type="GtkAccessibleRelation" />
          </instance-parameter>
          <parameter name="value" transfer-ownership="none" gs:managed-name="value" direction="in">
            <type name="GObject.Value" c:type="GValue*" gs:is-pointer="1" />
          </parameter>
        </gs:managed-parameters>
      </method>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_accessible_relation_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="AccessibleRole" glib:type-name="GtkAccessibleRole" glib:get-type="gtk_accessible_role_get_type" c:type="GtkAccessibleRole" gs:managed-name="AccessibleRole">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1180">The accessible role for a [iface@Accessible] implementation.

Abstract roles are only used as part of the ontology; application
developers must not use abstract roles in their code.</doc>
      <member name="alert" value="0" c:identifier="GTK_ACCESSIBLE_ROLE_ALERT" glib:nick="alert" glib:name="GTK_ACCESSIBLE_ROLE_ALERT" gs:managed-name="Alert">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1182">An element with important, and usually
  time-sensitive, information</doc>
      </member>
      <member name="alert_dialog" value="1" c:identifier="GTK_ACCESSIBLE_ROLE_ALERT_DIALOG" glib:nick="alert-dialog" glib:name="GTK_ACCESSIBLE_ROLE_ALERT_DIALOG" gs:managed-name="AlertDialog">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1184">A type of dialog that contains an
  alert message</doc>
      </member>
      <member name="banner" value="2" c:identifier="GTK_ACCESSIBLE_ROLE_BANNER" glib:nick="banner" glib:name="GTK_ACCESSIBLE_ROLE_BANNER" gs:managed-name="Banner">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1186">Unused</doc>
      </member>
      <member name="button" value="3" c:identifier="GTK_ACCESSIBLE_ROLE_BUTTON" glib:nick="button" glib:name="GTK_ACCESSIBLE_ROLE_BUTTON" gs:managed-name="Button">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1187">An input element that allows for
  user-triggered actions when clicked or pressed</doc>
      </member>
      <member name="caption" value="4" c:identifier="GTK_ACCESSIBLE_ROLE_CAPTION" glib:nick="caption" glib:name="GTK_ACCESSIBLE_ROLE_CAPTION" gs:managed-name="Caption">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1189">Unused</doc>
      </member>
      <member name="cell" value="5" c:identifier="GTK_ACCESSIBLE_ROLE_CELL" glib:nick="cell" glib:name="GTK_ACCESSIBLE_ROLE_CELL" gs:managed-name="Cell">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1190">Unused</doc>
      </member>
      <member name="checkbox" value="6" c:identifier="GTK_ACCESSIBLE_ROLE_CHECKBOX" glib:nick="checkbox" glib:name="GTK_ACCESSIBLE_ROLE_CHECKBOX" gs:managed-name="Checkbox">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1191">A checkable input element that has
  three possible values: `true`, `false`, or `mixed`</doc>
      </member>
      <member name="column_header" value="7" c:identifier="GTK_ACCESSIBLE_ROLE_COLUMN_HEADER" glib:nick="column-header" glib:name="GTK_ACCESSIBLE_ROLE_COLUMN_HEADER" gs:managed-name="ColumnHeader">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1193">A header in a columned list.</doc>
      </member>
      <member name="combo_box" value="8" c:identifier="GTK_ACCESSIBLE_ROLE_COMBO_BOX" glib:nick="combo-box" glib:name="GTK_ACCESSIBLE_ROLE_COMBO_BOX" gs:managed-name="ComboBox">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1194">An input that controls another element,
  such as a list or a grid, that can dynamically pop up to help the user
  set the value of the input</doc>
      </member>
      <member name="command" value="9" c:identifier="GTK_ACCESSIBLE_ROLE_COMMAND" glib:nick="command" glib:name="GTK_ACCESSIBLE_ROLE_COMMAND" gs:managed-name="Command">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1197">Abstract role.</doc>
      </member>
      <member name="composite" value="10" c:identifier="GTK_ACCESSIBLE_ROLE_COMPOSITE" glib:nick="composite" glib:name="GTK_ACCESSIBLE_ROLE_COMPOSITE" gs:managed-name="Composite">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1198">Abstract role.</doc>
      </member>
      <member name="dialog" value="11" c:identifier="GTK_ACCESSIBLE_ROLE_DIALOG" glib:nick="dialog" glib:name="GTK_ACCESSIBLE_ROLE_DIALOG" gs:managed-name="Dialog">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1199">A dialog is a window that is designed to interrupt
   the current processing of an application in order to prompt the user to enter
   information or require a response.</doc>
      </member>
      <member name="document" value="12" c:identifier="GTK_ACCESSIBLE_ROLE_DOCUMENT" glib:nick="document" glib:name="GTK_ACCESSIBLE_ROLE_DOCUMENT" gs:managed-name="Document">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1202">Unused</doc>
      </member>
      <member name="feed" value="13" c:identifier="GTK_ACCESSIBLE_ROLE_FEED" glib:nick="feed" glib:name="GTK_ACCESSIBLE_ROLE_FEED" gs:managed-name="Feed">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1203">Unused</doc>
      </member>
      <member name="form" value="14" c:identifier="GTK_ACCESSIBLE_ROLE_FORM" glib:nick="form" glib:name="GTK_ACCESSIBLE_ROLE_FORM" gs:managed-name="Form">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1204">Unused</doc>
      </member>
      <member name="generic" value="15" c:identifier="GTK_ACCESSIBLE_ROLE_GENERIC" glib:nick="generic" glib:name="GTK_ACCESSIBLE_ROLE_GENERIC" gs:managed-name="Generic">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1205">Unused</doc>
      </member>
      <member name="grid" value="16" c:identifier="GTK_ACCESSIBLE_ROLE_GRID" glib:nick="grid" glib:name="GTK_ACCESSIBLE_ROLE_GRID" gs:managed-name="Grid">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1206">A grid of items.</doc>
      </member>
      <member name="grid_cell" value="17" c:identifier="GTK_ACCESSIBLE_ROLE_GRID_CELL" glib:nick="grid-cell" glib:name="GTK_ACCESSIBLE_ROLE_GRID_CELL" gs:managed-name="GridCell">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1207">An item in a grid or tree grid.</doc>
      </member>
      <member name="group" value="18" c:identifier="GTK_ACCESSIBLE_ROLE_GROUP" glib:nick="group" glib:name="GTK_ACCESSIBLE_ROLE_GROUP" gs:managed-name="Group">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1208">An element that groups multiple widgets. GTK uses
  this role for various containers, like [class@Box], [class@Viewport], and [class@HeaderBar].</doc>
      </member>
      <member name="heading" value="19" c:identifier="GTK_ACCESSIBLE_ROLE_HEADING" glib:nick="heading" glib:name="GTK_ACCESSIBLE_ROLE_HEADING" gs:managed-name="Heading">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1210">Unused</doc>
      </member>
      <member name="img" value="20" c:identifier="GTK_ACCESSIBLE_ROLE_IMG" glib:nick="img" glib:name="GTK_ACCESSIBLE_ROLE_IMG" gs:managed-name="Img">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1211">An image.</doc>
      </member>
      <member name="input" value="21" c:identifier="GTK_ACCESSIBLE_ROLE_INPUT" glib:nick="input" glib:name="GTK_ACCESSIBLE_ROLE_INPUT" gs:managed-name="Input">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1212">Abstract role.</doc>
      </member>
      <member name="label" value="22" c:identifier="GTK_ACCESSIBLE_ROLE_LABEL" glib:nick="label" glib:name="GTK_ACCESSIBLE_ROLE_LABEL" gs:managed-name="Label">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1213">A visible name or caption for a user interface component.</doc>
      </member>
      <member name="landmark" value="23" c:identifier="GTK_ACCESSIBLE_ROLE_LANDMARK" glib:nick="landmark" glib:name="GTK_ACCESSIBLE_ROLE_LANDMARK" gs:managed-name="Landmark">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1214">Abstract role.</doc>
      </member>
      <member name="legend" value="24" c:identifier="GTK_ACCESSIBLE_ROLE_LEGEND" glib:nick="legend" glib:name="GTK_ACCESSIBLE_ROLE_LEGEND" gs:managed-name="Legend">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1215">Unused</doc>
      </member>
      <member name="link" value="25" c:identifier="GTK_ACCESSIBLE_ROLE_LINK" glib:nick="link" glib:name="GTK_ACCESSIBLE_ROLE_LINK" gs:managed-name="Link">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1216">A clickable link.</doc>
      </member>
      <member name="list" value="26" c:identifier="GTK_ACCESSIBLE_ROLE_LIST" glib:nick="list" glib:name="GTK_ACCESSIBLE_ROLE_LIST" gs:managed-name="List">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1217">A list of items.</doc>
      </member>
      <member name="list_box" value="27" c:identifier="GTK_ACCESSIBLE_ROLE_LIST_BOX" glib:nick="list-box" glib:name="GTK_ACCESSIBLE_ROLE_LIST_BOX" gs:managed-name="ListBox">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1218">Unused.</doc>
      </member>
      <member name="list_item" value="28" c:identifier="GTK_ACCESSIBLE_ROLE_LIST_ITEM" glib:nick="list-item" glib:name="GTK_ACCESSIBLE_ROLE_LIST_ITEM" gs:managed-name="ListItem">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1219">An item in a list.</doc>
      </member>
      <member name="log" value="29" c:identifier="GTK_ACCESSIBLE_ROLE_LOG" glib:nick="log" glib:name="GTK_ACCESSIBLE_ROLE_LOG" gs:managed-name="Log">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1220">Unused</doc>
      </member>
      <member name="main" value="30" c:identifier="GTK_ACCESSIBLE_ROLE_MAIN" glib:nick="main" glib:name="GTK_ACCESSIBLE_ROLE_MAIN" gs:managed-name="Main">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1221">Unused</doc>
      </member>
      <member name="marquee" value="31" c:identifier="GTK_ACCESSIBLE_ROLE_MARQUEE" glib:nick="marquee" glib:name="GTK_ACCESSIBLE_ROLE_MARQUEE" gs:managed-name="Marquee">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1222">Unused</doc>
      </member>
      <member name="math" value="32" c:identifier="GTK_ACCESSIBLE_ROLE_MATH" glib:nick="math" glib:name="GTK_ACCESSIBLE_ROLE_MATH" gs:managed-name="Math">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1223">Unused</doc>
      </member>
      <member name="meter" value="33" c:identifier="GTK_ACCESSIBLE_ROLE_METER" glib:nick="meter" glib:name="GTK_ACCESSIBLE_ROLE_METER" gs:managed-name="Meter">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1224">An element that represents a value within a known range.</doc>
      </member>
      <member name="menu" value="34" c:identifier="GTK_ACCESSIBLE_ROLE_MENU" glib:nick="menu" glib:name="GTK_ACCESSIBLE_ROLE_MENU" gs:managed-name="Menu">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1225">A menu.</doc>
      </member>
      <member name="menu_bar" value="35" c:identifier="GTK_ACCESSIBLE_ROLE_MENU_BAR" glib:nick="menu-bar" glib:name="GTK_ACCESSIBLE_ROLE_MENU_BAR" gs:managed-name="MenuBar">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1226">A menubar.</doc>
      </member>
      <member name="menu_item" value="36" c:identifier="GTK_ACCESSIBLE_ROLE_MENU_ITEM" glib:nick="menu-item" glib:name="GTK_ACCESSIBLE_ROLE_MENU_ITEM" gs:managed-name="MenuItem">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1227">An item in a menu.</doc>
      </member>
      <member name="menu_item_checkbox" value="37" c:identifier="GTK_ACCESSIBLE_ROLE_MENU_ITEM_CHECKBOX" glib:nick="menu-item-checkbox" glib:name="GTK_ACCESSIBLE_ROLE_MENU_ITEM_CHECKBOX" gs:managed-name="MenuItemCheckbox">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1228">A check item in a menu.</doc>
      </member>
      <member name="menu_item_radio" value="38" c:identifier="GTK_ACCESSIBLE_ROLE_MENU_ITEM_RADIO" glib:nick="menu-item-radio" glib:name="GTK_ACCESSIBLE_ROLE_MENU_ITEM_RADIO" gs:managed-name="MenuItemRadio">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1229">A radio item in a menu.</doc>
      </member>
      <member name="navigation" value="39" c:identifier="GTK_ACCESSIBLE_ROLE_NAVIGATION" glib:nick="navigation" glib:name="GTK_ACCESSIBLE_ROLE_NAVIGATION" gs:managed-name="Navigation">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1230">Unused</doc>
      </member>
      <member name="none" value="40" c:identifier="GTK_ACCESSIBLE_ROLE_NONE" glib:nick="none" glib:name="GTK_ACCESSIBLE_ROLE_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1231">An element that is not represented to accessibility technologies.</doc>
      </member>
      <member name="note" value="41" c:identifier="GTK_ACCESSIBLE_ROLE_NOTE" glib:nick="note" glib:name="GTK_ACCESSIBLE_ROLE_NOTE" gs:managed-name="Note">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1232">Unused</doc>
      </member>
      <member name="option" value="42" c:identifier="GTK_ACCESSIBLE_ROLE_OPTION" glib:nick="option" glib:name="GTK_ACCESSIBLE_ROLE_OPTION" gs:managed-name="Option">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1233">Unused</doc>
      </member>
      <member name="presentation" value="43" c:identifier="GTK_ACCESSIBLE_ROLE_PRESENTATION" glib:nick="presentation" glib:name="GTK_ACCESSIBLE_ROLE_PRESENTATION" gs:managed-name="Presentation">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1234">An element that is not represented to accessibility technologies.</doc>
      </member>
      <member name="progress_bar" value="44" c:identifier="GTK_ACCESSIBLE_ROLE_PROGRESS_BAR" glib:nick="progress-bar" glib:name="GTK_ACCESSIBLE_ROLE_PROGRESS_BAR" gs:managed-name="ProgressBar">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1235">An element that displays the progress
   status for tasks that take a long time.</doc>
      </member>
      <member name="radio" value="45" c:identifier="GTK_ACCESSIBLE_ROLE_RADIO" glib:nick="radio" glib:name="GTK_ACCESSIBLE_ROLE_RADIO" gs:managed-name="Radio">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1237">A checkable input in a group of radio roles,
   only one of which can be checked at a time.</doc>
      </member>
      <member name="radio_group" value="46" c:identifier="GTK_ACCESSIBLE_ROLE_RADIO_GROUP" glib:nick="radio-group" glib:name="GTK_ACCESSIBLE_ROLE_RADIO_GROUP" gs:managed-name="RadioGroup">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1239">Unused</doc>
      </member>
      <member name="range" value="47" c:identifier="GTK_ACCESSIBLE_ROLE_RANGE" glib:nick="range" glib:name="GTK_ACCESSIBLE_ROLE_RANGE" gs:managed-name="Range">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1240">Abstract role.</doc>
      </member>
      <member name="region" value="48" c:identifier="GTK_ACCESSIBLE_ROLE_REGION" glib:nick="region" glib:name="GTK_ACCESSIBLE_ROLE_REGION" gs:managed-name="Region">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1241">Unused</doc>
      </member>
      <member name="row" value="49" c:identifier="GTK_ACCESSIBLE_ROLE_ROW" glib:nick="row" glib:name="GTK_ACCESSIBLE_ROLE_ROW" gs:managed-name="Row">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1242">A row in a columned list.</doc>
      </member>
      <member name="row_group" value="50" c:identifier="GTK_ACCESSIBLE_ROLE_ROW_GROUP" glib:nick="row-group" glib:name="GTK_ACCESSIBLE_ROLE_ROW_GROUP" gs:managed-name="RowGroup">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1243">Unused</doc>
      </member>
      <member name="row_header" value="51" c:identifier="GTK_ACCESSIBLE_ROLE_ROW_HEADER" glib:nick="row-header" glib:name="GTK_ACCESSIBLE_ROLE_ROW_HEADER" gs:managed-name="RowHeader">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1244">Unused</doc>
      </member>
      <member name="scrollbar" value="52" c:identifier="GTK_ACCESSIBLE_ROLE_SCROLLBAR" glib:nick="scrollbar" glib:name="GTK_ACCESSIBLE_ROLE_SCROLLBAR" gs:managed-name="Scrollbar">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1245">A graphical object that controls the scrolling
   of content within a viewing area, regardless of whether the content is fully
   displayed within the viewing area.</doc>
      </member>
      <member name="search" value="53" c:identifier="GTK_ACCESSIBLE_ROLE_SEARCH" glib:nick="search" glib:name="GTK_ACCESSIBLE_ROLE_SEARCH" gs:managed-name="Search">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1248">Unused</doc>
      </member>
      <member name="search_box" value="54" c:identifier="GTK_ACCESSIBLE_ROLE_SEARCH_BOX" glib:nick="search-box" glib:name="GTK_ACCESSIBLE_ROLE_SEARCH_BOX" gs:managed-name="SearchBox">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1249">A type of textbox intended for specifying
   search criteria.</doc>
      </member>
      <member name="section" value="55" c:identifier="GTK_ACCESSIBLE_ROLE_SECTION" glib:nick="section" glib:name="GTK_ACCESSIBLE_ROLE_SECTION" gs:managed-name="Section">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1251">Abstract role.</doc>
      </member>
      <member name="section_head" value="56" c:identifier="GTK_ACCESSIBLE_ROLE_SECTION_HEAD" glib:nick="section-head" glib:name="GTK_ACCESSIBLE_ROLE_SECTION_HEAD" gs:managed-name="SectionHead">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1252">Abstract role.</doc>
      </member>
      <member name="select" value="57" c:identifier="GTK_ACCESSIBLE_ROLE_SELECT" glib:nick="select" glib:name="GTK_ACCESSIBLE_ROLE_SELECT" gs:managed-name="Select">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1253">Abstract role.</doc>
      </member>
      <member name="separator" value="58" c:identifier="GTK_ACCESSIBLE_ROLE_SEPARATOR" glib:nick="separator" glib:name="GTK_ACCESSIBLE_ROLE_SEPARATOR" gs:managed-name="Separator">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1254">A divider that separates and distinguishes
   sections of content or groups of menuitems.</doc>
      </member>
      <member name="slider" value="59" c:identifier="GTK_ACCESSIBLE_ROLE_SLIDER" glib:nick="slider" glib:name="GTK_ACCESSIBLE_ROLE_SLIDER" gs:managed-name="Slider">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1256">A user input where the user selects a value
   from within a given range.</doc>
      </member>
      <member name="spin_button" value="60" c:identifier="GTK_ACCESSIBLE_ROLE_SPIN_BUTTON" glib:nick="spin-button" glib:name="GTK_ACCESSIBLE_ROLE_SPIN_BUTTON" gs:managed-name="SpinButton">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1258">A form of range that expects the user to
   select from among discrete choices.</doc>
      </member>
      <member name="status" value="61" c:identifier="GTK_ACCESSIBLE_ROLE_STATUS" glib:nick="status" glib:name="GTK_ACCESSIBLE_ROLE_STATUS" gs:managed-name="Status">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1260">Unused</doc>
      </member>
      <member name="structure" value="62" c:identifier="GTK_ACCESSIBLE_ROLE_STRUCTURE" glib:nick="structure" glib:name="GTK_ACCESSIBLE_ROLE_STRUCTURE" gs:managed-name="Structure">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1261">Abstract role.</doc>
      </member>
      <member name="switch" value="63" c:identifier="GTK_ACCESSIBLE_ROLE_SWITCH" glib:nick="switch" glib:name="GTK_ACCESSIBLE_ROLE_SWITCH" gs:managed-name="Switch">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1262">A type of checkbox that represents on/off values,
   as opposed to checked/unchecked values.</doc>
      </member>
      <member name="tab" value="64" c:identifier="GTK_ACCESSIBLE_ROLE_TAB" glib:nick="tab" glib:name="GTK_ACCESSIBLE_ROLE_TAB" gs:managed-name="Tab">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1264">An item in a list of tab used for switching pages.</doc>
      </member>
      <member name="table" value="65" c:identifier="GTK_ACCESSIBLE_ROLE_TABLE" glib:nick="table" glib:name="GTK_ACCESSIBLE_ROLE_TABLE" gs:managed-name="Table">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1265">Unused</doc>
      </member>
      <member name="tab_list" value="66" c:identifier="GTK_ACCESSIBLE_ROLE_TAB_LIST" glib:nick="tab-list" glib:name="GTK_ACCESSIBLE_ROLE_TAB_LIST" gs:managed-name="TabList">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1266">A list of tabs for switching pages.</doc>
      </member>
      <member name="tab_panel" value="67" c:identifier="GTK_ACCESSIBLE_ROLE_TAB_PANEL" glib:nick="tab-panel" glib:name="GTK_ACCESSIBLE_ROLE_TAB_PANEL" gs:managed-name="TabPanel">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1267">A page in a notebook or stack.</doc>
      </member>
      <member name="text_box" value="68" c:identifier="GTK_ACCESSIBLE_ROLE_TEXT_BOX" glib:nick="text-box" glib:name="GTK_ACCESSIBLE_ROLE_TEXT_BOX" gs:managed-name="TextBox">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1268">A type of input that allows free-form text
   as its value.</doc>
      </member>
      <member name="time" value="69" c:identifier="GTK_ACCESSIBLE_ROLE_TIME" glib:nick="time" glib:name="GTK_ACCESSIBLE_ROLE_TIME" gs:managed-name="Time">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1270">Unused</doc>
      </member>
      <member name="timer" value="70" c:identifier="GTK_ACCESSIBLE_ROLE_TIMER" glib:nick="timer" glib:name="GTK_ACCESSIBLE_ROLE_TIMER" gs:managed-name="Timer">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1271">Unused</doc>
      </member>
      <member name="toolbar" value="71" c:identifier="GTK_ACCESSIBLE_ROLE_TOOLBAR" glib:nick="toolbar" glib:name="GTK_ACCESSIBLE_ROLE_TOOLBAR" gs:managed-name="Toolbar">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1272">Unused</doc>
      </member>
      <member name="tooltip" value="72" c:identifier="GTK_ACCESSIBLE_ROLE_TOOLTIP" glib:nick="tooltip" glib:name="GTK_ACCESSIBLE_ROLE_TOOLTIP" gs:managed-name="Tooltip">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1273">Unused</doc>
      </member>
      <member name="tree" value="73" c:identifier="GTK_ACCESSIBLE_ROLE_TREE" glib:nick="tree" glib:name="GTK_ACCESSIBLE_ROLE_TREE" gs:managed-name="Tree">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1274">Unused</doc>
      </member>
      <member name="tree_grid" value="74" c:identifier="GTK_ACCESSIBLE_ROLE_TREE_GRID" glib:nick="tree-grid" glib:name="GTK_ACCESSIBLE_ROLE_TREE_GRID" gs:managed-name="TreeGrid">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1275">A treeview-like, columned list.</doc>
      </member>
      <member name="tree_item" value="75" c:identifier="GTK_ACCESSIBLE_ROLE_TREE_ITEM" glib:nick="tree-item" glib:name="GTK_ACCESSIBLE_ROLE_TREE_ITEM" gs:managed-name="TreeItem">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1276">Unused</doc>
      </member>
      <member name="widget" value="76" c:identifier="GTK_ACCESSIBLE_ROLE_WIDGET" glib:nick="widget" glib:name="GTK_ACCESSIBLE_ROLE_WIDGET" gs:managed-name="Widget">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1277">An interactive component of a graphical user
   interface. This is the role that GTK uses by default for widgets.</doc>
      </member>
      <member name="window" value="77" c:identifier="GTK_ACCESSIBLE_ROLE_WINDOW" glib:nick="window" glib:name="GTK_ACCESSIBLE_ROLE_WINDOW" gs:managed-name="Window">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1279">An application window.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_accessible_role_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="AccessibleSort" glib:type-name="GtkAccessibleSort" glib:get-type="gtk_accessible_sort_get_type" c:type="GtkAccessibleSort" gs:managed-name="AccessibleSort">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1622">The possible values for the %GTK_ACCESSIBLE_PROPERTY_SORT
accessible property.</doc>
      <member name="none" value="0" c:identifier="GTK_ACCESSIBLE_SORT_NONE" glib:nick="none" glib:name="GTK_ACCESSIBLE_SORT_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1624">There is no defined sort applied to the column.</doc>
      </member>
      <member name="ascending" value="1" c:identifier="GTK_ACCESSIBLE_SORT_ASCENDING" glib:nick="ascending" glib:name="GTK_ACCESSIBLE_SORT_ASCENDING" gs:managed-name="Ascending">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1625">Items are sorted in ascending order by this column.</doc>
      </member>
      <member name="descending" value="2" c:identifier="GTK_ACCESSIBLE_SORT_DESCENDING" glib:nick="descending" glib:name="GTK_ACCESSIBLE_SORT_DESCENDING" gs:managed-name="Descending">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1626">Items are sorted in descending order by this column.</doc>
      </member>
      <member name="other" value="3" c:identifier="GTK_ACCESSIBLE_SORT_OTHER" glib:nick="other" glib:name="GTK_ACCESSIBLE_SORT_OTHER" gs:managed-name="Other">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1627">A sort algorithm other than ascending or
   descending has been applied.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_accessible_sort_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="AccessibleState" glib:type-name="GtkAccessibleState" glib:get-type="gtk_accessible_state_get_type" c:type="GtkAccessibleState" gs:managed-name="AccessibleState">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1367">The possible accessible states of a [iface@Accessible].</doc>
      <member name="busy" value="0" c:identifier="GTK_ACCESSIBLE_STATE_BUSY" glib:nick="busy" glib:name="GTK_ACCESSIBLE_STATE_BUSY" gs:managed-name="Busy">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1369">A “busy” state. This state has boolean values</doc>
      </member>
      <member name="checked" value="1" c:identifier="GTK_ACCESSIBLE_STATE_CHECKED" glib:nick="checked" glib:name="GTK_ACCESSIBLE_STATE_CHECKED" gs:managed-name="Checked">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1370">A “checked” state; indicates the current
  state of a [class@CheckButton]. Value type: [enum@AccessibleTristate]</doc>
      </member>
      <member name="disabled" value="2" c:identifier="GTK_ACCESSIBLE_STATE_DISABLED" glib:nick="disabled" glib:name="GTK_ACCESSIBLE_STATE_DISABLED" gs:managed-name="Disabled">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1372">A “disabled” state; corresponds to the
  [property@Widget:sensitive] property. It indicates a UI element
  that is perceivable, but not editable or operable. Value type: boolean</doc>
      </member>
      <member name="expanded" value="3" c:identifier="GTK_ACCESSIBLE_STATE_EXPANDED" glib:nick="expanded" glib:name="GTK_ACCESSIBLE_STATE_EXPANDED" gs:managed-name="Expanded">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1375">An “expanded” state; corresponds to the
  [property@Expander:expanded] property. Value type: boolean
  or undefined</doc>
      </member>
      <member name="hidden" value="4" c:identifier="GTK_ACCESSIBLE_STATE_HIDDEN" glib:nick="hidden" glib:name="GTK_ACCESSIBLE_STATE_HIDDEN" gs:managed-name="Hidden">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1378">A “hidden” state; corresponds to the
  [property@Widget:visible] property. You can use this state
  explicitly on UI elements that should not be exposed to an assistive
  technology. Value type: boolean
  See also: %GTK_ACCESSIBLE_STATE_DISABLED</doc>
      </member>
      <member name="invalid" value="5" c:identifier="GTK_ACCESSIBLE_STATE_INVALID" glib:nick="invalid" glib:name="GTK_ACCESSIBLE_STATE_INVALID" gs:managed-name="Invalid">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1383">An “invalid” state; set when a widget
  is showing an error. Value type: [enum@AccessibleInvalidState]</doc>
      </member>
      <member name="pressed" value="6" c:identifier="GTK_ACCESSIBLE_STATE_PRESSED" glib:nick="pressed" glib:name="GTK_ACCESSIBLE_STATE_PRESSED" gs:managed-name="Pressed">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1385">A “pressed” state; indicates the current
  state of a [class@ToggleButton]. Value type: [enum@AccessibleTristate]
  enumeration</doc>
      </member>
      <member name="selected" value="7" c:identifier="GTK_ACCESSIBLE_STATE_SELECTED" glib:nick="selected" glib:name="GTK_ACCESSIBLE_STATE_SELECTED" gs:managed-name="Selected">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1388">A “selected” state; set when a widget
  is selected. Value type: boolean or undefined</doc>
      </member>
      <method name="init_value" c:identifier="gtk_accessible_state_init_value" gs:dll-name="gtk-4.1" gs:managed-name="InitValue" gs:extension-method="1">
        <source-position filename="../gtk/gtkaccessible.h" line="80" />
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <type name="none" c:type="void" />
        </return-value>
        <parameters>
          <instance-parameter name="state" transfer-ownership="none" gs:managed-name="state" direction="in">
            <type name="AccessibleState" c:type="GtkAccessibleState" />
          </instance-parameter>
          <parameter name="value" transfer-ownership="none" gs:managed-name="value" direction="in">
            <type name="GObject.Value" c:type="GValue*" gs:is-pointer="1" />
          </parameter>
        </parameters>
        <gs:managed-parameters>
          <instance-parameter name="state" transfer-ownership="none" gs:managed-name="state" direction="in">
            <type name="AccessibleState" c:type="GtkAccessibleState" />
          </instance-parameter>
          <parameter name="value" transfer-ownership="none" gs:managed-name="value" direction="in">
            <type name="GObject.Value" c:type="GValue*" gs:is-pointer="1" />
          </parameter>
        </gs:managed-parameters>
      </method>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_accessible_state_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="AccessibleTristate" glib:type-name="GtkAccessibleTristate" glib:get-type="gtk_accessible_tristate_get_type" c:type="GtkAccessibleTristate" gs:managed-name="AccessibleTristate">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1557">The possible values for the %GTK_ACCESSIBLE_STATE_PRESSED
accessible state.

Note that the %GTK_ACCESSIBLE_TRISTATE_FALSE and
%GTK_ACCESSIBLE_TRISTATE_TRUE have the same values
as %FALSE and %TRUE.</doc>
      <member name="false" value="0" c:identifier="GTK_ACCESSIBLE_TRISTATE_FALSE" glib:nick="false" glib:name="GTK_ACCESSIBLE_TRISTATE_FALSE" gs:managed-name="False">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1559">The state is `false`</doc>
      </member>
      <member name="true" value="1" c:identifier="GTK_ACCESSIBLE_TRISTATE_TRUE" glib:nick="true" glib:name="GTK_ACCESSIBLE_TRISTATE_TRUE" gs:managed-name="True">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1560">The state is `true`</doc>
      </member>
      <member name="mixed" value="2" c:identifier="GTK_ACCESSIBLE_TRISTATE_MIXED" glib:nick="mixed" glib:name="GTK_ACCESSIBLE_TRISTATE_MIXED" gs:managed-name="Mixed">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1561">The state is `mixed`</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_accessible_tristate_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="Align" glib:type-name="GtkAlign" glib:get-type="gtk_align_get_type" c:type="GtkAlign" gs:managed-name="Align">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="37">Controls how a widget deals with extra space in a single dimension.

Alignment only matters if the widget receives a “too large” allocation,
for example if you packed the widget with the [property@Gtk.Widget:hexpand]
property inside a [class@Box], then the widget might get extra space.
If you have for example a 16x16 icon inside a 32x32 space, the icon
could be scaled and stretched, it could be centered, or it could be
positioned to one side of the space.

Note that in horizontal context %GTK_ALIGN_START and %GTK_ALIGN_END
are interpreted relative to text direction.

%GTK_ALIGN_BASELINE support is optional for containers and widgets, and
it is only supported for vertical alignment.  When it's not supported by
a child or a container it is treated as %GTK_ALIGN_FILL.</doc>
      <member name="fill" value="0" c:identifier="GTK_ALIGN_FILL" glib:nick="fill" glib:name="GTK_ALIGN_FILL" gs:managed-name="Fill">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="39">stretch to fill all space if possible, center if
  no meaningful way to stretch</doc>
      </member>
      <member name="start" value="1" c:identifier="GTK_ALIGN_START" glib:nick="start" glib:name="GTK_ALIGN_START" gs:managed-name="Start">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="41">snap to left or top side, leaving space on right or bottom</doc>
      </member>
      <member name="end" value="2" c:identifier="GTK_ALIGN_END" glib:nick="end" glib:name="GTK_ALIGN_END" gs:managed-name="End">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="42">snap to right or bottom side, leaving space on left or top</doc>
      </member>
      <member name="center" value="3" c:identifier="GTK_ALIGN_CENTER" glib:nick="center" glib:name="GTK_ALIGN_CENTER" gs:managed-name="Center">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="43">center natural width of widget inside the allocation</doc>
      </member>
      <member name="baseline" value="4" c:identifier="GTK_ALIGN_BASELINE" glib:nick="baseline" glib:name="GTK_ALIGN_BASELINE" gs:managed-name="Baseline">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="44">align the widget according to the baseline.
  See [class@Gtk.Widget].</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_align_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <bitfield name="ApplicationInhibitFlags" glib:type-name="GtkApplicationInhibitFlags" glib:get-type="gtk_application_inhibit_flags_get_type" c:type="GtkApplicationInhibitFlags" gs:managed-name="ApplicationInhibitFlags">
      <doc xml:space="preserve" filename="../gtk/gtkapplication.c" line="914">Types of user actions that may be blocked by `GtkApplication`.

See [method@Gtk.Application.inhibit].</doc>
      <member name="logout" value="1" c:identifier="GTK_APPLICATION_INHIBIT_LOGOUT" glib:nick="logout" glib:name="GTK_APPLICATION_INHIBIT_LOGOUT" gs:managed-name="Logout">
        <doc xml:space="preserve" filename="../gtk/gtkapplication.c" line="916">Inhibit ending the user session
  by logging out or by shutting down the computer</doc>
      </member>
      <member name="switch" value="2" c:identifier="GTK_APPLICATION_INHIBIT_SWITCH" glib:nick="switch" glib:name="GTK_APPLICATION_INHIBIT_SWITCH" gs:managed-name="Switch">
        <doc xml:space="preserve" filename="../gtk/gtkapplication.c" line="918">Inhibit user switching</doc>
      </member>
      <member name="suspend" value="4" c:identifier="GTK_APPLICATION_INHIBIT_SUSPEND" glib:nick="suspend" glib:name="GTK_APPLICATION_INHIBIT_SUSPEND" gs:managed-name="Suspend">
        <doc xml:space="preserve" filename="../gtk/gtkapplication.c" line="919">Inhibit suspending the
  session or computer</doc>
      </member>
      <member name="idle" value="8" c:identifier="GTK_APPLICATION_INHIBIT_IDLE" glib:nick="idle" glib:name="GTK_APPLICATION_INHIBIT_IDLE" gs:managed-name="Idle">
        <doc xml:space="preserve" filename="../gtk/gtkapplication.c" line="921">Inhibit the session being
  marked as idle (and possibly locked)</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_application_inhibit_flags_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </bitfield>
    <enumeration name="ArrowType" glib:type-name="GtkArrowType" glib:get-type="gtk_arrow_type_get_type" c:type="GtkArrowType" gs:managed-name="ArrowType">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="72">Used to indicate the direction in which an arrow should point.</doc>
      <member name="up" value="0" c:identifier="GTK_ARROW_UP" glib:nick="up" glib:name="GTK_ARROW_UP" gs:managed-name="Up">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="74">Represents an upward pointing arrow.</doc>
      </member>
      <member name="down" value="1" c:identifier="GTK_ARROW_DOWN" glib:nick="down" glib:name="GTK_ARROW_DOWN" gs:managed-name="Down">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="75">Represents a downward pointing arrow.</doc>
      </member>
      <member name="left" value="2" c:identifier="GTK_ARROW_LEFT" glib:nick="left" glib:name="GTK_ARROW_LEFT" gs:managed-name="Left">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="76">Represents a left pointing arrow.</doc>
      </member>
      <member name="right" value="3" c:identifier="GTK_ARROW_RIGHT" glib:nick="right" glib:name="GTK_ARROW_RIGHT" gs:managed-name="Right">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="77">Represents a right pointing arrow.</doc>
      </member>
      <member name="none" value="4" c:identifier="GTK_ARROW_NONE" glib:nick="none" glib:name="GTK_ARROW_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="78">No arrow.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_arrow_type_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="AssistantPageType" glib:type-name="GtkAssistantPageType" glib:get-type="gtk_assistant_page_type_get_type" c:type="GtkAssistantPageType" gs:managed-name="AssistantPageType">
      <doc xml:space="preserve" filename="../gtk/gtkassistant.h" line="39">Determines the page role inside a `GtkAssistant`.

The role is used to handle buttons sensitivity and visibility.

Note that an assistant needs to end its page flow with a page of type
%GTK_ASSISTANT_PAGE_CONFIRM, %GTK_ASSISTANT_PAGE_SUMMARY or
%GTK_ASSISTANT_PAGE_PROGRESS to be correct.

The Cancel button will only be shown if the page isn’t “committed”.
See gtk_assistant_commit() for details.</doc>
      <member name="content" value="0" c:identifier="GTK_ASSISTANT_PAGE_CONTENT" glib:nick="content" glib:name="GTK_ASSISTANT_PAGE_CONTENT" gs:managed-name="Content">
        <doc xml:space="preserve" filename="../gtk/gtkassistant.h" line="41">The page has regular contents. Both the
 Back and forward buttons will be shown.</doc>
      </member>
      <member name="intro" value="1" c:identifier="GTK_ASSISTANT_PAGE_INTRO" glib:nick="intro" glib:name="GTK_ASSISTANT_PAGE_INTRO" gs:managed-name="Intro">
        <doc xml:space="preserve" filename="../gtk/gtkassistant.h" line="43">The page contains an introduction to the
 assistant task. Only the Forward button will be shown if there is a
  next page.</doc>
      </member>
      <member name="confirm" value="2" c:identifier="GTK_ASSISTANT_PAGE_CONFIRM" glib:nick="confirm" glib:name="GTK_ASSISTANT_PAGE_CONFIRM" gs:managed-name="Confirm">
        <doc xml:space="preserve" filename="../gtk/gtkassistant.h" line="46">The page lets the user confirm or deny the
 changes. The Back and Apply buttons will be shown.</doc>
      </member>
      <member name="summary" value="3" c:identifier="GTK_ASSISTANT_PAGE_SUMMARY" glib:nick="summary" glib:name="GTK_ASSISTANT_PAGE_SUMMARY" gs:managed-name="Summary">
        <doc xml:space="preserve" filename="../gtk/gtkassistant.h" line="48">The page informs the user of the changes
 done. Only the Close button will be shown.</doc>
      </member>
      <member name="progress" value="4" c:identifier="GTK_ASSISTANT_PAGE_PROGRESS" glib:nick="progress" glib:name="GTK_ASSISTANT_PAGE_PROGRESS" gs:managed-name="Progress">
        <doc xml:space="preserve" filename="../gtk/gtkassistant.h" line="50">Used for tasks that take a long time to
 complete, blocks the assistant until the page is marked as complete.
  Only the back button will be shown.</doc>
      </member>
      <member name="custom" value="5" c:identifier="GTK_ASSISTANT_PAGE_CUSTOM" glib:nick="custom" glib:name="GTK_ASSISTANT_PAGE_CUSTOM" gs:managed-name="Custom">
        <doc xml:space="preserve" filename="../gtk/gtkassistant.h" line="53">Used for when other page types are not
 appropriate. No buttons will be shown, and the application must
 add its own buttons through gtk_assistant_add_action_widget().</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_assistant_page_type_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="BaselinePosition" glib:type-name="GtkBaselinePosition" glib:get-type="gtk_baseline_position_get_type" c:type="GtkBaselinePosition" gs:managed-name="BaselinePosition">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="91">Baseline position in a row of widgets.

Whenever a container has some form of natural row it may align
children in that row along a common typographical baseline. If
the amount of vertical space in the row is taller than the total
requested height of the baseline-aligned children then it can use a
`GtkBaselinePosition` to select where to put the baseline inside the
extra available space.</doc>
      <member name="top" value="0" c:identifier="GTK_BASELINE_POSITION_TOP" glib:nick="top" glib:name="GTK_BASELINE_POSITION_TOP" gs:managed-name="Top">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="93">Align the baseline at the top</doc>
      </member>
      <member name="center" value="1" c:identifier="GTK_BASELINE_POSITION_CENTER" glib:nick="center" glib:name="GTK_BASELINE_POSITION_CENTER" gs:managed-name="Center">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="94">Center the baseline</doc>
      </member>
      <member name="bottom" value="2" c:identifier="GTK_BASELINE_POSITION_BOTTOM" glib:nick="bottom" glib:name="GTK_BASELINE_POSITION_BOTTOM" gs:managed-name="Bottom">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="95">Align the baseline at the bottom</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_baseline_position_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="BorderStyle" glib:type-name="GtkBorderStyle" glib:get-type="gtk_border_style_get_type" c:type="GtkBorderStyle" gs:managed-name="BorderStyle">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="783">Describes how the border of a UI element should be rendered.</doc>
      <member name="none" value="0" c:identifier="GTK_BORDER_STYLE_NONE" glib:nick="none" glib:name="GTK_BORDER_STYLE_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="785">No visible border</doc>
      </member>
      <member name="hidden" value="1" c:identifier="GTK_BORDER_STYLE_HIDDEN" glib:nick="hidden" glib:name="GTK_BORDER_STYLE_HIDDEN" gs:managed-name="Hidden">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="786">Same as %GTK_BORDER_STYLE_NONE</doc>
      </member>
      <member name="solid" value="2" c:identifier="GTK_BORDER_STYLE_SOLID" glib:nick="solid" glib:name="GTK_BORDER_STYLE_SOLID" gs:managed-name="Solid">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="787">A single line segment</doc>
      </member>
      <member name="inset" value="3" c:identifier="GTK_BORDER_STYLE_INSET" glib:nick="inset" glib:name="GTK_BORDER_STYLE_INSET" gs:managed-name="Inset">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="788">Looks as if the content is sunken into the canvas</doc>
      </member>
      <member name="outset" value="4" c:identifier="GTK_BORDER_STYLE_OUTSET" glib:nick="outset" glib:name="GTK_BORDER_STYLE_OUTSET" gs:managed-name="Outset">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="789">Looks as if the content is coming out of the canvas</doc>
      </member>
      <member name="dotted" value="5" c:identifier="GTK_BORDER_STYLE_DOTTED" glib:nick="dotted" glib:name="GTK_BORDER_STYLE_DOTTED" gs:managed-name="Dotted">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="790">A series of round dots</doc>
      </member>
      <member name="dashed" value="6" c:identifier="GTK_BORDER_STYLE_DASHED" glib:nick="dashed" glib:name="GTK_BORDER_STYLE_DASHED" gs:managed-name="Dashed">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="791">A series of square-ended dashes</doc>
      </member>
      <member name="double" value="7" c:identifier="GTK_BORDER_STYLE_DOUBLE" glib:nick="double" glib:name="GTK_BORDER_STYLE_DOUBLE" gs:managed-name="Double">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="792">Two parallel lines with some space between them</doc>
      </member>
      <member name="groove" value="8" c:identifier="GTK_BORDER_STYLE_GROOVE" glib:nick="groove" glib:name="GTK_BORDER_STYLE_GROOVE" gs:managed-name="Groove">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="793">Looks as if it were carved in the canvas</doc>
      </member>
      <member name="ridge" value="9" c:identifier="GTK_BORDER_STYLE_RIDGE" glib:nick="ridge" glib:name="GTK_BORDER_STYLE_RIDGE" gs:managed-name="Ridge">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="794">Looks as if it were coming out of the canvas</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_border_style_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <bitfield name="BuilderClosureFlags" glib:type-name="GtkBuilderClosureFlags" glib:get-type="gtk_builder_closure_flags_get_type" c:type="GtkBuilderClosureFlags" gs:managed-name="BuilderClosureFlags">
      <doc xml:space="preserve" filename="../gtk/gtkbuilderscope.h" line="36">The list of flags that can be passed to gtk_builder_create_closure().

New values may be added in the future for new features, so external
implementations of [iface@Gtk.BuilderScope] should test the flags
for unknown values and raise a %GTK_BUILDER_ERROR_INVALID_ATTRIBUTE error
when they encounter one.</doc>
      <member name="swapped" value="1" c:identifier="GTK_BUILDER_CLOSURE_SWAPPED" glib:nick="swapped" glib:name="GTK_BUILDER_CLOSURE_SWAPPED" gs:managed-name="Swapped">
        <doc xml:space="preserve" filename="../gtk/gtkbuilderscope.h" line="38">The closure should be created swapped. See
  g_cclosure_new_swap() for details.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_builder_closure_flags_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </bitfield>
    <enumeration name="BuilderError" glib:type-name="GtkBuilderError" glib:get-type="gtk_builder_error_get_type" c:type="GtkBuilderError" glib:error-domain="gtk-builder-error-quark" gs:managed-name="BuilderError">
      <doc xml:space="preserve" filename="../gtk/gtkbuilder.h" line="42">Error codes that identify various errors that can occur while using
`GtkBuilder`.</doc>
      <member name="invalid_type_function" value="0" c:identifier="GTK_BUILDER_ERROR_INVALID_TYPE_FUNCTION" glib:nick="invalid-type-function" glib:name="GTK_BUILDER_ERROR_INVALID_TYPE_FUNCTION" gs:managed-name="InvalidTypeFunction">
        <doc xml:space="preserve" filename="../gtk/gtkbuilder.h" line="44">A type-func attribute didn’t name
 a function that returns a `GType`.</doc>
      </member>
      <member name="unhandled_tag" value="1" c:identifier="GTK_BUILDER_ERROR_UNHANDLED_TAG" glib:nick="unhandled-tag" glib:name="GTK_BUILDER_ERROR_UNHANDLED_TAG" gs:managed-name="UnhandledTag">
        <doc xml:space="preserve" filename="../gtk/gtkbuilder.h" line="46">The input contained a tag that `GtkBuilder`
 can’t handle.</doc>
      </member>
      <member name="missing_attribute" value="2" c:identifier="GTK_BUILDER_ERROR_MISSING_ATTRIBUTE" glib:nick="missing-attribute" glib:name="GTK_BUILDER_ERROR_MISSING_ATTRIBUTE" gs:managed-name="MissingAttribute">
        <doc xml:space="preserve" filename="../gtk/gtkbuilder.h" line="48">An attribute that is required by
 `GtkBuilder` was missing.</doc>
      </member>
      <member name="invalid_attribute" value="3" c:identifier="GTK_BUILDER_ERROR_INVALID_ATTRIBUTE" glib:nick="invalid-attribute" glib:name="GTK_BUILDER_ERROR_INVALID_ATTRIBUTE" gs:managed-name="InvalidAttribute">
        <doc xml:space="preserve" filename="../gtk/gtkbuilder.h" line="50">`GtkBuilder` found an attribute that
 it doesn’t understand.</doc>
      </member>
      <member name="invalid_tag" value="4" c:identifier="GTK_BUILDER_ERROR_INVALID_TAG" glib:nick="invalid-tag" glib:name="GTK_BUILDER_ERROR_INVALID_TAG" gs:managed-name="InvalidTag">
        <doc xml:space="preserve" filename="../gtk/gtkbuilder.h" line="52">`GtkBuilder` found a tag that
 it doesn’t understand.</doc>
      </member>
      <member name="missing_property_value" value="5" c:identifier="GTK_BUILDER_ERROR_MISSING_PROPERTY_VALUE" glib:nick="missing-property-value" glib:name="GTK_BUILDER_ERROR_MISSING_PROPERTY_VALUE" gs:managed-name="MissingPropertyValue">
        <doc xml:space="preserve" filename="../gtk/gtkbuilder.h" line="54">A required property value was
 missing.</doc>
      </member>
      <member name="invalid_value" value="6" c:identifier="GTK_BUILDER_ERROR_INVALID_VALUE" glib:nick="invalid-value" glib:name="GTK_BUILDER_ERROR_INVALID_VALUE" gs:managed-name="InvalidValue">
        <doc xml:space="preserve" filename="../gtk/gtkbuilder.h" line="56">`GtkBuilder` couldn’t parse
 some attribute value.</doc>
      </member>
      <member name="version_mismatch" value="7" c:identifier="GTK_BUILDER_ERROR_VERSION_MISMATCH" glib:nick="version-mismatch" glib:name="GTK_BUILDER_ERROR_VERSION_MISMATCH" gs:managed-name="VersionMismatch">
        <doc xml:space="preserve" filename="../gtk/gtkbuilder.h" line="58">The input file requires a newer version
 of GTK.</doc>
      </member>
      <member name="duplicate_id" value="8" c:identifier="GTK_BUILDER_ERROR_DUPLICATE_ID" glib:nick="duplicate-id" glib:name="GTK_BUILDER_ERROR_DUPLICATE_ID" gs:managed-name="DuplicateId">
        <doc xml:space="preserve" filename="../gtk/gtkbuilder.h" line="60">An object id occurred twice.</doc>
      </member>
      <member name="object_type_refused" value="9" c:identifier="GTK_BUILDER_ERROR_OBJECT_TYPE_REFUSED" glib:nick="object-type-refused" glib:name="GTK_BUILDER_ERROR_OBJECT_TYPE_REFUSED" gs:managed-name="ObjectTypeRefused">
        <doc xml:space="preserve" filename="../gtk/gtkbuilder.h" line="61">A specified object type is of the same type or
 derived from the type of the composite class being extended with builder XML.</doc>
      </member>
      <member name="template_mismatch" value="10" c:identifier="GTK_BUILDER_ERROR_TEMPLATE_MISMATCH" glib:nick="template-mismatch" glib:name="GTK_BUILDER_ERROR_TEMPLATE_MISMATCH" gs:managed-name="TemplateMismatch">
        <doc xml:space="preserve" filename="../gtk/gtkbuilder.h" line="63">The wrong type was specified in a composite class’s template XML</doc>
      </member>
      <member name="invalid_property" value="11" c:identifier="GTK_BUILDER_ERROR_INVALID_PROPERTY" glib:nick="invalid-property" glib:name="GTK_BUILDER_ERROR_INVALID_PROPERTY" gs:managed-name="InvalidProperty">
        <doc xml:space="preserve" filename="../gtk/gtkbuilder.h" line="64">The specified property is unknown for the object class.</doc>
      </member>
      <member name="invalid_signal" value="12" c:identifier="GTK_BUILDER_ERROR_INVALID_SIGNAL" glib:nick="invalid-signal" glib:name="GTK_BUILDER_ERROR_INVALID_SIGNAL" gs:managed-name="InvalidSignal">
        <doc xml:space="preserve" filename="../gtk/gtkbuilder.h" line="65">The specified signal is unknown for the object class.</doc>
      </member>
      <member name="invalid_id" value="13" c:identifier="GTK_BUILDER_ERROR_INVALID_ID" glib:nick="invalid-id" glib:name="GTK_BUILDER_ERROR_INVALID_ID" gs:managed-name="InvalidId">
        <doc xml:space="preserve" filename="../gtk/gtkbuilder.h" line="66">An object id is unknown.</doc>
      </member>
      <member name="invalid_function" value="14" c:identifier="GTK_BUILDER_ERROR_INVALID_FUNCTION" glib:nick="invalid-function" glib:name="GTK_BUILDER_ERROR_INVALID_FUNCTION" gs:managed-name="InvalidFunction">
        <doc xml:space="preserve" filename="../gtk/gtkbuilder.h" line="67">A function could not be found. This often happens
  when symbols are set to be kept private. Compiling code with -rdynamic or using the
  `gmodule-export-2.0` pkgconfig module can fix this problem.</doc>
      </member>
      <gs:managed-property name="get_quark" gs:dll-name="gtk-4.1" gs:managed-name="Quark">
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <type name="GLib.Quark" c:type="GQuark" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </gs:managed-property>
      <function name="get_quark" c:identifier="gtk_builder_error_quark" gs:dll-name="gtk-4.1" gs:managed-name="GetQuark" gs:property-getter-for="Quark" gs:access-modifiers="private">
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <type name="GLib.Quark" c:type="GQuark" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_builder_error_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="ButtonsType" glib:type-name="GtkButtonsType" glib:get-type="gtk_buttons_type_get_type" c:type="GtkButtonsType" gs:managed-name="ButtonsType">
      <doc xml:space="preserve" filename="../gtk/gtkmessagedialog.h" line="50">Prebuilt sets of buttons for `GtkDialog`.

If none of these choices are appropriate, simply use
%GTK_BUTTONS_NONE and call [method@Gtk.Dialog.add_buttons].

&gt; Please note that %GTK_BUTTONS_OK, %GTK_BUTTONS_YES_NO
&gt; and %GTK_BUTTONS_OK_CANCEL are discouraged by the
&gt; [GNOME Human Interface Guidelines](http://library.gnome.org/devel/hig-book/stable/).</doc>
      <member name="none" value="0" c:identifier="GTK_BUTTONS_NONE" glib:nick="none" glib:name="GTK_BUTTONS_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtkmessagedialog.h" line="52">no buttons at all</doc>
      </member>
      <member name="ok" value="1" c:identifier="GTK_BUTTONS_OK" glib:nick="ok" glib:name="GTK_BUTTONS_OK" gs:managed-name="Ok">
        <doc xml:space="preserve" filename="../gtk/gtkmessagedialog.h" line="53">an OK button</doc>
      </member>
      <member name="close" value="2" c:identifier="GTK_BUTTONS_CLOSE" glib:nick="close" glib:name="GTK_BUTTONS_CLOSE" gs:managed-name="Close">
        <doc xml:space="preserve" filename="../gtk/gtkmessagedialog.h" line="54">a Close button</doc>
      </member>
      <member name="cancel" value="3" c:identifier="GTK_BUTTONS_CANCEL" glib:nick="cancel" glib:name="GTK_BUTTONS_CANCEL" gs:managed-name="Cancel">
        <doc xml:space="preserve" filename="../gtk/gtkmessagedialog.h" line="55">a Cancel button</doc>
      </member>
      <member name="yes_no" value="4" c:identifier="GTK_BUTTONS_YES_NO" glib:nick="yes-no" glib:name="GTK_BUTTONS_YES_NO" gs:managed-name="YesNo">
        <doc xml:space="preserve" filename="../gtk/gtkmessagedialog.h" line="56">Yes and No buttons</doc>
      </member>
      <member name="ok_cancel" value="5" c:identifier="GTK_BUTTONS_OK_CANCEL" glib:nick="ok-cancel" glib:name="GTK_BUTTONS_OK_CANCEL" gs:managed-name="OkCancel">
        <doc xml:space="preserve" filename="../gtk/gtkmessagedialog.h" line="57">OK and Cancel buttons</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_buttons_type_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="CellRendererAccelMode" glib:type-name="GtkCellRendererAccelMode" glib:get-type="gtk_cell_renderer_accel_mode_get_type" c:type="GtkCellRendererAccelMode" gs:managed-name="CellRendererAccelMode">
      <doc xml:space="preserve" filename="../gtk/gtkcellrendereraccel.h" line="35">The available modes for [property@Gtk.CellRendererAccel:accel-mode].</doc>
      <member name="gtk" value="0" c:identifier="GTK_CELL_RENDERER_ACCEL_MODE_GTK" glib:nick="gtk" glib:name="GTK_CELL_RENDERER_ACCEL_MODE_GTK" gs:managed-name="Gtk">
        <doc xml:space="preserve" filename="../gtk/gtkcellrendereraccel.h" line="37">GTK accelerators mode</doc>
      </member>
      <member name="other" value="1" c:identifier="GTK_CELL_RENDERER_ACCEL_MODE_OTHER" glib:nick="other" glib:name="GTK_CELL_RENDERER_ACCEL_MODE_OTHER" gs:managed-name="Other">
        <doc xml:space="preserve" filename="../gtk/gtkcellrendereraccel.h" line="38">Other accelerator mode</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_cell_renderer_accel_mode_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="CellRendererMode" glib:type-name="GtkCellRendererMode" glib:get-type="gtk_cell_renderer_mode_get_type" c:type="GtkCellRendererMode" gs:managed-name="CellRendererMode">
      <doc xml:space="preserve" filename="../gtk/gtkcellrenderer.h" line="55">Identifies how the user can interact with a particular cell.</doc>
      <member name="inert" value="0" c:identifier="GTK_CELL_RENDERER_MODE_INERT" glib:nick="inert" glib:name="GTK_CELL_RENDERER_MODE_INERT" gs:managed-name="Inert">
        <doc xml:space="preserve" filename="../gtk/gtkcellrenderer.h" line="57">The cell is just for display
 and cannot be interacted with.  Note that this doesn’t mean that eg. the
 row being drawn can’t be selected -- just that a particular element of
 it cannot be individually modified.</doc>
      </member>
      <member name="activatable" value="1" c:identifier="GTK_CELL_RENDERER_MODE_ACTIVATABLE" glib:nick="activatable" glib:name="GTK_CELL_RENDERER_MODE_ACTIVATABLE" gs:managed-name="Activatable">
        <doc xml:space="preserve" filename="../gtk/gtkcellrenderer.h" line="61">The cell can be clicked.</doc>
      </member>
      <member name="editable" value="2" c:identifier="GTK_CELL_RENDERER_MODE_EDITABLE" glib:nick="editable" glib:name="GTK_CELL_RENDERER_MODE_EDITABLE" gs:managed-name="Editable">
        <doc xml:space="preserve" filename="../gtk/gtkcellrenderer.h" line="62">The cell can be edited or otherwise modified.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_cell_renderer_mode_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <bitfield name="CellRendererState" glib:type-name="GtkCellRendererState" glib:get-type="gtk_cell_renderer_state_get_type" c:type="GtkCellRendererState" gs:managed-name="CellRendererState">
      <doc xml:space="preserve" filename="../gtk/gtkcellrenderer.h" line="30">Tells how a cell is to be rendered.</doc>
      <member name="selected" value="1" c:identifier="GTK_CELL_RENDERER_SELECTED" glib:nick="selected" glib:name="GTK_CELL_RENDERER_SELECTED" gs:managed-name="Selected">
        <doc xml:space="preserve" filename="../gtk/gtkcellrenderer.h" line="32">The cell is currently selected, and
 probably has a selection colored background to render to.</doc>
      </member>
      <member name="prelit" value="2" c:identifier="GTK_CELL_RENDERER_PRELIT" glib:nick="prelit" glib:name="GTK_CELL_RENDERER_PRELIT" gs:managed-name="Prelit">
        <doc xml:space="preserve" filename="../gtk/gtkcellrenderer.h" line="34">The mouse is hovering over the cell.</doc>
      </member>
      <member name="insensitive" value="4" c:identifier="GTK_CELL_RENDERER_INSENSITIVE" glib:nick="insensitive" glib:name="GTK_CELL_RENDERER_INSENSITIVE" gs:managed-name="Insensitive">
        <doc xml:space="preserve" filename="../gtk/gtkcellrenderer.h" line="35">The cell is drawn in an insensitive manner</doc>
      </member>
      <member name="sorted" value="8" c:identifier="GTK_CELL_RENDERER_SORTED" glib:nick="sorted" glib:name="GTK_CELL_RENDERER_SORTED" gs:managed-name="Sorted">
        <doc xml:space="preserve" filename="../gtk/gtkcellrenderer.h" line="36">The cell is in a sorted row</doc>
      </member>
      <member name="focused" value="16" c:identifier="GTK_CELL_RENDERER_FOCUSED" glib:nick="focused" glib:name="GTK_CELL_RENDERER_FOCUSED" gs:managed-name="Focused">
        <doc xml:space="preserve" filename="../gtk/gtkcellrenderer.h" line="37">The cell is in the focus row.</doc>
      </member>
      <member name="expandable" value="32" c:identifier="GTK_CELL_RENDERER_EXPANDABLE" glib:nick="expandable" glib:name="GTK_CELL_RENDERER_EXPANDABLE" gs:managed-name="Expandable">
        <doc xml:space="preserve" filename="../gtk/gtkcellrenderer.h" line="38">The cell is in a row that can be expanded</doc>
      </member>
      <member name="expanded" value="64" c:identifier="GTK_CELL_RENDERER_EXPANDED" glib:nick="expanded" glib:name="GTK_CELL_RENDERER_EXPANDED" gs:managed-name="Expanded">
        <doc xml:space="preserve" filename="../gtk/gtkcellrenderer.h" line="39">The cell is in a row that is expanded</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_cell_renderer_state_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </bitfield>
    <enumeration name="ConstraintAttribute" glib:type-name="GtkConstraintAttribute" glib:get-type="gtk_constraint_attribute_get_type" c:type="GtkConstraintAttribute" gs:managed-name="ConstraintAttribute">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1065">The widget attributes that can be used when creating a [class@Constraint].</doc>
      <member name="none" value="0" c:identifier="GTK_CONSTRAINT_ATTRIBUTE_NONE" glib:nick="none" glib:name="GTK_CONSTRAINT_ATTRIBUTE_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1067">No attribute, used for constant
  relations</doc>
      </member>
      <member name="left" value="1" c:identifier="GTK_CONSTRAINT_ATTRIBUTE_LEFT" glib:nick="left" glib:name="GTK_CONSTRAINT_ATTRIBUTE_LEFT" gs:managed-name="Left">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1069">The left edge of a widget, regardless of
  text direction</doc>
      </member>
      <member name="right" value="2" c:identifier="GTK_CONSTRAINT_ATTRIBUTE_RIGHT" glib:nick="right" glib:name="GTK_CONSTRAINT_ATTRIBUTE_RIGHT" gs:managed-name="Right">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1071">The right edge of a widget, regardless
  of text direction</doc>
      </member>
      <member name="top" value="3" c:identifier="GTK_CONSTRAINT_ATTRIBUTE_TOP" glib:nick="top" glib:name="GTK_CONSTRAINT_ATTRIBUTE_TOP" gs:managed-name="Top">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1073">The top edge of a widget</doc>
      </member>
      <member name="bottom" value="4" c:identifier="GTK_CONSTRAINT_ATTRIBUTE_BOTTOM" glib:nick="bottom" glib:name="GTK_CONSTRAINT_ATTRIBUTE_BOTTOM" gs:managed-name="Bottom">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1074">The bottom edge of a widget</doc>
      </member>
      <member name="start" value="5" c:identifier="GTK_CONSTRAINT_ATTRIBUTE_START" glib:nick="start" glib:name="GTK_CONSTRAINT_ATTRIBUTE_START" gs:managed-name="Start">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1075">The leading edge of a widget, depending
  on text direction; equivalent to %GTK_CONSTRAINT_ATTRIBUTE_LEFT for LTR
  languages, and %GTK_CONSTRAINT_ATTRIBUTE_RIGHT for RTL ones</doc>
      </member>
      <member name="end" value="6" c:identifier="GTK_CONSTRAINT_ATTRIBUTE_END" glib:nick="end" glib:name="GTK_CONSTRAINT_ATTRIBUTE_END" gs:managed-name="End">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1078">The trailing edge of a widget, depending
  on text direction; equivalent to %GTK_CONSTRAINT_ATTRIBUTE_RIGHT for LTR
  languages, and %GTK_CONSTRAINT_ATTRIBUTE_LEFT for RTL ones</doc>
      </member>
      <member name="width" value="7" c:identifier="GTK_CONSTRAINT_ATTRIBUTE_WIDTH" glib:nick="width" glib:name="GTK_CONSTRAINT_ATTRIBUTE_WIDTH" gs:managed-name="Width">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1081">The width of a widget</doc>
      </member>
      <member name="height" value="8" c:identifier="GTK_CONSTRAINT_ATTRIBUTE_HEIGHT" glib:nick="height" glib:name="GTK_CONSTRAINT_ATTRIBUTE_HEIGHT" gs:managed-name="Height">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1082">The height of a widget</doc>
      </member>
      <member name="center_x" value="9" c:identifier="GTK_CONSTRAINT_ATTRIBUTE_CENTER_X" glib:nick="center-x" glib:name="GTK_CONSTRAINT_ATTRIBUTE_CENTER_X" gs:managed-name="CenterX">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1083">The center of a widget, on the
  horizontal axis</doc>
      </member>
      <member name="center_y" value="10" c:identifier="GTK_CONSTRAINT_ATTRIBUTE_CENTER_Y" glib:nick="center-y" glib:name="GTK_CONSTRAINT_ATTRIBUTE_CENTER_Y" gs:managed-name="CenterY">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1085">The center of a widget, on the
  vertical axis</doc>
      </member>
      <member name="baseline" value="11" c:identifier="GTK_CONSTRAINT_ATTRIBUTE_BASELINE" glib:nick="baseline" glib:name="GTK_CONSTRAINT_ATTRIBUTE_BASELINE" gs:managed-name="Baseline">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1087">The baseline of a widget</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_constraint_attribute_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="ConstraintRelation" glib:type-name="GtkConstraintRelation" glib:get-type="gtk_constraint_relation_get_type" c:type="GtkConstraintRelation" gs:managed-name="ConstraintRelation">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1032">The relation between two terms of a constraint.</doc>
      <member name="le" value="-1" c:identifier="GTK_CONSTRAINT_RELATION_LE" glib:nick="le" glib:name="GTK_CONSTRAINT_RELATION_LE" gs:managed-name="Le">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1035">Less than, or equal</doc>
      </member>
      <member name="eq" value="0" c:identifier="GTK_CONSTRAINT_RELATION_EQ" glib:nick="eq" glib:name="GTK_CONSTRAINT_RELATION_EQ" gs:managed-name="Eq">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1034">Equal</doc>
      </member>
      <member name="ge" value="1" c:identifier="GTK_CONSTRAINT_RELATION_GE" glib:nick="ge" glib:name="GTK_CONSTRAINT_RELATION_GE" gs:managed-name="Ge">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1036">Greater than, or equal</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_constraint_relation_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="ConstraintStrength" glib:type-name="GtkConstraintStrength" glib:get-type="gtk_constraint_strength_get_type" c:type="GtkConstraintStrength" gs:managed-name="ConstraintStrength">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1046">The strength of a constraint, expressed as a symbolic constant.

The strength of a [class@Constraint] can be expressed with any positive
integer; the values of this enumeration can be used for readability.</doc>
      <member name="required" value="1001001000" c:identifier="GTK_CONSTRAINT_STRENGTH_REQUIRED" glib:nick="required" glib:name="GTK_CONSTRAINT_STRENGTH_REQUIRED" gs:managed-name="Required">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1048">The constraint is required towards solving the layout</doc>
      </member>
      <member name="strong" value="1000000000" c:identifier="GTK_CONSTRAINT_STRENGTH_STRONG" glib:nick="strong" glib:name="GTK_CONSTRAINT_STRENGTH_STRONG" gs:managed-name="Strong">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1049">A strong constraint</doc>
      </member>
      <member name="medium" value="1000" c:identifier="GTK_CONSTRAINT_STRENGTH_MEDIUM" glib:nick="medium" glib:name="GTK_CONSTRAINT_STRENGTH_MEDIUM" gs:managed-name="Medium">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1050">A medium constraint</doc>
      </member>
      <member name="weak" value="1" c:identifier="GTK_CONSTRAINT_STRENGTH_WEAK" glib:nick="weak" glib:name="GTK_CONSTRAINT_STRENGTH_WEAK" gs:managed-name="Weak">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1051">A weak constraint</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_constraint_strength_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="ConstraintVflParserError" glib:type-name="GtkConstraintVflParserError" glib:get-type="gtk_constraint_vfl_parser_error_get_type" c:type="GtkConstraintVflParserError" glib:error-domain="gtk-constraint-vfl-parser-error-quark" gs:managed-name="ConstraintVflParserError">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1106">Domain for VFL parsing errors.</doc>
      <member name="invalid_symbol" value="0" c:identifier="GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_SYMBOL" glib:nick="symbol" glib:name="GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_SYMBOL" gs:managed-name="InvalidSymbol">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1108">Invalid or unknown symbol</doc>
      </member>
      <member name="invalid_attribute" value="1" c:identifier="GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_ATTRIBUTE" glib:nick="attribute" glib:name="GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_ATTRIBUTE" gs:managed-name="InvalidAttribute">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1109">Invalid or unknown attribute</doc>
      </member>
      <member name="invalid_view" value="2" c:identifier="GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_VIEW" glib:nick="view" glib:name="GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_VIEW" gs:managed-name="InvalidView">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1110">Invalid or unknown view</doc>
      </member>
      <member name="invalid_metric" value="3" c:identifier="GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_METRIC" glib:nick="metric" glib:name="GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_METRIC" gs:managed-name="InvalidMetric">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1111">Invalid or unknown metric</doc>
      </member>
      <member name="invalid_priority" value="4" c:identifier="GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_PRIORITY" glib:nick="priority" glib:name="GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_PRIORITY" gs:managed-name="InvalidPriority">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1112">Invalid or unknown priority</doc>
      </member>
      <member name="invalid_relation" value="5" c:identifier="GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_RELATION" glib:nick="relation" glib:name="GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_RELATION" gs:managed-name="InvalidRelation">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1113">Invalid or unknown relation</doc>
      </member>
      <gs:managed-property name="get_quark" gs:dll-name="gtk-4.1" gs:managed-name="Quark">
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <type name="GLib.Quark" c:type="GQuark" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </gs:managed-property>
      <function name="get_quark" c:identifier="gtk_constraint_vfl_parser_error_quark" gs:dll-name="gtk-4.1" gs:managed-name="GetQuark" gs:property-getter-for="Quark" gs:access-modifiers="private">
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <type name="GLib.Quark" c:type="GQuark" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_constraint_vfl_parser_error_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="CornerType" glib:type-name="GtkCornerType" glib:get-type="gtk_corner_type_get_type" c:type="GtkCornerType" gs:managed-name="CornerType">
      <doc xml:space="preserve" filename="../gtk/gtkscrolledwindow.h" line="44">Specifies which corner a child widget should be placed in when packed into
a `GtkScrolledWindow.`

This is effectively the opposite of where the scroll bars are placed.</doc>
      <member name="top_left" value="0" c:identifier="GTK_CORNER_TOP_LEFT" glib:nick="top-left" glib:name="GTK_CORNER_TOP_LEFT" gs:managed-name="TopLeft">
        <doc xml:space="preserve" filename="../gtk/gtkscrolledwindow.h" line="46">Place the scrollbars on the right and bottom of the
  widget (default behaviour).</doc>
      </member>
      <member name="bottom_left" value="1" c:identifier="GTK_CORNER_BOTTOM_LEFT" glib:nick="bottom-left" glib:name="GTK_CORNER_BOTTOM_LEFT" gs:managed-name="BottomLeft">
        <doc xml:space="preserve" filename="../gtk/gtkscrolledwindow.h" line="48">Place the scrollbars on the top and right of the
  widget.</doc>
      </member>
      <member name="top_right" value="2" c:identifier="GTK_CORNER_TOP_RIGHT" glib:nick="top-right" glib:name="GTK_CORNER_TOP_RIGHT" gs:managed-name="TopRight">
        <doc xml:space="preserve" filename="../gtk/gtkscrolledwindow.h" line="50">Place the scrollbars on the left and bottom of the
  widget.</doc>
      </member>
      <member name="bottom_right" value="3" c:identifier="GTK_CORNER_BOTTOM_RIGHT" glib:nick="bottom-right" glib:name="GTK_CORNER_BOTTOM_RIGHT" gs:managed-name="BottomRight">
        <doc xml:space="preserve" filename="../gtk/gtkscrolledwindow.h" line="52">Place the scrollbars on the top and left of the
  widget.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_corner_type_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="CssParserError" c:type="GtkCssParserError" glib:error-domain="gtk-css-parser-error-quark" gs:managed-name="CssParserError">
      <doc xml:space="preserve" filename="../gtk/css/gtkcssenums.h" line="35">Errors that can occur while parsing CSS.

These errors are unexpected and will cause parts of the given CSS
to be ignored.</doc>
      <source-position filename="../gtk/css/gtkcssenums.h" line="55" />
      <member name="failed" value="0" c:identifier="GTK_CSS_PARSER_ERROR_FAILED" gs:managed-name="Failed">
        <doc xml:space="preserve" filename="../gtk/css/gtkcssenums.h" line="37">Unknown failure.</doc>
      </member>
      <member name="syntax" value="1" c:identifier="GTK_CSS_PARSER_ERROR_SYNTAX" gs:managed-name="Syntax">
        <doc xml:space="preserve" filename="../gtk/css/gtkcssenums.h" line="38">The given text does not form valid syntax</doc>
      </member>
      <member name="import" value="2" c:identifier="GTK_CSS_PARSER_ERROR_IMPORT" gs:managed-name="Import">
        <doc xml:space="preserve" filename="../gtk/css/gtkcssenums.h" line="39">Failed to import a resource</doc>
      </member>
      <member name="name" value="3" c:identifier="GTK_CSS_PARSER_ERROR_NAME" gs:managed-name="Name">
        <doc xml:space="preserve" filename="../gtk/css/gtkcssenums.h" line="40">The given name has not been defined</doc>
      </member>
      <member name="unknown_value" value="4" c:identifier="GTK_CSS_PARSER_ERROR_UNKNOWN_VALUE" gs:managed-name="UnknownValue">
        <doc xml:space="preserve" filename="../gtk/css/gtkcssenums.h" line="41">The given value is not correct</doc>
      </member>
    </enumeration>
    <enumeration name="CssParserWarning" c:type="GtkCssParserWarning" gs:managed-name="CssParserWarning">
      <doc xml:space="preserve" filename="../gtk/css/gtkcssenums.h" line="57">Warnings that can occur while parsing CSS.

Unlike `GtkCssParserError`s, warnings do not cause the parser to
skip any input, but they indicate issues that should be fixed.</doc>
      <source-position filename="../gtk/css/gtkcssenums.h" line="75" />
      <member name="deprecated" value="0" c:identifier="GTK_CSS_PARSER_WARNING_DEPRECATED" gs:managed-name="Deprecated">
        <doc xml:space="preserve" filename="../gtk/css/gtkcssenums.h" line="59">The given construct is
  deprecated and will be removed in a future version</doc>
      </member>
      <member name="syntax" value="1" c:identifier="GTK_CSS_PARSER_WARNING_SYNTAX" gs:managed-name="Syntax">
        <doc xml:space="preserve" filename="../gtk/css/gtkcssenums.h" line="61">A syntax construct was used
  that should be avoided</doc>
      </member>
      <member name="unimplemented" value="2" c:identifier="GTK_CSS_PARSER_WARNING_UNIMPLEMENTED" gs:managed-name="Unimplemented">
        <doc xml:space="preserve" filename="../gtk/css/gtkcssenums.h" line="63">A feature is not implemented</doc>
      </member>
    </enumeration>
    <bitfield name="DebugFlags" glib:type-name="GtkDebugFlags" glib:get-type="gtk_debug_flags_get_type" c:type="GtkDebugFlags" gs:managed-name="DebugFlags">
      <doc xml:space="preserve" filename="../gtk/gtkdebug.h" line="37">Flags to use with gtk_set_debug_flags().

Settings these flags causes GTK to print out different
types of debugging information. Some of these flags are
only available when GTK has been configured with `-Ddebug=true`.</doc>
      <member name="text" value="1" c:identifier="GTK_DEBUG_TEXT" glib:nick="text" glib:name="GTK_DEBUG_TEXT" gs:managed-name="Text">
        <doc xml:space="preserve" filename="../gtk/gtkdebug.h" line="39">Information about GtkTextView</doc>
      </member>
      <member name="tree" value="2" c:identifier="GTK_DEBUG_TREE" glib:nick="tree" glib:name="GTK_DEBUG_TREE" gs:managed-name="Tree">
        <doc xml:space="preserve" filename="../gtk/gtkdebug.h" line="40">Information about GtkTreeView</doc>
      </member>
      <member name="keybindings" value="4" c:identifier="GTK_DEBUG_KEYBINDINGS" glib:nick="keybindings" glib:name="GTK_DEBUG_KEYBINDINGS" gs:managed-name="Keybindings">
        <doc xml:space="preserve" filename="../gtk/gtkdebug.h" line="41">Information about keyboard shortcuts</doc>
      </member>
      <member name="modules" value="8" c:identifier="GTK_DEBUG_MODULES" glib:nick="modules" glib:name="GTK_DEBUG_MODULES" gs:managed-name="Modules">
        <doc xml:space="preserve" filename="../gtk/gtkdebug.h" line="42">Information about modules and extensions</doc>
      </member>
      <member name="geometry" value="16" c:identifier="GTK_DEBUG_GEOMETRY" glib:nick="geometry" glib:name="GTK_DEBUG_GEOMETRY" gs:managed-name="Geometry">
        <doc xml:space="preserve" filename="../gtk/gtkdebug.h" line="43">Information about size allocation</doc>
      </member>
      <member name="icontheme" value="32" c:identifier="GTK_DEBUG_ICONTHEME" glib:nick="icontheme" glib:name="GTK_DEBUG_ICONTHEME" gs:managed-name="Icontheme">
        <doc xml:space="preserve" filename="../gtk/gtkdebug.h" line="44">Information about icon themes</doc>
      </member>
      <member name="printing" value="64" c:identifier="GTK_DEBUG_PRINTING" glib:nick="printing" glib:name="GTK_DEBUG_PRINTING" gs:managed-name="Printing">
        <doc xml:space="preserve" filename="../gtk/gtkdebug.h" line="45">Information about printing</doc>
      </member>
      <member name="builder" value="128" c:identifier="GTK_DEBUG_BUILDER" glib:nick="builder" glib:name="GTK_DEBUG_BUILDER" gs:managed-name="Builder">
        <doc xml:space="preserve" filename="../gtk/gtkdebug.h" line="46">Trace GtkBuilder operation</doc>
      </member>
      <member name="size_request" value="256" c:identifier="GTK_DEBUG_SIZE_REQUEST" glib:nick="size-request" glib:name="GTK_DEBUG_SIZE_REQUEST" gs:managed-name="SizeRequest">
        <doc xml:space="preserve" filename="../gtk/gtkdebug.h" line="47">Information about size requests</doc>
      </member>
      <member name="no_css_cache" value="512" c:identifier="GTK_DEBUG_NO_CSS_CACHE" glib:nick="no-css-cache" glib:name="GTK_DEBUG_NO_CSS_CACHE" gs:managed-name="NoCssCache">
        <doc xml:space="preserve" filename="../gtk/gtkdebug.h" line="48">Disable the style property cache</doc>
      </member>
      <member name="interactive" value="1024" c:identifier="GTK_DEBUG_INTERACTIVE" glib:nick="interactive" glib:name="GTK_DEBUG_INTERACTIVE" gs:managed-name="Interactive">
        <doc xml:space="preserve" filename="../gtk/gtkdebug.h" line="49">Open the GTK inspector</doc>
      </member>
      <member name="touchscreen" value="2048" c:identifier="GTK_DEBUG_TOUCHSCREEN" glib:nick="touchscreen" glib:name="GTK_DEBUG_TOUCHSCREEN" gs:managed-name="Touchscreen">
        <doc xml:space="preserve" filename="../gtk/gtkdebug.h" line="50">Pretend the pointer is a touchscreen</doc>
      </member>
      <member name="actions" value="4096" c:identifier="GTK_DEBUG_ACTIONS" glib:nick="actions" glib:name="GTK_DEBUG_ACTIONS" gs:managed-name="Actions">
        <doc xml:space="preserve" filename="../gtk/gtkdebug.h" line="51">Information about actions and menu models</doc>
      </member>
      <member name="layout" value="8192" c:identifier="GTK_DEBUG_LAYOUT" glib:nick="layout" glib:name="GTK_DEBUG_LAYOUT" gs:managed-name="Layout">
        <doc xml:space="preserve" filename="../gtk/gtkdebug.h" line="52">Information from layout managers</doc>
      </member>
      <member name="snapshot" value="16384" c:identifier="GTK_DEBUG_SNAPSHOT" glib:nick="snapshot" glib:name="GTK_DEBUG_SNAPSHOT" gs:managed-name="Snapshot">
        <doc xml:space="preserve" filename="../gtk/gtkdebug.h" line="53">Include debug render nodes in the generated snapshots</doc>
      </member>
      <member name="constraints" value="32768" c:identifier="GTK_DEBUG_CONSTRAINTS" glib:nick="constraints" glib:name="GTK_DEBUG_CONSTRAINTS" gs:managed-name="Constraints">
        <doc xml:space="preserve" filename="../gtk/gtkdebug.h" line="54">Information from the constraints solver</doc>
      </member>
      <member name="builder_objects" value="65536" c:identifier="GTK_DEBUG_BUILDER_OBJECTS" glib:nick="builder-objects" glib:name="GTK_DEBUG_BUILDER_OBJECTS" gs:managed-name="BuilderObjects">
        <doc xml:space="preserve" filename="../gtk/gtkdebug.h" line="55">Log unused GtkBuilder objects</doc>
      </member>
      <member name="a11y" value="131072" c:identifier="GTK_DEBUG_A11Y" glib:nick="a11y" glib:name="GTK_DEBUG_A11Y" gs:managed-name="A11y">
        <doc xml:space="preserve" filename="../gtk/gtkdebug.h" line="56">Information about accessibility state changes</doc>
      </member>
      <member name="iconfallback" value="262144" c:identifier="GTK_DEBUG_ICONFALLBACK" glib:nick="iconfallback" glib:name="GTK_DEBUG_ICONFALLBACK" version="4.2" gs:managed-name="Iconfallback">
        <doc xml:space="preserve" filename="../gtk/gtkdebug.h" line="57">Information about icon fallback.</doc>
      </member>
      <gs:managed-property name="get__current" gs:dll-name="gtk-4.1" gs:managed-name="Current">
        <doc xml:space="preserve" filename="../gtk/gtkmain.c" line="149">Returns the GTK debug flags that are currently active.

This function is intended for GTK modules that want
to adjust their debug output based on GTK debug flags.</doc>
        <source-position filename="../gtk/gtkdebug.h" line="103" />
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <doc xml:space="preserve" filename="../gtk/gtkmain.c" line="157">the GTK debug flags.</doc>
          <type name="DebugFlags" c:type="GtkDebugFlags" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </gs:managed-property>
      <function name="get__current" c:identifier="gtk_get_debug_flags" gs:dll-name="gtk-4.1" gs:managed-name="GetCurrent" gs:property-getter-for="Current" gs:access-modifiers="private">
        <doc xml:space="preserve" filename="../gtk/gtkmain.c" line="149">Returns the GTK debug flags that are currently active.

This function is intended for GTK modules that want
to adjust their debug output based on GTK debug flags.</doc>
        <source-position filename="../gtk/gtkdebug.h" line="103" />
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <doc xml:space="preserve" filename="../gtk/gtkmain.c" line="157">the GTK debug flags.</doc>
          <type name="DebugFlags" c:type="GtkDebugFlags" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
      <function name="set__current" c:identifier="gtk_set_debug_flags" gs:dll-name="gtk-4.1" gs:managed-name="SetCurrent" gs:property-setter-for="Current" gs:access-modifiers="private">
        <doc xml:space="preserve" filename="../gtk/gtkmain.c" line="168">Sets the GTK debug flags.</doc>
        <source-position filename="../gtk/gtkdebug.h" line="105" />
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <type name="none" c:type="void" />
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none" gs:managed-name="flags" direction="in">
            <doc xml:space="preserve" filename="../gtk/gtkmain.c" line="170">the debug flags to set</doc>
            <type name="DebugFlags" c:type="GtkDebugFlags" />
          </parameter>
        </parameters>
        <gs:managed-parameters>
          <parameter name="flags" transfer-ownership="none" gs:managed-name="flags" direction="in">
            <doc xml:space="preserve" filename="../gtk/gtkmain.c" line="170">the debug flags to set</doc>
            <type name="DebugFlags" c:type="GtkDebugFlags" />
          </parameter>
        </gs:managed-parameters>
      </function>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_debug_flags_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </bitfield>
    <enumeration name="DeleteType" glib:type-name="GtkDeleteType" glib:get-type="gtk_delete_type_get_type" c:type="GtkDeleteType" gs:managed-name="DeleteType">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="113">Passed to various keybinding signals for deleting text.</doc>
      <member name="chars" value="0" c:identifier="GTK_DELETE_CHARS" glib:nick="chars" glib:name="GTK_DELETE_CHARS" gs:managed-name="Chars">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="115">Delete characters.</doc>
      </member>
      <member name="word_ends" value="1" c:identifier="GTK_DELETE_WORD_ENDS" glib:nick="word-ends" glib:name="GTK_DELETE_WORD_ENDS" gs:managed-name="WordEnds">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="116">Delete only the portion of the word to the
  left/right of cursor if we’re in the middle of a word.</doc>
      </member>
      <member name="words" value="2" c:identifier="GTK_DELETE_WORDS" glib:nick="words" glib:name="GTK_DELETE_WORDS" gs:managed-name="Words">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="118">Delete words.</doc>
      </member>
      <member name="display_lines" value="3" c:identifier="GTK_DELETE_DISPLAY_LINES" glib:nick="display-lines" glib:name="GTK_DELETE_DISPLAY_LINES" gs:managed-name="DisplayLines">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="119">Delete display-lines. Display-lines
  refers to the visible lines, with respect to the current line
  breaks. As opposed to paragraphs, which are defined by line
  breaks in the input.</doc>
      </member>
      <member name="display_line_ends" value="4" c:identifier="GTK_DELETE_DISPLAY_LINE_ENDS" glib:nick="display-line-ends" glib:name="GTK_DELETE_DISPLAY_LINE_ENDS" gs:managed-name="DisplayLineEnds">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="123">Delete only the portion of the
  display-line to the left/right of cursor.</doc>
      </member>
      <member name="paragraph_ends" value="5" c:identifier="GTK_DELETE_PARAGRAPH_ENDS" glib:nick="paragraph-ends" glib:name="GTK_DELETE_PARAGRAPH_ENDS" gs:managed-name="ParagraphEnds">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="125">Delete to the end of the
  paragraph. Like C-k in Emacs (or its reverse).</doc>
      </member>
      <member name="paragraphs" value="6" c:identifier="GTK_DELETE_PARAGRAPHS" glib:nick="paragraphs" glib:name="GTK_DELETE_PARAGRAPHS" gs:managed-name="Paragraphs">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="127">Delete entire line. Like C-k in pico.</doc>
      </member>
      <member name="whitespace" value="7" c:identifier="GTK_DELETE_WHITESPACE" glib:nick="whitespace" glib:name="GTK_DELETE_WHITESPACE" gs:managed-name="Whitespace">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="128">Delete only whitespace. Like M-\ in Emacs.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_delete_type_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <bitfield name="DialogFlags" glib:type-name="GtkDialogFlags" glib:get-type="gtk_dialog_flags_get_type" c:type="GtkDialogFlags" gs:managed-name="DialogFlags">
      <doc xml:space="preserve" filename="../gtk/gtkdialog.h" line="36">Flags used to influence dialog construction.</doc>
      <member name="modal" value="1" c:identifier="GTK_DIALOG_MODAL" glib:nick="modal" glib:name="GTK_DIALOG_MODAL" gs:managed-name="Modal">
        <doc xml:space="preserve" filename="../gtk/gtkdialog.h" line="38">Make the constructed dialog modal</doc>
      </member>
      <member name="destroy_with_parent" value="2" c:identifier="GTK_DIALOG_DESTROY_WITH_PARENT" glib:nick="destroy-with-parent" glib:name="GTK_DIALOG_DESTROY_WITH_PARENT" gs:managed-name="DestroyWithParent">
        <doc xml:space="preserve" filename="../gtk/gtkdialog.h" line="39">Destroy the dialog when its parent is destroyed</doc>
      </member>
      <member name="use_header_bar" value="4" c:identifier="GTK_DIALOG_USE_HEADER_BAR" glib:nick="use-header-bar" glib:name="GTK_DIALOG_USE_HEADER_BAR" gs:managed-name="UseHeaderBar">
        <doc xml:space="preserve" filename="../gtk/gtkdialog.h" line="40">Create dialog with actions in header
  bar instead of action area</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_dialog_flags_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </bitfield>
    <enumeration name="DirectionType" glib:type-name="GtkDirectionType" glib:get-type="gtk_direction_type_get_type" c:type="GtkDirectionType" gs:managed-name="DirectionType">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="145">Focus movement types.</doc>
      <member name="tab_forward" value="0" c:identifier="GTK_DIR_TAB_FORWARD" glib:nick="tab-forward" glib:name="GTK_DIR_TAB_FORWARD" gs:managed-name="TabForward">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="147">Move forward.</doc>
      </member>
      <member name="tab_backward" value="1" c:identifier="GTK_DIR_TAB_BACKWARD" glib:nick="tab-backward" glib:name="GTK_DIR_TAB_BACKWARD" gs:managed-name="TabBackward">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="148">Move backward.</doc>
      </member>
      <member name="up" value="2" c:identifier="GTK_DIR_UP" glib:nick="up" glib:name="GTK_DIR_UP" gs:managed-name="Up">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="149">Move up.</doc>
      </member>
      <member name="down" value="3" c:identifier="GTK_DIR_DOWN" glib:nick="down" glib:name="GTK_DIR_DOWN" gs:managed-name="Down">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="150">Move down.</doc>
      </member>
      <member name="left" value="4" c:identifier="GTK_DIR_LEFT" glib:nick="left" glib:name="GTK_DIR_LEFT" gs:managed-name="Left">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="151">Move left.</doc>
      </member>
      <member name="right" value="5" c:identifier="GTK_DIR_RIGHT" glib:nick="right" glib:name="GTK_DIR_RIGHT" gs:managed-name="Right">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="152">Move right.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_direction_type_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="EditableProperties" glib:type-name="GtkEditableProperties" glib:get-type="gtk_editable_properties_get_type" c:type="GtkEditableProperties" gs:managed-name="EditableProperties">
      <doc xml:space="preserve" filename="../gtk/gtkeditable.h" line="149">The identifiers for [iface@Gtk.Editable] properties.

See [func@Gtk.Editable.install_properties] for details on how to
implement the `GtkEditable` interface.</doc>
      <member name="prop_text" value="0" c:identifier="GTK_EDITABLE_PROP_TEXT" glib:nick="prop-text" glib:name="GTK_EDITABLE_PROP_TEXT" gs:managed-name="PropText">
        <doc xml:space="preserve" filename="../gtk/gtkeditable.h" line="151">the property id for [property@Gtk.Editable:text]</doc>
      </member>
      <member name="prop_cursor_position" value="1" c:identifier="GTK_EDITABLE_PROP_CURSOR_POSITION" glib:nick="prop-cursor-position" glib:name="GTK_EDITABLE_PROP_CURSOR_POSITION" gs:managed-name="PropCursorPosition">
        <doc xml:space="preserve" filename="../gtk/gtkeditable.h" line="152">the property id for [property@Gtk.Editable:cursor-position]</doc>
      </member>
      <member name="prop_selection_bound" value="2" c:identifier="GTK_EDITABLE_PROP_SELECTION_BOUND" glib:nick="prop-selection-bound" glib:name="GTK_EDITABLE_PROP_SELECTION_BOUND" gs:managed-name="PropSelectionBound">
        <doc xml:space="preserve" filename="../gtk/gtkeditable.h" line="153">the property id for [property@Gtk.Editable:selection-bound]</doc>
      </member>
      <member name="prop_editable" value="3" c:identifier="GTK_EDITABLE_PROP_EDITABLE" glib:nick="prop-editable" glib:name="GTK_EDITABLE_PROP_EDITABLE" gs:managed-name="PropEditable">
        <doc xml:space="preserve" filename="../gtk/gtkeditable.h" line="154">the property id for [property@Gtk.Editable:editable]</doc>
      </member>
      <member name="prop_width_chars" value="4" c:identifier="GTK_EDITABLE_PROP_WIDTH_CHARS" glib:nick="prop-width-chars" glib:name="GTK_EDITABLE_PROP_WIDTH_CHARS" gs:managed-name="PropWidthChars">
        <doc xml:space="preserve" filename="../gtk/gtkeditable.h" line="155">the property id for [property@Gtk.Editable:width-chars]</doc>
      </member>
      <member name="prop_max_width_chars" value="5" c:identifier="GTK_EDITABLE_PROP_MAX_WIDTH_CHARS" glib:nick="prop-max-width-chars" glib:name="GTK_EDITABLE_PROP_MAX_WIDTH_CHARS" gs:managed-name="PropMaxWidthChars">
        <doc xml:space="preserve" filename="../gtk/gtkeditable.h" line="156">the property id for [property@Gtk.Editable:max-width-chars]</doc>
      </member>
      <member name="prop_xalign" value="6" c:identifier="GTK_EDITABLE_PROP_XALIGN" glib:nick="prop-xalign" glib:name="GTK_EDITABLE_PROP_XALIGN" gs:managed-name="PropXalign">
        <doc xml:space="preserve" filename="../gtk/gtkeditable.h" line="157">the property id for [property@Gtk.Editable:xalign]</doc>
      </member>
      <member name="prop_enable_undo" value="7" c:identifier="GTK_EDITABLE_PROP_ENABLE_UNDO" glib:nick="prop-enable-undo" glib:name="GTK_EDITABLE_PROP_ENABLE_UNDO" gs:managed-name="PropEnableUndo">
        <doc xml:space="preserve" filename="../gtk/gtkeditable.h" line="158">the property id for [property@Gtk.Editable:enable-undo]</doc>
      </member>
      <member name="num_properties" value="8" c:identifier="GTK_EDITABLE_NUM_PROPERTIES" glib:nick="num-properties" glib:name="GTK_EDITABLE_NUM_PROPERTIES" gs:managed-name="NumProperties">
        <doc xml:space="preserve" filename="../gtk/gtkeditable.h" line="159">the number of properties</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_editable_properties_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="EntryIconPosition" glib:type-name="GtkEntryIconPosition" glib:get-type="gtk_entry_icon_position_get_type" c:type="GtkEntryIconPosition" gs:managed-name="EntryIconPosition">
      <doc xml:space="preserve" filename="../gtk/gtkentry.h" line="53">Specifies the side of the entry at which an icon is placed.</doc>
      <member name="primary" value="0" c:identifier="GTK_ENTRY_ICON_PRIMARY" glib:nick="primary" glib:name="GTK_ENTRY_ICON_PRIMARY" gs:managed-name="Primary">
        <doc xml:space="preserve" filename="../gtk/gtkentry.h" line="55">At the beginning of the entry (depending on the text direction).</doc>
      </member>
      <member name="secondary" value="1" c:identifier="GTK_ENTRY_ICON_SECONDARY" glib:nick="secondary" glib:name="GTK_ENTRY_ICON_SECONDARY" gs:managed-name="Secondary">
        <doc xml:space="preserve" filename="../gtk/gtkentry.h" line="56">At the end of the entry (depending on the text direction).</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_entry_icon_position_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <bitfield name="EventControllerScrollFlags" glib:type-name="GtkEventControllerScrollFlags" glib:get-type="gtk_event_controller_scroll_flags_get_type" c:type="GtkEventControllerScrollFlags" gs:managed-name="EventControllerScrollFlags">
      <doc xml:space="preserve" filename="../gtk/gtkeventcontrollerscroll.h" line="42">Describes the behavior of a `GtkEventControllerScroll`.</doc>
      <member name="none" value="0" c:identifier="GTK_EVENT_CONTROLLER_SCROLL_NONE" glib:nick="none" glib:name="GTK_EVENT_CONTROLLER_SCROLL_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtkeventcontrollerscroll.h" line="44">Don't emit scroll.</doc>
      </member>
      <member name="vertical" value="1" c:identifier="GTK_EVENT_CONTROLLER_SCROLL_VERTICAL" glib:nick="vertical" glib:name="GTK_EVENT_CONTROLLER_SCROLL_VERTICAL" gs:managed-name="Vertical">
        <doc xml:space="preserve" filename="../gtk/gtkeventcontrollerscroll.h" line="45">Emit scroll with vertical deltas.</doc>
      </member>
      <member name="horizontal" value="2" c:identifier="GTK_EVENT_CONTROLLER_SCROLL_HORIZONTAL" glib:nick="horizontal" glib:name="GTK_EVENT_CONTROLLER_SCROLL_HORIZONTAL" gs:managed-name="Horizontal">
        <doc xml:space="preserve" filename="../gtk/gtkeventcontrollerscroll.h" line="46">Emit scroll with horizontal deltas.</doc>
      </member>
      <member name="discrete" value="4" c:identifier="GTK_EVENT_CONTROLLER_SCROLL_DISCRETE" glib:nick="discrete" glib:name="GTK_EVENT_CONTROLLER_SCROLL_DISCRETE" gs:managed-name="Discrete">
        <doc xml:space="preserve" filename="../gtk/gtkeventcontrollerscroll.h" line="47">Only emit deltas that are multiples of 1.</doc>
      </member>
      <member name="kinetic" value="8" c:identifier="GTK_EVENT_CONTROLLER_SCROLL_KINETIC" glib:nick="kinetic" glib:name="GTK_EVENT_CONTROLLER_SCROLL_KINETIC" gs:managed-name="Kinetic">
        <doc xml:space="preserve" filename="../gtk/gtkeventcontrollerscroll.h" line="48">Emit ::decelerate after continuous scroll finishes.</doc>
      </member>
      <member name="both_axes" value="3" c:identifier="GTK_EVENT_CONTROLLER_SCROLL_BOTH_AXES" glib:nick="both-axes" glib:name="GTK_EVENT_CONTROLLER_SCROLL_BOTH_AXES" gs:managed-name="BothAxes">
        <doc xml:space="preserve" filename="../gtk/gtkeventcontrollerscroll.h" line="49">Emit scroll on both axes.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_event_controller_scroll_flags_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </bitfield>
    <enumeration name="EventSequenceState" glib:type-name="GtkEventSequenceState" glib:get-type="gtk_event_sequence_state_get_type" c:type="GtkEventSequenceState" gs:managed-name="EventSequenceState">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="967">Describes the state of a [struct@Gdk.EventSequence] in a [class@Gesture].</doc>
      <member name="none" value="0" c:identifier="GTK_EVENT_SEQUENCE_NONE" glib:nick="none" glib:name="GTK_EVENT_SEQUENCE_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="969">The sequence is handled, but not grabbed.</doc>
      </member>
      <member name="claimed" value="1" c:identifier="GTK_EVENT_SEQUENCE_CLAIMED" glib:nick="claimed" glib:name="GTK_EVENT_SEQUENCE_CLAIMED" gs:managed-name="Claimed">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="970">The sequence is handled and grabbed.</doc>
      </member>
      <member name="denied" value="2" c:identifier="GTK_EVENT_SEQUENCE_DENIED" glib:nick="denied" glib:name="GTK_EVENT_SEQUENCE_DENIED" gs:managed-name="Denied">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="971">The sequence is denied.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_event_sequence_state_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="FileChooserAction" glib:type-name="GtkFileChooserAction" glib:get-type="gtk_file_chooser_action_get_type" c:type="GtkFileChooserAction" gs:managed-name="FileChooserAction">
      <doc xml:space="preserve" filename="../gtk/gtkfilechooser.h" line="37">Describes whether a `GtkFileChooser` is being used to open existing files
or to save to a possibly new file.</doc>
      <member name="open" value="0" c:identifier="GTK_FILE_CHOOSER_ACTION_OPEN" glib:nick="open" glib:name="GTK_FILE_CHOOSER_ACTION_OPEN" gs:managed-name="Open">
        <doc xml:space="preserve" filename="../gtk/gtkfilechooser.h" line="39">Indicates open mode.  The file chooser
 will only let the user pick an existing file.</doc>
      </member>
      <member name="save" value="1" c:identifier="GTK_FILE_CHOOSER_ACTION_SAVE" glib:nick="save" glib:name="GTK_FILE_CHOOSER_ACTION_SAVE" gs:managed-name="Save">
        <doc xml:space="preserve" filename="../gtk/gtkfilechooser.h" line="41">Indicates save mode.  The file chooser
 will let the user pick an existing file, or type in a new
 filename.</doc>
      </member>
      <member name="select_folder" value="2" c:identifier="GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER" glib:nick="select-folder" glib:name="GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER" gs:managed-name="SelectFolder">
        <doc xml:space="preserve" filename="../gtk/gtkfilechooser.h" line="44">Indicates an Open mode for
 selecting folders.  The file chooser will let the user pick an
 existing folder.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_file_chooser_action_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="FileChooserError" glib:type-name="GtkFileChooserError" glib:get-type="gtk_file_chooser_error_get_type" c:type="GtkFileChooserError" glib:error-domain="gtk-file-chooser-error-quark" gs:managed-name="FileChooserError">
      <doc xml:space="preserve" filename="../gtk/gtkfilechooser.h" line="69">These identify the various errors that can occur while calling
`GtkFileChooser` functions.</doc>
      <member name="nonexistent" value="0" c:identifier="GTK_FILE_CHOOSER_ERROR_NONEXISTENT" glib:nick="nonexistent" glib:name="GTK_FILE_CHOOSER_ERROR_NONEXISTENT" gs:managed-name="Nonexistent">
        <doc xml:space="preserve" filename="../gtk/gtkfilechooser.h" line="71">Indicates that a file does not exist.</doc>
      </member>
      <member name="bad_filename" value="1" c:identifier="GTK_FILE_CHOOSER_ERROR_BAD_FILENAME" glib:nick="bad-filename" glib:name="GTK_FILE_CHOOSER_ERROR_BAD_FILENAME" gs:managed-name="BadFilename">
        <doc xml:space="preserve" filename="../gtk/gtkfilechooser.h" line="72">Indicates a malformed filename.</doc>
      </member>
      <member name="already_exists" value="2" c:identifier="GTK_FILE_CHOOSER_ERROR_ALREADY_EXISTS" glib:nick="already-exists" glib:name="GTK_FILE_CHOOSER_ERROR_ALREADY_EXISTS" gs:managed-name="AlreadyExists">
        <doc xml:space="preserve" filename="../gtk/gtkfilechooser.h" line="73">Indicates a duplicate path (e.g. when
 adding a bookmark).</doc>
      </member>
      <member name="incomplete_hostname" value="3" c:identifier="GTK_FILE_CHOOSER_ERROR_INCOMPLETE_HOSTNAME" glib:nick="incomplete-hostname" glib:name="GTK_FILE_CHOOSER_ERROR_INCOMPLETE_HOSTNAME" gs:managed-name="IncompleteHostname">
        <doc xml:space="preserve" filename="../gtk/gtkfilechooser.h" line="75">Indicates an incomplete hostname
 (e.g. "http://foo" without a slash after that).</doc>
      </member>
      <gs:managed-property name="get_quark" gs:dll-name="gtk-4.1" gs:managed-name="Quark">
        <doc xml:space="preserve" filename="../gtk/gtkfilechooser.c" line="165">Registers an error quark for `GtkFileChooser` errors.</doc>
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <doc xml:space="preserve" filename="../gtk/gtkfilechooser.c" line="170">The error quark used for `GtkFileChooser` errors.</doc>
          <type name="GLib.Quark" c:type="GQuark" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </gs:managed-property>
      <function name="get_quark" c:identifier="gtk_file_chooser_error_quark" gs:dll-name="gtk-4.1" gs:managed-name="GetQuark" gs:property-getter-for="Quark" gs:access-modifiers="private">
        <doc xml:space="preserve" filename="../gtk/gtkfilechooser.c" line="165">Registers an error quark for `GtkFileChooser` errors.</doc>
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <doc xml:space="preserve" filename="../gtk/gtkfilechooser.c" line="170">The error quark used for `GtkFileChooser` errors.</doc>
          <type name="GLib.Quark" c:type="GQuark" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_file_chooser_error_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="FilterChange" glib:type-name="GtkFilterChange" glib:get-type="gtk_filter_change_get_type" c:type="GtkFilterChange" gs:managed-name="FilterChange">
      <doc xml:space="preserve" filename="../gtk/gtkfilter.h" line="52">Describes changes in a filter in more detail and allows objects
using the filter to optimize refiltering items.

If you are writing an implementation and are not sure which
value to pass, %GTK_FILTER_CHANGE_DIFFERENT is always a correct
choice.</doc>
      <member name="different" value="0" c:identifier="GTK_FILTER_CHANGE_DIFFERENT" glib:nick="different" glib:name="GTK_FILTER_CHANGE_DIFFERENT" gs:managed-name="Different">
        <doc xml:space="preserve" filename="../gtk/gtkfilter.h" line="54">The filter change cannot be
  described with any of the other enumeration values.</doc>
      </member>
      <member name="less_strict" value="1" c:identifier="GTK_FILTER_CHANGE_LESS_STRICT" glib:nick="less-strict" glib:name="GTK_FILTER_CHANGE_LESS_STRICT" gs:managed-name="LessStrict">
        <doc xml:space="preserve" filename="../gtk/gtkfilter.h" line="56">The filter is less strict than
  it was before: All items that it used to return %TRUE for
  still return %TRUE, others now may, too.</doc>
      </member>
      <member name="more_strict" value="2" c:identifier="GTK_FILTER_CHANGE_MORE_STRICT" glib:nick="more-strict" glib:name="GTK_FILTER_CHANGE_MORE_STRICT" gs:managed-name="MoreStrict">
        <doc xml:space="preserve" filename="../gtk/gtkfilter.h" line="59">The filter is more strict than
  it was before: All items that it used to return %FALSE for
  still return %FALSE, others now may, too.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_filter_change_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="FilterMatch" glib:type-name="GtkFilterMatch" glib:get-type="gtk_filter_match_get_type" c:type="GtkFilterMatch" gs:managed-name="FilterMatch">
      <doc xml:space="preserve" filename="../gtk/gtkfilter.h" line="31">Describes the known strictness of a filter.

Note that for filters where the strictness is not known,
%GTK_FILTER_MATCH_SOME is always an acceptable value,
even if a filter does match all or no items.</doc>
      <member name="some" value="0" c:identifier="GTK_FILTER_MATCH_SOME" glib:nick="some" glib:name="GTK_FILTER_MATCH_SOME" gs:managed-name="Some">
        <doc xml:space="preserve" filename="../gtk/gtkfilter.h" line="33">The filter matches some items,
  gtk_filter_match() may return %TRUE or %FALSE</doc>
      </member>
      <member name="none" value="1" c:identifier="GTK_FILTER_MATCH_NONE" glib:nick="none" glib:name="GTK_FILTER_MATCH_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtkfilter.h" line="35">The filter does not match any item,
  gtk_filter_match() will always return %FALSE.</doc>
      </member>
      <member name="all" value="2" c:identifier="GTK_FILTER_MATCH_ALL" glib:nick="all" glib:name="GTK_FILTER_MATCH_ALL" gs:managed-name="All">
        <doc xml:space="preserve" filename="../gtk/gtkfilter.h" line="37">The filter matches all items,
  gtk_filter_match() will alays return %TRUE.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_filter_match_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <bitfield name="FontChooserLevel" glib:type-name="GtkFontChooserLevel" glib:get-type="gtk_font_chooser_level_get_type" c:type="GtkFontChooserLevel" gs:managed-name="FontChooserLevel">
      <doc xml:space="preserve" filename="../gtk/gtkfontchooser.h" line="49">Specifies the granularity of font selection
that is desired in a `GtkFontChooser`.

This enumeration may be extended in the future; applications should
ignore unknown values.</doc>
      <member name="family" value="0" c:identifier="GTK_FONT_CHOOSER_LEVEL_FAMILY" glib:nick="family" glib:name="GTK_FONT_CHOOSER_LEVEL_FAMILY" gs:managed-name="Family">
        <doc xml:space="preserve" filename="../gtk/gtkfontchooser.h" line="51">Allow selecting a font family</doc>
      </member>
      <member name="style" value="1" c:identifier="GTK_FONT_CHOOSER_LEVEL_STYLE" glib:nick="style" glib:name="GTK_FONT_CHOOSER_LEVEL_STYLE" gs:managed-name="Style">
        <doc xml:space="preserve" filename="../gtk/gtkfontchooser.h" line="52">Allow selecting a specific font face</doc>
      </member>
      <member name="size" value="2" c:identifier="GTK_FONT_CHOOSER_LEVEL_SIZE" glib:nick="size" glib:name="GTK_FONT_CHOOSER_LEVEL_SIZE" gs:managed-name="Size">
        <doc xml:space="preserve" filename="../gtk/gtkfontchooser.h" line="53">Allow selecting a specific font size</doc>
      </member>
      <member name="variations" value="4" c:identifier="GTK_FONT_CHOOSER_LEVEL_VARIATIONS" glib:nick="variations" glib:name="GTK_FONT_CHOOSER_LEVEL_VARIATIONS" gs:managed-name="Variations">
        <doc xml:space="preserve" filename="../gtk/gtkfontchooser.h" line="54">Allow changing OpenType font variation axes</doc>
      </member>
      <member name="features" value="8" c:identifier="GTK_FONT_CHOOSER_LEVEL_FEATURES" glib:nick="features" glib:name="GTK_FONT_CHOOSER_LEVEL_FEATURES" gs:managed-name="Features">
        <doc xml:space="preserve" filename="../gtk/gtkfontchooser.h" line="55">Allow selecting specific OpenType font features</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_font_chooser_level_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </bitfield>
    <bitfield name="IconLookupFlags" glib:type-name="GtkIconLookupFlags" glib:get-type="gtk_icon_lookup_flags_get_type" c:type="GtkIconLookupFlags" gs:managed-name="IconLookupFlags">
      <doc xml:space="preserve" filename="../gtk/gtkicontheme.h" line="41">Used to specify options for gtk_icon_theme_lookup_icon().</doc>
      <member name="force_regular" value="1" c:identifier="GTK_ICON_LOOKUP_FORCE_REGULAR" glib:nick="force-regular" glib:name="GTK_ICON_LOOKUP_FORCE_REGULAR" gs:managed-name="ForceRegular">
        <doc xml:space="preserve" filename="../gtk/gtkicontheme.h" line="43">Try to always load regular icons, even
  when symbolic icon names are given</doc>
      </member>
      <member name="force_symbolic" value="2" c:identifier="GTK_ICON_LOOKUP_FORCE_SYMBOLIC" glib:nick="force-symbolic" glib:name="GTK_ICON_LOOKUP_FORCE_SYMBOLIC" gs:managed-name="ForceSymbolic">
        <doc xml:space="preserve" filename="../gtk/gtkicontheme.h" line="45">Try to always load symbolic icons, even
  when regular icon names are given</doc>
      </member>
      <member name="preload" value="4" c:identifier="GTK_ICON_LOOKUP_PRELOAD" glib:nick="preload" glib:name="GTK_ICON_LOOKUP_PRELOAD" gs:managed-name="Preload">
        <doc xml:space="preserve" filename="../gtk/gtkicontheme.h" line="47">Starts loading the texture in the background
  so it is ready when later needed.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_icon_lookup_flags_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </bitfield>
    <enumeration name="IconSize" glib:type-name="GtkIconSize" glib:get-type="gtk_icon_size_get_type" c:type="GtkIconSize" gs:managed-name="IconSize">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="166">Built-in icon sizes.

Icon sizes default to being inherited. Where they cannot be
inherited, text size is the default.

All widgets which use `GtkIconSize` set the normal-icons or
large-icons style classes correspondingly, and let themes
determine the actual size to be used with the
`-gtk-icon-size` CSS property.</doc>
      <member name="inherit" value="0" c:identifier="GTK_ICON_SIZE_INHERIT" glib:nick="inherit" glib:name="GTK_ICON_SIZE_INHERIT" gs:managed-name="Inherit">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="168">Keep the size of the parent element</doc>
      </member>
      <member name="normal" value="1" c:identifier="GTK_ICON_SIZE_NORMAL" glib:nick="normal" glib:name="GTK_ICON_SIZE_NORMAL" gs:managed-name="Normal">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="169">Size similar to text size</doc>
      </member>
      <member name="large" value="2" c:identifier="GTK_ICON_SIZE_LARGE" glib:nick="large" glib:name="GTK_ICON_SIZE_LARGE" gs:managed-name="Large">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="170">Large size, for example in an icon view</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_icon_size_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="IconThemeError" glib:type-name="GtkIconThemeError" glib:get-type="gtk_icon_theme_error_get_type" c:type="GtkIconThemeError" glib:error-domain="gtk-icon-theme-error-quark" gs:managed-name="IconThemeError">
      <doc xml:space="preserve" filename="../gtk/gtkicontheme.h" line="66">Error codes for `GtkIconTheme` operations.</doc>
      <member name="not_found" value="0" c:identifier="GTK_ICON_THEME_NOT_FOUND" glib:nick="not-found" glib:name="GTK_ICON_THEME_NOT_FOUND" gs:managed-name="NotFound">
        <doc xml:space="preserve" filename="../gtk/gtkicontheme.h" line="68">The icon specified does not exist in the theme</doc>
      </member>
      <member name="failed" value="1" c:identifier="GTK_ICON_THEME_FAILED" glib:nick="failed" glib:name="GTK_ICON_THEME_FAILED" gs:managed-name="Failed">
        <doc xml:space="preserve" filename="../gtk/gtkicontheme.h" line="69">An unspecified error occurred.</doc>
      </member>
      <gs:managed-property name="get_quark" gs:dll-name="gtk-4.1" gs:managed-name="Quark">
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <type name="GLib.Quark" c:type="GQuark" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </gs:managed-property>
      <function name="get_quark" c:identifier="gtk_icon_theme_error_quark" gs:dll-name="gtk-4.1" gs:managed-name="GetQuark" gs:property-getter-for="Quark" gs:access-modifiers="private">
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <type name="GLib.Quark" c:type="GQuark" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_icon_theme_error_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="IconViewDropPosition" glib:type-name="GtkIconViewDropPosition" glib:get-type="gtk_icon_view_drop_position_get_type" c:type="GtkIconViewDropPosition" gs:managed-name="IconViewDropPosition">
      <doc xml:space="preserve" filename="../gtk/gtkiconview.h" line="54">An enum for determining where a dropped item goes.</doc>
      <member name="no_drop" value="0" c:identifier="GTK_ICON_VIEW_NO_DROP" glib:nick="no-drop" glib:name="GTK_ICON_VIEW_NO_DROP" gs:managed-name="NoDrop">
        <doc xml:space="preserve" filename="../gtk/gtkiconview.h" line="56">no drop possible</doc>
      </member>
      <member name="drop_into" value="1" c:identifier="GTK_ICON_VIEW_DROP_INTO" glib:nick="drop-into" glib:name="GTK_ICON_VIEW_DROP_INTO" gs:managed-name="DropInto">
        <doc xml:space="preserve" filename="../gtk/gtkiconview.h" line="57">dropped item replaces the item</doc>
      </member>
      <member name="drop_left" value="2" c:identifier="GTK_ICON_VIEW_DROP_LEFT" glib:nick="drop-left" glib:name="GTK_ICON_VIEW_DROP_LEFT" gs:managed-name="DropLeft">
        <doc xml:space="preserve" filename="../gtk/gtkiconview.h" line="58">dropped item is inserted to the left</doc>
      </member>
      <member name="drop_right" value="3" c:identifier="GTK_ICON_VIEW_DROP_RIGHT" glib:nick="drop-right" glib:name="GTK_ICON_VIEW_DROP_RIGHT" gs:managed-name="DropRight">
        <doc xml:space="preserve" filename="../gtk/gtkiconview.h" line="59">dropped item is inserted to the right</doc>
      </member>
      <member name="drop_above" value="4" c:identifier="GTK_ICON_VIEW_DROP_ABOVE" glib:nick="drop-above" glib:name="GTK_ICON_VIEW_DROP_ABOVE" gs:managed-name="DropAbove">
        <doc xml:space="preserve" filename="../gtk/gtkiconview.h" line="60">dropped item is inserted above</doc>
      </member>
      <member name="drop_below" value="5" c:identifier="GTK_ICON_VIEW_DROP_BELOW" glib:nick="drop-below" glib:name="GTK_ICON_VIEW_DROP_BELOW" gs:managed-name="DropBelow">
        <doc xml:space="preserve" filename="../gtk/gtkiconview.h" line="61">dropped item is inserted below</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_icon_view_drop_position_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="ImageType" glib:type-name="GtkImageType" glib:get-type="gtk_image_type_get_type" c:type="GtkImageType" gs:managed-name="ImageType">
      <doc xml:space="preserve" filename="../gtk/gtkimage.h" line="45">Describes the image data representation used by a [class@Gtk.Image].

If you want to get the image from the widget, you can only get the
currently-stored representation; for instance, if the gtk_image_get_storage_type()
returns %GTK_IMAGE_PAINTABLE, then you can call gtk_image_get_paintable().

For empty images, you can request any storage type (call any of the "get"
functions), but they will all return %NULL values.</doc>
      <member name="empty" value="0" c:identifier="GTK_IMAGE_EMPTY" glib:nick="empty" glib:name="GTK_IMAGE_EMPTY" gs:managed-name="Empty">
        <doc xml:space="preserve" filename="../gtk/gtkimage.h" line="47">there is no image displayed by the widget</doc>
      </member>
      <member name="icon_name" value="1" c:identifier="GTK_IMAGE_ICON_NAME" glib:nick="icon-name" glib:name="GTK_IMAGE_ICON_NAME" gs:managed-name="IconName">
        <doc xml:space="preserve" filename="../gtk/gtkimage.h" line="48">the widget contains a named icon</doc>
      </member>
      <member name="gicon" value="2" c:identifier="GTK_IMAGE_GICON" glib:nick="gicon" glib:name="GTK_IMAGE_GICON" gs:managed-name="Gicon">
        <doc xml:space="preserve" filename="../gtk/gtkimage.h" line="49">the widget contains a `GIcon`</doc>
      </member>
      <member name="paintable" value="3" c:identifier="GTK_IMAGE_PAINTABLE" glib:nick="paintable" glib:name="GTK_IMAGE_PAINTABLE" gs:managed-name="Paintable">
        <doc xml:space="preserve" filename="../gtk/gtkimage.h" line="50">the widget contains a `GdkPaintable`</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_image_type_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <bitfield name="InputHints" glib:type-name="GtkInputHints" glib:get-type="gtk_input_hints_get_type" c:type="GtkInputHints" gs:managed-name="InputHints">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="877">Describes hints that might be taken into account by input methods
or applications.

Note that input methods may already tailor their behaviour according
to the [enum@InputPurpose] of the entry.

Some common sense is expected when using these flags - mixing
%GTK_INPUT_HINT_LOWERCASE with any of the uppercase hints makes no sense.

This enumeration may be extended in the future; input methods should
ignore unknown values.</doc>
      <member name="none" value="0" c:identifier="GTK_INPUT_HINT_NONE" glib:nick="none" glib:name="GTK_INPUT_HINT_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="879">No special behaviour suggested</doc>
      </member>
      <member name="spellcheck" value="1" c:identifier="GTK_INPUT_HINT_SPELLCHECK" glib:nick="spellcheck" glib:name="GTK_INPUT_HINT_SPELLCHECK" gs:managed-name="Spellcheck">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="880">Suggest checking for typos</doc>
      </member>
      <member name="no_spellcheck" value="2" c:identifier="GTK_INPUT_HINT_NO_SPELLCHECK" glib:nick="no-spellcheck" glib:name="GTK_INPUT_HINT_NO_SPELLCHECK" gs:managed-name="NoSpellcheck">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="881">Suggest not checking for typos</doc>
      </member>
      <member name="word_completion" value="4" c:identifier="GTK_INPUT_HINT_WORD_COMPLETION" glib:nick="word-completion" glib:name="GTK_INPUT_HINT_WORD_COMPLETION" gs:managed-name="WordCompletion">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="882">Suggest word completion</doc>
      </member>
      <member name="lowercase" value="8" c:identifier="GTK_INPUT_HINT_LOWERCASE" glib:nick="lowercase" glib:name="GTK_INPUT_HINT_LOWERCASE" gs:managed-name="Lowercase">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="883">Suggest to convert all text to lowercase</doc>
      </member>
      <member name="uppercase_chars" value="16" c:identifier="GTK_INPUT_HINT_UPPERCASE_CHARS" glib:nick="uppercase-chars" glib:name="GTK_INPUT_HINT_UPPERCASE_CHARS" gs:managed-name="UppercaseChars">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="884">Suggest to capitalize all text</doc>
      </member>
      <member name="uppercase_words" value="32" c:identifier="GTK_INPUT_HINT_UPPERCASE_WORDS" glib:nick="uppercase-words" glib:name="GTK_INPUT_HINT_UPPERCASE_WORDS" gs:managed-name="UppercaseWords">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="885">Suggest to capitalize the first
  character of each word</doc>
      </member>
      <member name="uppercase_sentences" value="64" c:identifier="GTK_INPUT_HINT_UPPERCASE_SENTENCES" glib:nick="uppercase-sentences" glib:name="GTK_INPUT_HINT_UPPERCASE_SENTENCES" gs:managed-name="UppercaseSentences">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="887">Suggest to capitalize the
  first word of each sentence</doc>
      </member>
      <member name="inhibit_osk" value="128" c:identifier="GTK_INPUT_HINT_INHIBIT_OSK" glib:nick="inhibit-osk" glib:name="GTK_INPUT_HINT_INHIBIT_OSK" gs:managed-name="InhibitOsk">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="889">Suggest to not show an onscreen keyboard
  (e.g for a calculator that already has all the keys).</doc>
      </member>
      <member name="vertical_writing" value="256" c:identifier="GTK_INPUT_HINT_VERTICAL_WRITING" glib:nick="vertical-writing" glib:name="GTK_INPUT_HINT_VERTICAL_WRITING" gs:managed-name="VerticalWriting">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="891">The text is vertical</doc>
      </member>
      <member name="emoji" value="512" c:identifier="GTK_INPUT_HINT_EMOJI" glib:nick="emoji" glib:name="GTK_INPUT_HINT_EMOJI" gs:managed-name="Emoji">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="892">Suggest offering Emoji support</doc>
      </member>
      <member name="no_emoji" value="1024" c:identifier="GTK_INPUT_HINT_NO_EMOJI" glib:nick="no-emoji" glib:name="GTK_INPUT_HINT_NO_EMOJI" gs:managed-name="NoEmoji">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="893">Suggest not offering Emoji support</doc>
      </member>
      <member name="private" value="2048" c:identifier="GTK_INPUT_HINT_PRIVATE" glib:nick="private" glib:name="GTK_INPUT_HINT_PRIVATE" gs:managed-name="Private">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="894">Request that the input method should not
   update personalized data (like typing history)</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_input_hints_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </bitfield>
    <enumeration name="InputPurpose" glib:type-name="GtkInputPurpose" glib:get-type="gtk_input_purpose_get_type" c:type="GtkInputPurpose" gs:managed-name="InputPurpose">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="828">Describes primary purpose of the input widget.

This information is useful for on-screen keyboards and similar input
methods to decide which keys should be presented to the user.

Note that the purpose is not meant to impose a totally strict rule
about allowed characters, and does not replace input validation.
It is fine for an on-screen keyboard to let the user override the
character set restriction that is expressed by the purpose. The
application is expected to validate the entry contents, even if
it specified a purpose.

The difference between %GTK_INPUT_PURPOSE_DIGITS and
%GTK_INPUT_PURPOSE_NUMBER is that the former accepts only digits
while the latter also some punctuation (like commas or points, plus,
minus) and “e” or “E” as in 3.14E+000.

This enumeration may be extended in the future; input methods should
interpret unknown values as “free form”.</doc>
      <member name="free_form" value="0" c:identifier="GTK_INPUT_PURPOSE_FREE_FORM" glib:nick="free-form" glib:name="GTK_INPUT_PURPOSE_FREE_FORM" gs:managed-name="FreeForm">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="830">Allow any character</doc>
      </member>
      <member name="alpha" value="1" c:identifier="GTK_INPUT_PURPOSE_ALPHA" glib:nick="alpha" glib:name="GTK_INPUT_PURPOSE_ALPHA" gs:managed-name="Alpha">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="831">Allow only alphabetic characters</doc>
      </member>
      <member name="digits" value="2" c:identifier="GTK_INPUT_PURPOSE_DIGITS" glib:nick="digits" glib:name="GTK_INPUT_PURPOSE_DIGITS" gs:managed-name="Digits">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="832">Allow only digits</doc>
      </member>
      <member name="number" value="3" c:identifier="GTK_INPUT_PURPOSE_NUMBER" glib:nick="number" glib:name="GTK_INPUT_PURPOSE_NUMBER" gs:managed-name="Number">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="833">Edited field expects numbers</doc>
      </member>
      <member name="phone" value="4" c:identifier="GTK_INPUT_PURPOSE_PHONE" glib:nick="phone" glib:name="GTK_INPUT_PURPOSE_PHONE" gs:managed-name="Phone">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="834">Edited field expects phone number</doc>
      </member>
      <member name="url" value="5" c:identifier="GTK_INPUT_PURPOSE_URL" glib:nick="url" glib:name="GTK_INPUT_PURPOSE_URL" gs:managed-name="Url">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="835">Edited field expects URL</doc>
      </member>
      <member name="email" value="6" c:identifier="GTK_INPUT_PURPOSE_EMAIL" glib:nick="email" glib:name="GTK_INPUT_PURPOSE_EMAIL" gs:managed-name="Email">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="836">Edited field expects email address</doc>
      </member>
      <member name="name" value="7" c:identifier="GTK_INPUT_PURPOSE_NAME" glib:nick="name" glib:name="GTK_INPUT_PURPOSE_NAME" gs:managed-name="Name">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="837">Edited field expects the name of a person</doc>
      </member>
      <member name="password" value="8" c:identifier="GTK_INPUT_PURPOSE_PASSWORD" glib:nick="password" glib:name="GTK_INPUT_PURPOSE_PASSWORD" gs:managed-name="Password">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="838">Like %GTK_INPUT_PURPOSE_FREE_FORM, but characters are hidden</doc>
      </member>
      <member name="pin" value="9" c:identifier="GTK_INPUT_PURPOSE_PIN" glib:nick="pin" glib:name="GTK_INPUT_PURPOSE_PIN" gs:managed-name="Pin">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="839">Like %GTK_INPUT_PURPOSE_DIGITS, but characters are hidden</doc>
      </member>
      <member name="terminal" value="10" c:identifier="GTK_INPUT_PURPOSE_TERMINAL" glib:nick="terminal" glib:name="GTK_INPUT_PURPOSE_TERMINAL" gs:managed-name="Terminal">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="840">Allow any character, in addition to control codes</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_input_purpose_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="Justification" glib:type-name="GtkJustification" glib:get-type="gtk_justification_get_type" c:type="GtkJustification" gs:managed-name="Justification">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="222">Used for justifying the text inside a [class@Label] widget.</doc>
      <member name="left" value="0" c:identifier="GTK_JUSTIFY_LEFT" glib:nick="left" glib:name="GTK_JUSTIFY_LEFT" gs:managed-name="Left">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="224">The text is placed at the left edge of the label.</doc>
      </member>
      <member name="right" value="1" c:identifier="GTK_JUSTIFY_RIGHT" glib:nick="right" glib:name="GTK_JUSTIFY_RIGHT" gs:managed-name="Right">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="225">The text is placed at the right edge of the label.</doc>
      </member>
      <member name="center" value="2" c:identifier="GTK_JUSTIFY_CENTER" glib:nick="center" glib:name="GTK_JUSTIFY_CENTER" gs:managed-name="Center">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="226">The text is placed in the center of the label.</doc>
      </member>
      <member name="fill" value="3" c:identifier="GTK_JUSTIFY_FILL" glib:nick="fill" glib:name="GTK_JUSTIFY_FILL" gs:managed-name="Fill">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="227">The text is placed is distributed across the label.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_justification_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="LevelBarMode" glib:type-name="GtkLevelBarMode" glib:get-type="gtk_level_bar_mode_get_type" c:type="GtkLevelBarMode" gs:managed-name="LevelBarMode">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="811">Describes how [class@LevelBar] contents should be rendered.

Note that this enumeration could be extended with additional modes
in the future.</doc>
      <member name="continuous" value="0" c:identifier="GTK_LEVEL_BAR_MODE_CONTINUOUS" glib:nick="continuous" glib:name="GTK_LEVEL_BAR_MODE_CONTINUOUS" gs:managed-name="Continuous">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="813">the bar has a continuous mode</doc>
      </member>
      <member name="discrete" value="1" c:identifier="GTK_LEVEL_BAR_MODE_DISCRETE" glib:nick="discrete" glib:name="GTK_LEVEL_BAR_MODE_DISCRETE" gs:managed-name="Discrete">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="814">the bar has a discrete mode</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_level_bar_mode_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="License" glib:type-name="GtkLicense" glib:get-type="gtk_license_get_type" c:type="GtkLicense" gs:managed-name="License">
      <doc xml:space="preserve" filename="../gtk/gtkaboutdialog.h" line="40">The type of license for an application.

This enumeration can be expanded at later date.</doc>
      <member name="unknown" value="0" c:identifier="GTK_LICENSE_UNKNOWN" glib:nick="unknown" glib:name="GTK_LICENSE_UNKNOWN" gs:managed-name="Unknown">
        <doc xml:space="preserve" filename="../gtk/gtkaboutdialog.h" line="42">No license specified</doc>
      </member>
      <member name="custom" value="1" c:identifier="GTK_LICENSE_CUSTOM" glib:nick="custom" glib:name="GTK_LICENSE_CUSTOM" gs:managed-name="Custom">
        <doc xml:space="preserve" filename="../gtk/gtkaboutdialog.h" line="43">A license text is going to be specified by the
  developer</doc>
      </member>
      <member name="gpl_2_0" value="2" c:identifier="GTK_LICENSE_GPL_2_0" glib:nick="gpl-2-0" glib:name="GTK_LICENSE_GPL_2_0" gs:managed-name="Gpl20">
        <doc xml:space="preserve" filename="../gtk/gtkaboutdialog.h" line="45">The GNU General Public License, version 2.0 or later</doc>
      </member>
      <member name="gpl_3_0" value="3" c:identifier="GTK_LICENSE_GPL_3_0" glib:nick="gpl-3-0" glib:name="GTK_LICENSE_GPL_3_0" gs:managed-name="Gpl30">
        <doc xml:space="preserve" filename="../gtk/gtkaboutdialog.h" line="46">The GNU General Public License, version 3.0 or later</doc>
      </member>
      <member name="lgpl_2_1" value="4" c:identifier="GTK_LICENSE_LGPL_2_1" glib:nick="lgpl-2-1" glib:name="GTK_LICENSE_LGPL_2_1" gs:managed-name="Lgpl21">
        <doc xml:space="preserve" filename="../gtk/gtkaboutdialog.h" line="47">The GNU Lesser General Public License, version 2.1 or later</doc>
      </member>
      <member name="lgpl_3_0" value="5" c:identifier="GTK_LICENSE_LGPL_3_0" glib:nick="lgpl-3-0" glib:name="GTK_LICENSE_LGPL_3_0" gs:managed-name="Lgpl30">
        <doc xml:space="preserve" filename="../gtk/gtkaboutdialog.h" line="48">The GNU Lesser General Public License, version 3.0 or later</doc>
      </member>
      <member name="bsd" value="6" c:identifier="GTK_LICENSE_BSD" glib:nick="bsd" glib:name="GTK_LICENSE_BSD" gs:managed-name="Bsd">
        <doc xml:space="preserve" filename="../gtk/gtkaboutdialog.h" line="49">The BSD standard license</doc>
      </member>
      <member name="mit_x11" value="7" c:identifier="GTK_LICENSE_MIT_X11" glib:nick="mit-x11" glib:name="GTK_LICENSE_MIT_X11" gs:managed-name="MitX11">
        <doc xml:space="preserve" filename="../gtk/gtkaboutdialog.h" line="50">The MIT/X11 standard license</doc>
      </member>
      <member name="artistic" value="8" c:identifier="GTK_LICENSE_ARTISTIC" glib:nick="artistic" glib:name="GTK_LICENSE_ARTISTIC" gs:managed-name="Artistic">
        <doc xml:space="preserve" filename="../gtk/gtkaboutdialog.h" line="51">The Artistic License, version 2.0</doc>
      </member>
      <member name="gpl_2_0_only" value="9" c:identifier="GTK_LICENSE_GPL_2_0_ONLY" glib:nick="gpl-2-0-only" glib:name="GTK_LICENSE_GPL_2_0_ONLY" gs:managed-name="Gpl20Only">
        <doc xml:space="preserve" filename="../gtk/gtkaboutdialog.h" line="52">The GNU General Public License, version 2.0 only</doc>
      </member>
      <member name="gpl_3_0_only" value="10" c:identifier="GTK_LICENSE_GPL_3_0_ONLY" glib:nick="gpl-3-0-only" glib:name="GTK_LICENSE_GPL_3_0_ONLY" gs:managed-name="Gpl30Only">
        <doc xml:space="preserve" filename="../gtk/gtkaboutdialog.h" line="53">The GNU General Public License, version 3.0 only</doc>
      </member>
      <member name="lgpl_2_1_only" value="11" c:identifier="GTK_LICENSE_LGPL_2_1_ONLY" glib:nick="lgpl-2-1-only" glib:name="GTK_LICENSE_LGPL_2_1_ONLY" gs:managed-name="Lgpl21Only">
        <doc xml:space="preserve" filename="../gtk/gtkaboutdialog.h" line="54">The GNU Lesser General Public License, version 2.1 only</doc>
      </member>
      <member name="lgpl_3_0_only" value="12" c:identifier="GTK_LICENSE_LGPL_3_0_ONLY" glib:nick="lgpl-3-0-only" glib:name="GTK_LICENSE_LGPL_3_0_ONLY" gs:managed-name="Lgpl30Only">
        <doc xml:space="preserve" filename="../gtk/gtkaboutdialog.h" line="55">The GNU Lesser General Public License, version 3.0 only</doc>
      </member>
      <member name="agpl_3_0" value="13" c:identifier="GTK_LICENSE_AGPL_3_0" glib:nick="agpl-3-0" glib:name="GTK_LICENSE_AGPL_3_0" gs:managed-name="Agpl30">
        <doc xml:space="preserve" filename="../gtk/gtkaboutdialog.h" line="56">The GNU Affero General Public License, version 3.0 or later</doc>
      </member>
      <member name="agpl_3_0_only" value="14" c:identifier="GTK_LICENSE_AGPL_3_0_ONLY" glib:nick="agpl-3-0-only" glib:name="GTK_LICENSE_AGPL_3_0_ONLY" gs:managed-name="Agpl30Only">
        <doc xml:space="preserve" filename="../gtk/gtkaboutdialog.h" line="57">The GNU Affero General Public License, version 3.0 only</doc>
      </member>
      <member name="bsd_3" value="15" c:identifier="GTK_LICENSE_BSD_3" glib:nick="bsd-3" glib:name="GTK_LICENSE_BSD_3" gs:managed-name="Bsd3">
        <doc xml:space="preserve" filename="../gtk/gtkaboutdialog.h" line="58">The 3-clause BSD licence</doc>
      </member>
      <member name="apache_2_0" value="16" c:identifier="GTK_LICENSE_APACHE_2_0" glib:nick="apache-2-0" glib:name="GTK_LICENSE_APACHE_2_0" gs:managed-name="Apache20">
        <doc xml:space="preserve" filename="../gtk/gtkaboutdialog.h" line="59">The Apache License, version 2.0</doc>
      </member>
      <member name="mpl_2_0" value="17" c:identifier="GTK_LICENSE_MPL_2_0" glib:nick="mpl-2-0" glib:name="GTK_LICENSE_MPL_2_0" gs:managed-name="Mpl20">
        <doc xml:space="preserve" filename="../gtk/gtkaboutdialog.h" line="60">The Mozilla Public License, version 2.0</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_license_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="MessageType" glib:type-name="GtkMessageType" glib:get-type="gtk_message_type_get_type" c:type="GtkMessageType" gs:managed-name="MessageType">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="239">The type of message being displayed in a [class@MessageDialog].</doc>
      <member name="info" value="0" c:identifier="GTK_MESSAGE_INFO" glib:nick="info" glib:name="GTK_MESSAGE_INFO" gs:managed-name="Info">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="241">Informational message</doc>
      </member>
      <member name="warning" value="1" c:identifier="GTK_MESSAGE_WARNING" glib:nick="warning" glib:name="GTK_MESSAGE_WARNING" gs:managed-name="Warning">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="242">Non-fatal warning message</doc>
      </member>
      <member name="question" value="2" c:identifier="GTK_MESSAGE_QUESTION" glib:nick="question" glib:name="GTK_MESSAGE_QUESTION" gs:managed-name="Question">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="243">Question requiring a choice</doc>
      </member>
      <member name="error" value="3" c:identifier="GTK_MESSAGE_ERROR" glib:nick="error" glib:name="GTK_MESSAGE_ERROR" gs:managed-name="Error">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="244">Fatal error message</doc>
      </member>
      <member name="other" value="4" c:identifier="GTK_MESSAGE_OTHER" glib:nick="other" glib:name="GTK_MESSAGE_OTHER" gs:managed-name="Other">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="245">None of the above</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_message_type_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="MovementStep" glib:type-name="GtkMovementStep" glib:get-type="gtk_movement_step_get_type" c:type="GtkMovementStep" gs:managed-name="MovementStep">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="258">Passed as argument to various keybinding signals for moving the
cursor position.</doc>
      <member name="logical_positions" value="0" c:identifier="GTK_MOVEMENT_LOGICAL_POSITIONS" glib:nick="logical-positions" glib:name="GTK_MOVEMENT_LOGICAL_POSITIONS" gs:managed-name="LogicalPositions">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="260">Move forward or back by graphemes</doc>
      </member>
      <member name="visual_positions" value="1" c:identifier="GTK_MOVEMENT_VISUAL_POSITIONS" glib:nick="visual-positions" glib:name="GTK_MOVEMENT_VISUAL_POSITIONS" gs:managed-name="VisualPositions">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="261">Move left or right by graphemes</doc>
      </member>
      <member name="words" value="2" c:identifier="GTK_MOVEMENT_WORDS" glib:nick="words" glib:name="GTK_MOVEMENT_WORDS" gs:managed-name="Words">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="262">Move forward or back by words</doc>
      </member>
      <member name="display_lines" value="3" c:identifier="GTK_MOVEMENT_DISPLAY_LINES" glib:nick="display-lines" glib:name="GTK_MOVEMENT_DISPLAY_LINES" gs:managed-name="DisplayLines">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="263">Move up or down lines (wrapped lines)</doc>
      </member>
      <member name="display_line_ends" value="4" c:identifier="GTK_MOVEMENT_DISPLAY_LINE_ENDS" glib:nick="display-line-ends" glib:name="GTK_MOVEMENT_DISPLAY_LINE_ENDS" gs:managed-name="DisplayLineEnds">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="264">Move to either end of a line</doc>
      </member>
      <member name="paragraphs" value="5" c:identifier="GTK_MOVEMENT_PARAGRAPHS" glib:nick="paragraphs" glib:name="GTK_MOVEMENT_PARAGRAPHS" gs:managed-name="Paragraphs">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="265">Move up or down paragraphs (newline-ended lines)</doc>
      </member>
      <member name="paragraph_ends" value="6" c:identifier="GTK_MOVEMENT_PARAGRAPH_ENDS" glib:nick="paragraph-ends" glib:name="GTK_MOVEMENT_PARAGRAPH_ENDS" gs:managed-name="ParagraphEnds">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="266">Move to either end of a paragraph</doc>
      </member>
      <member name="pages" value="7" c:identifier="GTK_MOVEMENT_PAGES" glib:nick="pages" glib:name="GTK_MOVEMENT_PAGES" gs:managed-name="Pages">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="267">Move by pages</doc>
      </member>
      <member name="buffer_ends" value="8" c:identifier="GTK_MOVEMENT_BUFFER_ENDS" glib:nick="buffer-ends" glib:name="GTK_MOVEMENT_BUFFER_ENDS" gs:managed-name="BufferEnds">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="268">Move to ends of the buffer</doc>
      </member>
      <member name="horizontal_pages" value="9" c:identifier="GTK_MOVEMENT_HORIZONTAL_PAGES" glib:nick="horizontal-pages" glib:name="GTK_MOVEMENT_HORIZONTAL_PAGES" gs:managed-name="HorizontalPages">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="269">Move horizontally by pages</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_movement_step_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="NotebookTab" glib:type-name="GtkNotebookTab" glib:get-type="gtk_notebook_tab_get_type" c:type="GtkNotebookTab" gs:managed-name="NotebookTab">
      <doc xml:space="preserve" filename="../gtk/gtknotebook.h" line="49">The parameter used in the action signals of `GtkNotebook`.</doc>
      <member name="first" value="0" c:identifier="GTK_NOTEBOOK_TAB_FIRST" glib:nick="first" glib:name="GTK_NOTEBOOK_TAB_FIRST" gs:managed-name="First">
        <doc xml:space="preserve" filename="../gtk/gtknotebook.h" line="51">the first tab in the notebook</doc>
      </member>
      <member name="last" value="1" c:identifier="GTK_NOTEBOOK_TAB_LAST" glib:nick="last" glib:name="GTK_NOTEBOOK_TAB_LAST" gs:managed-name="Last">
        <doc xml:space="preserve" filename="../gtk/gtknotebook.h" line="52">the last tab in the notebook</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_notebook_tab_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="NumberUpLayout" glib:type-name="GtkNumberUpLayout" glib:get-type="gtk_number_up_layout_get_type" c:type="GtkNumberUpLayout" gs:managed-name="NumberUpLayout">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="536">Used to determine the layout of pages on a sheet when printing
multiple pages per sheet.</doc>
      <member name="lrtb" value="0" c:identifier="GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM" glib:nick="lrtb" glib:name="GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM" gs:managed-name="Lrtb">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="538">![](layout-lrtb.png)</doc>
      </member>
      <member name="lrbt" value="1" c:identifier="GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP" glib:nick="lrbt" glib:name="GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP" gs:managed-name="Lrbt">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="539">![](layout-lrbt.png)</doc>
      </member>
      <member name="rltb" value="2" c:identifier="GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM" glib:nick="rltb" glib:name="GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM" gs:managed-name="Rltb">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="540">![](layout-rltb.png)</doc>
      </member>
      <member name="rlbt" value="3" c:identifier="GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP" glib:nick="rlbt" glib:name="GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP" gs:managed-name="Rlbt">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="541">![](layout-rlbt.png)</doc>
      </member>
      <member name="tblr" value="4" c:identifier="GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT" glib:nick="tblr" glib:name="GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT" gs:managed-name="Tblr">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="542">![](layout-tblr.png)</doc>
      </member>
      <member name="tbrl" value="5" c:identifier="GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT" glib:nick="tbrl" glib:name="GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT" gs:managed-name="Tbrl">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="543">![](layout-tbrl.png)</doc>
      </member>
      <member name="btlr" value="6" c:identifier="GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT" glib:nick="btlr" glib:name="GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT" gs:managed-name="Btlr">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="544">![](layout-btlr.png)</doc>
      </member>
      <member name="btrl" value="7" c:identifier="GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT" glib:nick="btrl" glib:name="GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT" gs:managed-name="Btrl">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="545">![](layout-btrl.png)</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_number_up_layout_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="Ordering" glib:type-name="GtkOrdering" glib:get-type="gtk_ordering_get_type" c:type="GtkOrdering" gs:managed-name="Ordering">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="562">Describes the way two values can be compared.

These values can be used with a [callback@GLib.CompareFunc]. However,
a `GCompareFunc` is allowed to return any integer values.
For converting such a value to a `GtkOrdering` value, use
[func@Gtk.Ordering.from_cmpfunc].</doc>
      <member name="smaller" value="-1" c:identifier="GTK_ORDERING_SMALLER" glib:nick="smaller" glib:name="GTK_ORDERING_SMALLER" gs:managed-name="Smaller">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="564">the first value is smaller than the second</doc>
      </member>
      <member name="equal" value="0" c:identifier="GTK_ORDERING_EQUAL" glib:nick="equal" glib:name="GTK_ORDERING_EQUAL" gs:managed-name="Equal">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="565">the two values are equal</doc>
      </member>
      <member name="larger" value="1" c:identifier="GTK_ORDERING_LARGER" glib:nick="larger" glib:name="GTK_ORDERING_LARGER" gs:managed-name="Larger">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="566">the first value is larger than the second</doc>
      </member>
      <function name="from_compare_result" c:identifier="gtk_ordering_from_cmpfunc" version="4.2" gs:dll-name="gtk-4.1" gs:managed-name="FromCompareResult">
        <doc xml:space="preserve" filename="../gtk/gtksorter.c" line="373">Converts the result of a `GCompareFunc` like strcmp() to a
`GtkOrdering` value.</doc>
        <source-position filename="../gtk/gtkenums.h" line="587" />
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <doc xml:space="preserve" filename="../gtk/gtksorter.c" line="380">the corresponding `GtkOrdering`</doc>
          <type name="Ordering" c:type="GtkOrdering" />
        </return-value>
        <parameters>
          <parameter name="cmpfunc_result" transfer-ownership="none" gs:managed-name="cmpfuncResult" direction="in">
            <doc xml:space="preserve" filename="../gtk/gtksorter.c" line="375">Result of a comparison function</doc>
            <type name="gint" c:type="int" />
          </parameter>
        </parameters>
        <gs:managed-parameters>
          <parameter name="cmpfunc_result" transfer-ownership="none" gs:managed-name="cmpfuncResult" direction="in">
            <doc xml:space="preserve" filename="../gtk/gtksorter.c" line="375">Result of a comparison function</doc>
            <type name="gint" c:type="int" />
          </parameter>
        </gs:managed-parameters>
      </function>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_ordering_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="Orientation" glib:type-name="GtkOrientation" glib:get-type="gtk_orientation_get_type" c:type="GtkOrientation" gs:managed-name="Orientation">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="334">Represents the orientation of widgets and other objects.

Typical examples are [class@Box] or [class@GesturePan].</doc>
      <member name="horizontal" value="0" c:identifier="GTK_ORIENTATION_HORIZONTAL" glib:nick="horizontal" glib:name="GTK_ORIENTATION_HORIZONTAL" gs:managed-name="Horizontal">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="336">The element is in horizontal orientation.</doc>
      </member>
      <member name="vertical" value="1" c:identifier="GTK_ORIENTATION_VERTICAL" glib:nick="vertical" glib:name="GTK_ORIENTATION_VERTICAL" gs:managed-name="Vertical">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="337">The element is in vertical orientation.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_orientation_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="Overflow" glib:type-name="GtkOverflow" glib:get-type="gtk_overflow_get_type" c:type="GtkOverflow" gs:managed-name="Overflow">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="349">Defines how content overflowing a given area should be handled.

This is used in [method@Gtk.Widget.set_overflow]. The
[property@Gtk.Widget:overflow] property is modeled after the
CSS overflow property, but implements it only partially.</doc>
      <member name="visible" value="0" c:identifier="GTK_OVERFLOW_VISIBLE" glib:nick="visible" glib:name="GTK_OVERFLOW_VISIBLE" gs:managed-name="Visible">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="351">No change is applied. Content is drawn at the specified
  position.</doc>
      </member>
      <member name="hidden" value="1" c:identifier="GTK_OVERFLOW_HIDDEN" glib:nick="hidden" glib:name="GTK_OVERFLOW_HIDDEN" gs:managed-name="Hidden">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="353">Content is clipped to the bounds of the area. Content
  outside the area is not drawn and cannot be interacted with.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_overflow_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="PackType" glib:type-name="GtkPackType" glib:get-type="gtk_pack_type_get_type" c:type="GtkPackType" gs:managed-name="PackType">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="368">Represents the packing location of a children in its parent.

See [class@WindowControls] for example.</doc>
      <member name="start" value="0" c:identifier="GTK_PACK_START" glib:nick="start" glib:name="GTK_PACK_START" gs:managed-name="Start">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="370">The child is packed into the start of the widget</doc>
      </member>
      <member name="end" value="1" c:identifier="GTK_PACK_END" glib:nick="end" glib:name="GTK_PACK_END" gs:managed-name="End">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="371">The child is packed into the end of the widget</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_pack_type_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="PadActionType" glib:type-name="GtkPadActionType" glib:get-type="gtk_pad_action_type_get_type" c:type="GtkPadActionType" gs:managed-name="PadActionType">
      <doc xml:space="preserve" filename="../gtk/gtkpadcontroller.h" line="43">The type of a pad action.</doc>
      <member name="button" value="0" c:identifier="GTK_PAD_ACTION_BUTTON" glib:nick="button" glib:name="GTK_PAD_ACTION_BUTTON" gs:managed-name="Button">
        <doc xml:space="preserve" filename="../gtk/gtkpadcontroller.h" line="45">Action is triggered by a pad button</doc>
      </member>
      <member name="ring" value="1" c:identifier="GTK_PAD_ACTION_RING" glib:nick="ring" glib:name="GTK_PAD_ACTION_RING" gs:managed-name="Ring">
        <doc xml:space="preserve" filename="../gtk/gtkpadcontroller.h" line="46">Action is triggered by a pad ring</doc>
      </member>
      <member name="strip" value="2" c:identifier="GTK_PAD_ACTION_STRIP" glib:nick="strip" glib:name="GTK_PAD_ACTION_STRIP" gs:managed-name="Strip">
        <doc xml:space="preserve" filename="../gtk/gtkpadcontroller.h" line="47">Action is triggered by a pad strip</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_pad_action_type_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="PageOrientation" glib:type-name="GtkPageOrientation" glib:get-type="gtk_page_orientation_get_type" c:type="GtkPageOrientation" gs:managed-name="PageOrientation">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="605">See also gtk_print_settings_set_orientation().</doc>
      <member name="portrait" value="0" c:identifier="GTK_PAGE_ORIENTATION_PORTRAIT" glib:nick="portrait" glib:name="GTK_PAGE_ORIENTATION_PORTRAIT" gs:managed-name="Portrait">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="607">Portrait mode.</doc>
      </member>
      <member name="landscape" value="1" c:identifier="GTK_PAGE_ORIENTATION_LANDSCAPE" glib:nick="landscape" glib:name="GTK_PAGE_ORIENTATION_LANDSCAPE" gs:managed-name="Landscape">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="608">Landscape mode.</doc>
      </member>
      <member name="reverse_portrait" value="2" c:identifier="GTK_PAGE_ORIENTATION_REVERSE_PORTRAIT" glib:nick="reverse-portrait" glib:name="GTK_PAGE_ORIENTATION_REVERSE_PORTRAIT" gs:managed-name="ReversePortrait">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="609">Reverse portrait mode.</doc>
      </member>
      <member name="reverse_landscape" value="3" c:identifier="GTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE" glib:nick="reverse-landscape" glib:name="GTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE" gs:managed-name="ReverseLandscape">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="610">Reverse landscape mode.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_page_orientation_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="PageSet" glib:type-name="GtkPageSet" glib:get-type="gtk_page_set_get_type" c:type="GtkPageSet" gs:managed-name="PageSet">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="521">See also gtk_print_job_set_page_set().</doc>
      <member name="all" value="0" c:identifier="GTK_PAGE_SET_ALL" glib:nick="all" glib:name="GTK_PAGE_SET_ALL" gs:managed-name="All">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="523">All pages.</doc>
      </member>
      <member name="even" value="1" c:identifier="GTK_PAGE_SET_EVEN" glib:nick="even" glib:name="GTK_PAGE_SET_EVEN" gs:managed-name="Even">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="524">Even pages.</doc>
      </member>
      <member name="odd" value="2" c:identifier="GTK_PAGE_SET_ODD" glib:nick="odd" glib:name="GTK_PAGE_SET_ODD" gs:managed-name="Odd">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="525">Odd pages.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_page_set_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="PanDirection" glib:type-name="GtkPanDirection" glib:get-type="gtk_pan_direction_get_type" c:type="GtkPanDirection" gs:managed-name="PanDirection">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="982">Describes the panning direction of a [class@GesturePan].</doc>
      <member name="left" value="0" c:identifier="GTK_PAN_DIRECTION_LEFT" glib:nick="left" glib:name="GTK_PAN_DIRECTION_LEFT" gs:managed-name="Left">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="984">panned towards the left</doc>
      </member>
      <member name="right" value="1" c:identifier="GTK_PAN_DIRECTION_RIGHT" glib:nick="right" glib:name="GTK_PAN_DIRECTION_RIGHT" gs:managed-name="Right">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="985">panned towards the right</doc>
      </member>
      <member name="up" value="2" c:identifier="GTK_PAN_DIRECTION_UP" glib:nick="up" glib:name="GTK_PAN_DIRECTION_UP" gs:managed-name="Up">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="986">panned upwards</doc>
      </member>
      <member name="down" value="3" c:identifier="GTK_PAN_DIRECTION_DOWN" glib:nick="down" glib:name="GTK_PAN_DIRECTION_DOWN" gs:managed-name="Down">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="987">panned downwards</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_pan_direction_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <bitfield name="PickFlags" glib:type-name="GtkPickFlags" glib:get-type="gtk_pick_flags_get_type" c:type="GtkPickFlags" gs:managed-name="PickFlags">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1018">Flags that influence the behavior of [method@Widget.pick].</doc>
      <member name="default" value="0" c:identifier="GTK_PICK_DEFAULT" glib:nick="default" glib:name="GTK_PICK_DEFAULT" gs:managed-name="Default">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1020">The default behavior, include widgets that are receiving events</doc>
      </member>
      <member name="insensitive" value="1" c:identifier="GTK_PICK_INSENSITIVE" glib:nick="insensitive" glib:name="GTK_PICK_INSENSITIVE" gs:managed-name="Insensitive">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1021">Include widgets that are insensitive</doc>
      </member>
      <member name="non_targetable" value="2" c:identifier="GTK_PICK_NON_TARGETABLE" glib:nick="non-targetable" glib:name="GTK_PICK_NON_TARGETABLE" gs:managed-name="NonTargetable">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1022">Include widgets that are marked as non-targetable. See [property@Widget:can-target]</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_pick_flags_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </bitfield>
    <enumeration name="PolicyType" glib:type-name="GtkPolicyType" glib:get-type="gtk_policy_type_get_type" c:type="GtkPolicyType" gs:managed-name="PolicyType">
      <doc xml:space="preserve" filename="../gtk/gtkscrolledwindow.h" line="69">Determines how the size should be computed to achieve the one of the
visibility mode for the scrollbars.</doc>
      <member name="always" value="0" c:identifier="GTK_POLICY_ALWAYS" glib:nick="always" glib:name="GTK_POLICY_ALWAYS" gs:managed-name="Always">
        <doc xml:space="preserve" filename="../gtk/gtkscrolledwindow.h" line="71">The scrollbar is always visible. The view size is
  independent of the content.</doc>
      </member>
      <member name="automatic" value="1" c:identifier="GTK_POLICY_AUTOMATIC" glib:nick="automatic" glib:name="GTK_POLICY_AUTOMATIC" gs:managed-name="Automatic">
        <doc xml:space="preserve" filename="../gtk/gtkscrolledwindow.h" line="73">The scrollbar will appear and disappear as necessary.
  For example, when all of a `GtkTreeView` can not be seen.</doc>
      </member>
      <member name="never" value="2" c:identifier="GTK_POLICY_NEVER" glib:nick="never" glib:name="GTK_POLICY_NEVER" gs:managed-name="Never">
        <doc xml:space="preserve" filename="../gtk/gtkscrolledwindow.h" line="75">The scrollbar should never appear. In this mode the
  content determines the size.</doc>
      </member>
      <member name="external" value="3" c:identifier="GTK_POLICY_EXTERNAL" glib:nick="external" glib:name="GTK_POLICY_EXTERNAL" gs:managed-name="External">
        <doc xml:space="preserve" filename="../gtk/gtkscrolledwindow.h" line="77">Don't show a scrollbar, but don't force the
  size to follow the content. This can be used e.g. to make multiple
  scrolled windows share a scrollbar.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_policy_type_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <bitfield name="PopoverMenuFlags" glib:type-name="GtkPopoverMenuFlags" glib:get-type="gtk_popover_menu_flags_get_type" c:type="GtkPopoverMenuFlags" gs:managed-name="PopoverMenuFlags">
      <doc xml:space="preserve" filename="../gtk/gtkpopovermenu.h" line="41">Flags that affect how popover menus are created from
a menu model.</doc>
      <member name="nested" value="1" c:identifier="GTK_POPOVER_MENU_NESTED" glib:nick="nested" glib:name="GTK_POPOVER_MENU_NESTED" gs:managed-name="Nested">
        <doc xml:space="preserve" filename="../gtk/gtkpopovermenu.h" line="43">Create submenus as nested
   popovers. Without this flag, submenus are created as
   sliding pages that replace the main menu.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_popover_menu_flags_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </bitfield>
    <enumeration name="PositionType" glib:type-name="GtkPositionType" glib:get-type="gtk_position_type_get_type" c:type="GtkPositionType" gs:managed-name="PositionType">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="383">Describes which edge of a widget a certain feature is positioned at.

For examples, see the tabs of a [class@Notebook], or the label
of a [class@Scale].</doc>
      <member name="left" value="0" c:identifier="GTK_POS_LEFT" glib:nick="left" glib:name="GTK_POS_LEFT" gs:managed-name="Left">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="385">The feature is at the left edge.</doc>
      </member>
      <member name="right" value="1" c:identifier="GTK_POS_RIGHT" glib:nick="right" glib:name="GTK_POS_RIGHT" gs:managed-name="Right">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="386">The feature is at the right edge.</doc>
      </member>
      <member name="top" value="2" c:identifier="GTK_POS_TOP" glib:nick="top" glib:name="GTK_POS_TOP" gs:managed-name="Top">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="387">The feature is at the top edge.</doc>
      </member>
      <member name="bottom" value="3" c:identifier="GTK_POS_BOTTOM" glib:nick="bottom" glib:name="GTK_POS_BOTTOM" gs:managed-name="Bottom">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="388">The feature is at the bottom edge.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_position_type_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <bitfield name="PrintCapabilities" glib:type-name="GtkPrintCapabilities" glib:get-type="gtk_print_capabilities_get_type" c:type="GtkPrintCapabilities" gs:managed-name="PrintCapabilities">
      <doc xml:space="preserve" filename="../gtk/gtkprinter.h" line="35">Specifies which features the print dialog should offer.

If neither %GTK_PRINT_CAPABILITY_GENERATE_PDF nor
%GTK_PRINT_CAPABILITY_GENERATE_PS is specified, GTK assumes that all
formats are supported.</doc>
      <member name="page_set" value="1" c:identifier="GTK_PRINT_CAPABILITY_PAGE_SET" glib:nick="page-set" glib:name="GTK_PRINT_CAPABILITY_PAGE_SET" gs:managed-name="PageSet">
        <doc xml:space="preserve" filename="../gtk/gtkprinter.h" line="37">Print dialog will offer printing even/odd pages.</doc>
      </member>
      <member name="copies" value="2" c:identifier="GTK_PRINT_CAPABILITY_COPIES" glib:nick="copies" glib:name="GTK_PRINT_CAPABILITY_COPIES" gs:managed-name="Copies">
        <doc xml:space="preserve" filename="../gtk/gtkprinter.h" line="38">Print dialog will allow to print multiple copies.</doc>
      </member>
      <member name="collate" value="4" c:identifier="GTK_PRINT_CAPABILITY_COLLATE" glib:nick="collate" glib:name="GTK_PRINT_CAPABILITY_COLLATE" gs:managed-name="Collate">
        <doc xml:space="preserve" filename="../gtk/gtkprinter.h" line="39">Print dialog will allow to collate multiple copies.</doc>
      </member>
      <member name="reverse" value="8" c:identifier="GTK_PRINT_CAPABILITY_REVERSE" glib:nick="reverse" glib:name="GTK_PRINT_CAPABILITY_REVERSE" gs:managed-name="Reverse">
        <doc xml:space="preserve" filename="../gtk/gtkprinter.h" line="40">Print dialog will allow to print pages in reverse order.</doc>
      </member>
      <member name="scale" value="16" c:identifier="GTK_PRINT_CAPABILITY_SCALE" glib:nick="scale" glib:name="GTK_PRINT_CAPABILITY_SCALE" gs:managed-name="Scale">
        <doc xml:space="preserve" filename="../gtk/gtkprinter.h" line="41">Print dialog will allow to scale the output.</doc>
      </member>
      <member name="generate_pdf" value="32" c:identifier="GTK_PRINT_CAPABILITY_GENERATE_PDF" glib:nick="generate-pdf" glib:name="GTK_PRINT_CAPABILITY_GENERATE_PDF" gs:managed-name="GeneratePdf">
        <doc xml:space="preserve" filename="../gtk/gtkprinter.h" line="42">The program will send the document to
  the printer in PDF format</doc>
      </member>
      <member name="generate_ps" value="64" c:identifier="GTK_PRINT_CAPABILITY_GENERATE_PS" glib:nick="generate-ps" glib:name="GTK_PRINT_CAPABILITY_GENERATE_PS" gs:managed-name="GeneratePs">
        <doc xml:space="preserve" filename="../gtk/gtkprinter.h" line="44">The program will send the document to
  the printer in Postscript format</doc>
      </member>
      <member name="preview" value="128" c:identifier="GTK_PRINT_CAPABILITY_PREVIEW" glib:nick="preview" glib:name="GTK_PRINT_CAPABILITY_PREVIEW" gs:managed-name="Preview">
        <doc xml:space="preserve" filename="../gtk/gtkprinter.h" line="46">Print dialog will offer a preview</doc>
      </member>
      <member name="number_up" value="256" c:identifier="GTK_PRINT_CAPABILITY_NUMBER_UP" glib:nick="number-up" glib:name="GTK_PRINT_CAPABILITY_NUMBER_UP" gs:managed-name="NumberUp">
        <doc xml:space="preserve" filename="../gtk/gtkprinter.h" line="47">Print dialog will offer printing multiple
  pages per sheet</doc>
      </member>
      <member name="number_up_layout" value="512" c:identifier="GTK_PRINT_CAPABILITY_NUMBER_UP_LAYOUT" glib:nick="number-up-layout" glib:name="GTK_PRINT_CAPABILITY_NUMBER_UP_LAYOUT" gs:managed-name="NumberUpLayout">
        <doc xml:space="preserve" filename="../gtk/gtkprinter.h" line="49">Print dialog will allow to rearrange
  pages when printing multiple pages per sheet</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_print_capabilities_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </bitfield>
    <enumeration name="PrintDuplex" glib:type-name="GtkPrintDuplex" glib:get-type="gtk_print_duplex_get_type" c:type="GtkPrintDuplex" gs:managed-name="PrintDuplex">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="639">See also gtk_print_settings_set_duplex().</doc>
      <member name="simplex" value="0" c:identifier="GTK_PRINT_DUPLEX_SIMPLEX" glib:nick="simplex" glib:name="GTK_PRINT_DUPLEX_SIMPLEX" gs:managed-name="Simplex">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="641">No duplex.</doc>
      </member>
      <member name="horizontal" value="1" c:identifier="GTK_PRINT_DUPLEX_HORIZONTAL" glib:nick="horizontal" glib:name="GTK_PRINT_DUPLEX_HORIZONTAL" gs:managed-name="Horizontal">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="642">Horizontal duplex.</doc>
      </member>
      <member name="vertical" value="2" c:identifier="GTK_PRINT_DUPLEX_VERTICAL" glib:nick="vertical" glib:name="GTK_PRINT_DUPLEX_VERTICAL" gs:managed-name="Vertical">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="643">Vertical duplex.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_print_duplex_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="PrintError" glib:type-name="GtkPrintError" glib:get-type="gtk_print_error_get_type" c:type="GtkPrintError" glib:error-domain="gtk-print-error-quark" gs:managed-name="PrintError">
      <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="202">Error codes that identify various errors that can occur while
using the GTK printing support.</doc>
      <member name="general" value="0" c:identifier="GTK_PRINT_ERROR_GENERAL" glib:nick="general" glib:name="GTK_PRINT_ERROR_GENERAL" gs:managed-name="General">
        <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="204">An unspecified error occurred.</doc>
      </member>
      <member name="internal_error" value="1" c:identifier="GTK_PRINT_ERROR_INTERNAL_ERROR" glib:nick="internal-error" glib:name="GTK_PRINT_ERROR_INTERNAL_ERROR" gs:managed-name="InternalError">
        <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="205">An internal error occurred.</doc>
      </member>
      <member name="nomem" value="2" c:identifier="GTK_PRINT_ERROR_NOMEM" glib:nick="nomem" glib:name="GTK_PRINT_ERROR_NOMEM" gs:managed-name="Nomem">
        <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="206">A memory allocation failed.</doc>
      </member>
      <member name="invalid_file" value="3" c:identifier="GTK_PRINT_ERROR_INVALID_FILE" glib:nick="invalid-file" glib:name="GTK_PRINT_ERROR_INVALID_FILE" gs:managed-name="InvalidFile">
        <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="207">An error occurred while loading a page setup
  or paper size from a key file.</doc>
      </member>
      <gs:managed-property name="get_quark" gs:dll-name="gtk-4.1" gs:managed-name="Quark">
        <doc xml:space="preserve" filename="../gtk/gtkprintoperation.c" line="163">Registers an error quark for `GtkPrintOperation` if necessary.</doc>
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <doc xml:space="preserve" filename="../gtk/gtkprintoperation.c" line="168">The error quark used for `GtkPrintOperation` errors.</doc>
          <type name="GLib.Quark" c:type="GQuark" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </gs:managed-property>
      <function name="get_quark" c:identifier="gtk_print_error_quark" gs:dll-name="gtk-4.1" gs:managed-name="GetQuark" gs:property-getter-for="Quark" gs:access-modifiers="private">
        <doc xml:space="preserve" filename="../gtk/gtkprintoperation.c" line="163">Registers an error quark for `GtkPrintOperation` if necessary.</doc>
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <doc xml:space="preserve" filename="../gtk/gtkprintoperation.c" line="168">The error quark used for `GtkPrintOperation` errors.</doc>
          <type name="GLib.Quark" c:type="GQuark" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_print_error_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="PrintOperationAction" glib:type-name="GtkPrintOperationAction" glib:get-type="gtk_print_operation_action_get_type" c:type="GtkPrintOperationAction" gs:managed-name="PrintOperationAction">
      <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="102">Determines what action the print operation should perform.

A parameter of this typs is passed to [method@Gtk.PrintOperation.run].</doc>
      <member name="print_dialog" value="0" c:identifier="GTK_PRINT_OPERATION_ACTION_PRINT_DIALOG" glib:nick="print-dialog" glib:name="GTK_PRINT_OPERATION_ACTION_PRINT_DIALOG" gs:managed-name="PrintDialog">
        <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="104">Show the print dialog.</doc>
      </member>
      <member name="print" value="1" c:identifier="GTK_PRINT_OPERATION_ACTION_PRINT" glib:nick="print" glib:name="GTK_PRINT_OPERATION_ACTION_PRINT" gs:managed-name="Print">
        <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="105">Start to print without showing
  the print dialog, based on the current print settings.</doc>
      </member>
      <member name="preview" value="2" c:identifier="GTK_PRINT_OPERATION_ACTION_PREVIEW" glib:nick="preview" glib:name="GTK_PRINT_OPERATION_ACTION_PREVIEW" gs:managed-name="Preview">
        <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="107">Show the print preview.</doc>
      </member>
      <member name="export" value="3" c:identifier="GTK_PRINT_OPERATION_ACTION_EXPORT" glib:nick="export" glib:name="GTK_PRINT_OPERATION_ACTION_EXPORT" gs:managed-name="Export">
        <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="108">Export to a file. This requires
  the export-filename property to be set.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_print_operation_action_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="PrintOperationResult" glib:type-name="GtkPrintOperationResult" glib:get-type="gtk_print_operation_result_get_type" c:type="GtkPrintOperationResult" gs:managed-name="PrintOperationResult">
      <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="82">The result of a print operation.

A value of this type is returned by [method@Gtk.PrintOperation.run].</doc>
      <member name="error" value="0" c:identifier="GTK_PRINT_OPERATION_RESULT_ERROR" glib:nick="error" glib:name="GTK_PRINT_OPERATION_RESULT_ERROR" gs:managed-name="Error">
        <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="84">An error has occurred.</doc>
      </member>
      <member name="apply" value="1" c:identifier="GTK_PRINT_OPERATION_RESULT_APPLY" glib:nick="apply" glib:name="GTK_PRINT_OPERATION_RESULT_APPLY" gs:managed-name="Apply">
        <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="85">The print settings should be stored.</doc>
      </member>
      <member name="cancel" value="2" c:identifier="GTK_PRINT_OPERATION_RESULT_CANCEL" glib:nick="cancel" glib:name="GTK_PRINT_OPERATION_RESULT_CANCEL" gs:managed-name="Cancel">
        <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="86">The print operation has been canceled,
  the print settings should not be stored.</doc>
      </member>
      <member name="in_progress" value="3" c:identifier="GTK_PRINT_OPERATION_RESULT_IN_PROGRESS" glib:nick="in-progress" glib:name="GTK_PRINT_OPERATION_RESULT_IN_PROGRESS" gs:managed-name="InProgress">
        <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="88">The print operation is not complete
  yet. This value will only be returned when running asynchronously.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_print_operation_result_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="PrintPages" glib:type-name="GtkPrintPages" glib:get-type="gtk_print_pages_get_type" c:type="GtkPrintPages" gs:managed-name="PrintPages">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="504">See also gtk_print_job_set_pages()</doc>
      <member name="all" value="0" c:identifier="GTK_PRINT_PAGES_ALL" glib:nick="all" glib:name="GTK_PRINT_PAGES_ALL" gs:managed-name="All">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="506">All pages.</doc>
      </member>
      <member name="current" value="1" c:identifier="GTK_PRINT_PAGES_CURRENT" glib:nick="current" glib:name="GTK_PRINT_PAGES_CURRENT" gs:managed-name="Current">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="507">Current page.</doc>
      </member>
      <member name="ranges" value="2" c:identifier="GTK_PRINT_PAGES_RANGES" glib:nick="ranges" glib:name="GTK_PRINT_PAGES_RANGES" gs:managed-name="Ranges">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="508">Range of pages.</doc>
      </member>
      <member name="selection" value="3" c:identifier="GTK_PRINT_PAGES_SELECTION" glib:nick="selection" glib:name="GTK_PRINT_PAGES_SELECTION" gs:managed-name="Selection">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="509">Selected pages.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_print_pages_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="PrintQuality" glib:type-name="GtkPrintQuality" glib:get-type="gtk_print_quality_get_type" c:type="GtkPrintQuality" gs:managed-name="PrintQuality">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="622">See also gtk_print_settings_set_quality().</doc>
      <member name="low" value="0" c:identifier="GTK_PRINT_QUALITY_LOW" glib:nick="low" glib:name="GTK_PRINT_QUALITY_LOW" gs:managed-name="Low">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="624">Low quality.</doc>
      </member>
      <member name="normal" value="1" c:identifier="GTK_PRINT_QUALITY_NORMAL" glib:nick="normal" glib:name="GTK_PRINT_QUALITY_NORMAL" gs:managed-name="Normal">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="625">Normal quality.</doc>
      </member>
      <member name="high" value="2" c:identifier="GTK_PRINT_QUALITY_HIGH" glib:nick="high" glib:name="GTK_PRINT_QUALITY_HIGH" gs:managed-name="High">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="626">High quality.</doc>
      </member>
      <member name="draft" value="3" c:identifier="GTK_PRINT_QUALITY_DRAFT" glib:nick="draft" glib:name="GTK_PRINT_QUALITY_DRAFT" gs:managed-name="Draft">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="627">Draft quality.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_print_quality_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="PrintStatus" glib:type-name="GtkPrintStatus" glib:get-type="gtk_print_status_get_type" c:type="GtkPrintStatus" gs:managed-name="PrintStatus">
      <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="49">The status gives a rough indication of the completion of a running
print operation.</doc>
      <member name="initial" value="0" c:identifier="GTK_PRINT_STATUS_INITIAL" glib:nick="initial" glib:name="GTK_PRINT_STATUS_INITIAL" gs:managed-name="Initial">
        <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="51">The printing has not started yet; this
  status is set initially, and while the print dialog is shown.</doc>
      </member>
      <member name="preparing" value="1" c:identifier="GTK_PRINT_STATUS_PREPARING" glib:nick="preparing" glib:name="GTK_PRINT_STATUS_PREPARING" gs:managed-name="Preparing">
        <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="53">This status is set while the begin-print
  signal is emitted and during pagination.</doc>
      </member>
      <member name="generating_data" value="2" c:identifier="GTK_PRINT_STATUS_GENERATING_DATA" glib:nick="generating-data" glib:name="GTK_PRINT_STATUS_GENERATING_DATA" gs:managed-name="GeneratingData">
        <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="55">This status is set while the
  pages are being rendered.</doc>
      </member>
      <member name="sending_data" value="3" c:identifier="GTK_PRINT_STATUS_SENDING_DATA" glib:nick="sending-data" glib:name="GTK_PRINT_STATUS_SENDING_DATA" gs:managed-name="SendingData">
        <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="57">The print job is being sent off to the
  printer.</doc>
      </member>
      <member name="pending" value="4" c:identifier="GTK_PRINT_STATUS_PENDING" glib:nick="pending" glib:name="GTK_PRINT_STATUS_PENDING" gs:managed-name="Pending">
        <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="59">The print job has been sent to the printer,
  but is not printed for some reason, e.g. the printer may be stopped.</doc>
      </member>
      <member name="pending_issue" value="5" c:identifier="GTK_PRINT_STATUS_PENDING_ISSUE" glib:nick="pending-issue" glib:name="GTK_PRINT_STATUS_PENDING_ISSUE" gs:managed-name="PendingIssue">
        <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="61">Some problem has occurred during
  printing, e.g. a paper jam.</doc>
      </member>
      <member name="printing" value="6" c:identifier="GTK_PRINT_STATUS_PRINTING" glib:nick="printing" glib:name="GTK_PRINT_STATUS_PRINTING" gs:managed-name="Printing">
        <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="63">The printer is processing the print job.</doc>
      </member>
      <member name="finished" value="7" c:identifier="GTK_PRINT_STATUS_FINISHED" glib:nick="finished" glib:name="GTK_PRINT_STATUS_FINISHED" gs:managed-name="Finished">
        <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="64">The printing has been completed successfully.</doc>
      </member>
      <member name="finished_aborted" value="8" c:identifier="GTK_PRINT_STATUS_FINISHED_ABORTED" glib:nick="finished-aborted" glib:name="GTK_PRINT_STATUS_FINISHED_ABORTED" gs:managed-name="FinishedAborted">
        <doc xml:space="preserve" filename="../gtk/gtkprintoperation.h" line="65">The printing has been aborted.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_print_status_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="PropagationLimit" glib:type-name="GtkPropagationLimit" glib:get-type="gtk_propagation_limit_get_type" c:type="GtkPropagationLimit" gs:managed-name="PropagationLimit">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="950">Describes limits of a [class@EventController] for handling events
targeting other widgets.</doc>
      <member name="none" value="0" c:identifier="GTK_LIMIT_NONE" glib:nick="none" glib:name="GTK_LIMIT_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="952">Events are handled regardless of what their
  target is.</doc>
      </member>
      <member name="same_native" value="1" c:identifier="GTK_LIMIT_SAME_NATIVE" glib:nick="same-native" glib:name="GTK_LIMIT_SAME_NATIVE" gs:managed-name="SameNative">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="954">Events are only handled if their target
  is in the same [iface@Native] as the event controllers widget. Note
  that some event types have two targets (origin and destination).</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_propagation_limit_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="PropagationPhase" glib:type-name="GtkPropagationPhase" glib:get-type="gtk_propagation_phase_get_type" c:type="GtkPropagationPhase" gs:managed-name="PropagationPhase">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="926">Describes the stage at which events are fed into a [class@EventController].</doc>
      <member name="none" value="0" c:identifier="GTK_PHASE_NONE" glib:nick="none" glib:name="GTK_PHASE_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="928">Events are not delivered.</doc>
      </member>
      <member name="capture" value="1" c:identifier="GTK_PHASE_CAPTURE" glib:nick="capture" glib:name="GTK_PHASE_CAPTURE" gs:managed-name="Capture">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="929">Events are delivered in the capture phase. The
  capture phase happens before the bubble phase, runs from the toplevel down
  to the event widget. This option should only be used on containers that
  might possibly handle events before their children do.</doc>
      </member>
      <member name="bubble" value="2" c:identifier="GTK_PHASE_BUBBLE" glib:nick="bubble" glib:name="GTK_PHASE_BUBBLE" gs:managed-name="Bubble">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="933">Events are delivered in the bubble phase. The bubble
  phase happens after the capture phase, and before the default handlers
  are run. This phase runs from the event widget, up to the toplevel.</doc>
      </member>
      <member name="target" value="3" c:identifier="GTK_PHASE_TARGET" glib:nick="target" glib:name="GTK_PHASE_TARGET" gs:managed-name="Target">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="936">Events are delivered in the default widget event handlers,
  note that widget implementations must chain up on button, motion, touch and
  grab broken handlers for controllers in this phase to be run.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_propagation_phase_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="RecentManagerError" glib:type-name="GtkRecentManagerError" glib:get-type="gtk_recent_manager_error_get_type" c:type="GtkRecentManagerError" glib:error-domain="gtk-recent-manager-error-quark" gs:managed-name="RecentManagerError">
      <doc xml:space="preserve" filename="../gtk/gtkrecentmanager.h" line="111">Error codes for `GtkRecentManager` operations</doc>
      <member name="not_found" value="0" c:identifier="GTK_RECENT_MANAGER_ERROR_NOT_FOUND" glib:nick="not-found" glib:name="GTK_RECENT_MANAGER_ERROR_NOT_FOUND" gs:managed-name="NotFound">
        <doc xml:space="preserve" filename="../gtk/gtkrecentmanager.h" line="113">the URI specified does not exists in
  the recently used resources list.</doc>
      </member>
      <member name="invalid_uri" value="1" c:identifier="GTK_RECENT_MANAGER_ERROR_INVALID_URI" glib:nick="invalid-uri" glib:name="GTK_RECENT_MANAGER_ERROR_INVALID_URI" gs:managed-name="InvalidUri">
        <doc xml:space="preserve" filename="../gtk/gtkrecentmanager.h" line="115">the URI specified is not valid.</doc>
      </member>
      <member name="invalid_encoding" value="2" c:identifier="GTK_RECENT_MANAGER_ERROR_INVALID_ENCODING" glib:nick="invalid-encoding" glib:name="GTK_RECENT_MANAGER_ERROR_INVALID_ENCODING" gs:managed-name="InvalidEncoding">
        <doc xml:space="preserve" filename="../gtk/gtkrecentmanager.h" line="116">the supplied string is not
  UTF-8 encoded.</doc>
      </member>
      <member name="not_registered" value="3" c:identifier="GTK_RECENT_MANAGER_ERROR_NOT_REGISTERED" glib:nick="not-registered" glib:name="GTK_RECENT_MANAGER_ERROR_NOT_REGISTERED" gs:managed-name="NotRegistered">
        <doc xml:space="preserve" filename="../gtk/gtkrecentmanager.h" line="118">no application has registered
  the specified item.</doc>
      </member>
      <member name="read" value="4" c:identifier="GTK_RECENT_MANAGER_ERROR_READ" glib:nick="read" glib:name="GTK_RECENT_MANAGER_ERROR_READ" gs:managed-name="Read">
        <doc xml:space="preserve" filename="../gtk/gtkrecentmanager.h" line="120">failure while reading the recently used
  resources file.</doc>
      </member>
      <member name="write" value="5" c:identifier="GTK_RECENT_MANAGER_ERROR_WRITE" glib:nick="write" glib:name="GTK_RECENT_MANAGER_ERROR_WRITE" gs:managed-name="Write">
        <doc xml:space="preserve" filename="../gtk/gtkrecentmanager.h" line="122">failure while writing the recently used
  resources file.</doc>
      </member>
      <member name="unknown" value="6" c:identifier="GTK_RECENT_MANAGER_ERROR_UNKNOWN" glib:nick="unknown" glib:name="GTK_RECENT_MANAGER_ERROR_UNKNOWN" gs:managed-name="Unknown">
        <doc xml:space="preserve" filename="../gtk/gtkrecentmanager.h" line="124">unspecified error.</doc>
      </member>
      <gs:managed-property name="get_quark" gs:dll-name="gtk-4.1" gs:managed-name="Quark">
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <type name="GLib.Quark" c:type="GQuark" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </gs:managed-property>
      <function name="get_quark" c:identifier="gtk_recent_manager_error_quark" gs:dll-name="gtk-4.1" gs:managed-name="GetQuark" gs:property-getter-for="Quark" gs:access-modifiers="private">
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <type name="GLib.Quark" c:type="GQuark" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_recent_manager_error_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="ResponseType" glib:type-name="GtkResponseType" glib:get-type="gtk_response_type_get_type" c:type="GtkResponseType" gs:managed-name="ResponseType">
      <doc xml:space="preserve" filename="../gtk/gtkdialog.h" line="52">Predefined values for use as response ids in gtk_dialog_add_button().

All predefined values are negative; GTK leaves values of 0 or greater for
application-defined response ids.</doc>
      <member name="none" value="-1" c:identifier="GTK_RESPONSE_NONE" glib:nick="none" glib:name="GTK_RESPONSE_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtkdialog.h" line="54">Returned if an action widget has no response id,
  or if the dialog gets programmatically hidden or destroyed</doc>
      </member>
      <member name="reject" value="-2" c:identifier="GTK_RESPONSE_REJECT" glib:nick="reject" glib:name="GTK_RESPONSE_REJECT" gs:managed-name="Reject">
        <doc xml:space="preserve" filename="../gtk/gtkdialog.h" line="56">Generic response id, not used by GTK dialogs</doc>
      </member>
      <member name="accept" value="-3" c:identifier="GTK_RESPONSE_ACCEPT" glib:nick="accept" glib:name="GTK_RESPONSE_ACCEPT" gs:managed-name="Accept">
        <doc xml:space="preserve" filename="../gtk/gtkdialog.h" line="57">Generic response id, not used by GTK dialogs</doc>
      </member>
      <member name="delete_event" value="-4" c:identifier="GTK_RESPONSE_DELETE_EVENT" glib:nick="delete-event" glib:name="GTK_RESPONSE_DELETE_EVENT" gs:managed-name="DeleteEvent">
        <doc xml:space="preserve" filename="../gtk/gtkdialog.h" line="58">Returned if the dialog is deleted</doc>
      </member>
      <member name="ok" value="-5" c:identifier="GTK_RESPONSE_OK" glib:nick="ok" glib:name="GTK_RESPONSE_OK" gs:managed-name="Ok">
        <doc xml:space="preserve" filename="../gtk/gtkdialog.h" line="59">Returned by OK buttons in GTK dialogs</doc>
      </member>
      <member name="cancel" value="-6" c:identifier="GTK_RESPONSE_CANCEL" glib:nick="cancel" glib:name="GTK_RESPONSE_CANCEL" gs:managed-name="Cancel">
        <doc xml:space="preserve" filename="../gtk/gtkdialog.h" line="60">Returned by Cancel buttons in GTK dialogs</doc>
      </member>
      <member name="close" value="-7" c:identifier="GTK_RESPONSE_CLOSE" glib:nick="close" glib:name="GTK_RESPONSE_CLOSE" gs:managed-name="Close">
        <doc xml:space="preserve" filename="../gtk/gtkdialog.h" line="61">Returned by Close buttons in GTK dialogs</doc>
      </member>
      <member name="yes" value="-8" c:identifier="GTK_RESPONSE_YES" glib:nick="yes" glib:name="GTK_RESPONSE_YES" gs:managed-name="Yes">
        <doc xml:space="preserve" filename="../gtk/gtkdialog.h" line="62">Returned by Yes buttons in GTK dialogs</doc>
      </member>
      <member name="no" value="-9" c:identifier="GTK_RESPONSE_NO" glib:nick="no" glib:name="GTK_RESPONSE_NO" gs:managed-name="No">
        <doc xml:space="preserve" filename="../gtk/gtkdialog.h" line="63">Returned by No buttons in GTK dialogs</doc>
      </member>
      <member name="apply" value="-10" c:identifier="GTK_RESPONSE_APPLY" glib:nick="apply" glib:name="GTK_RESPONSE_APPLY" gs:managed-name="Apply">
        <doc xml:space="preserve" filename="../gtk/gtkdialog.h" line="64">Returned by Apply buttons in GTK dialogs</doc>
      </member>
      <member name="help" value="-11" c:identifier="GTK_RESPONSE_HELP" glib:nick="help" glib:name="GTK_RESPONSE_HELP" gs:managed-name="Help">
        <doc xml:space="preserve" filename="../gtk/gtkdialog.h" line="65">Returned by Help buttons in GTK dialogs</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_response_type_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="RevealerTransitionType" glib:type-name="GtkRevealerTransitionType" glib:get-type="gtk_revealer_transition_type_get_type" c:type="GtkRevealerTransitionType" gs:managed-name="RevealerTransitionType">
      <doc xml:space="preserve" filename="../gtk/gtkrevealer.c" line="61">These enumeration values describe the possible transitions
when the child of a `GtkRevealer` widget is shown or hidden.</doc>
      <member name="none" value="0" c:identifier="GTK_REVEALER_TRANSITION_TYPE_NONE" glib:nick="none" glib:name="GTK_REVEALER_TRANSITION_TYPE_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtkrevealer.c" line="63">No transition</doc>
      </member>
      <member name="crossfade" value="1" c:identifier="GTK_REVEALER_TRANSITION_TYPE_CROSSFADE" glib:nick="crossfade" glib:name="GTK_REVEALER_TRANSITION_TYPE_CROSSFADE" gs:managed-name="Crossfade">
        <doc xml:space="preserve" filename="../gtk/gtkrevealer.c" line="64">Fade in</doc>
      </member>
      <member name="slide_right" value="2" c:identifier="GTK_REVEALER_TRANSITION_TYPE_SLIDE_RIGHT" glib:nick="slide-right" glib:name="GTK_REVEALER_TRANSITION_TYPE_SLIDE_RIGHT" gs:managed-name="SlideRight">
        <doc xml:space="preserve" filename="../gtk/gtkrevealer.c" line="65">Slide in from the left</doc>
      </member>
      <member name="slide_left" value="3" c:identifier="GTK_REVEALER_TRANSITION_TYPE_SLIDE_LEFT" glib:nick="slide-left" glib:name="GTK_REVEALER_TRANSITION_TYPE_SLIDE_LEFT" gs:managed-name="SlideLeft">
        <doc xml:space="preserve" filename="../gtk/gtkrevealer.c" line="66">Slide in from the right</doc>
      </member>
      <member name="slide_up" value="4" c:identifier="GTK_REVEALER_TRANSITION_TYPE_SLIDE_UP" glib:nick="slide-up" glib:name="GTK_REVEALER_TRANSITION_TYPE_SLIDE_UP" gs:managed-name="SlideUp">
        <doc xml:space="preserve" filename="../gtk/gtkrevealer.c" line="67">Slide in from the bottom</doc>
      </member>
      <member name="slide_down" value="5" c:identifier="GTK_REVEALER_TRANSITION_TYPE_SLIDE_DOWN" glib:nick="slide-down" glib:name="GTK_REVEALER_TRANSITION_TYPE_SLIDE_DOWN" gs:managed-name="SlideDown">
        <doc xml:space="preserve" filename="../gtk/gtkrevealer.c" line="68">Slide in from the top</doc>
      </member>
      <member name="swing_right" value="6" c:identifier="GTK_REVEALER_TRANSITION_TYPE_SWING_RIGHT" glib:nick="swing-right" glib:name="GTK_REVEALER_TRANSITION_TYPE_SWING_RIGHT" gs:managed-name="SwingRight">
        <doc xml:space="preserve" filename="../gtk/gtkrevealer.c" line="69">Floop in from the left</doc>
      </member>
      <member name="swing_left" value="7" c:identifier="GTK_REVEALER_TRANSITION_TYPE_SWING_LEFT" glib:nick="swing-left" glib:name="GTK_REVEALER_TRANSITION_TYPE_SWING_LEFT" gs:managed-name="SwingLeft">
        <doc xml:space="preserve" filename="../gtk/gtkrevealer.c" line="70">Floop in from the right</doc>
      </member>
      <member name="swing_up" value="8" c:identifier="GTK_REVEALER_TRANSITION_TYPE_SWING_UP" glib:nick="swing-up" glib:name="GTK_REVEALER_TRANSITION_TYPE_SWING_UP" gs:managed-name="SwingUp">
        <doc xml:space="preserve" filename="../gtk/gtkrevealer.c" line="71">Floop in from the bottom</doc>
      </member>
      <member name="swing_down" value="9" c:identifier="GTK_REVEALER_TRANSITION_TYPE_SWING_DOWN" glib:nick="swing-down" glib:name="GTK_REVEALER_TRANSITION_TYPE_SWING_DOWN" gs:managed-name="SwingDown">
        <doc xml:space="preserve" filename="../gtk/gtkrevealer.c" line="72">Floop in from the top</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_revealer_transition_type_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="ScrollStep" glib:type-name="GtkScrollStep" glib:get-type="gtk_scroll_step_get_type" c:type="GtkScrollStep" gs:managed-name="ScrollStep">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="313">Passed as argument to various keybinding signals.</doc>
      <member name="steps" value="0" c:identifier="GTK_SCROLL_STEPS" glib:nick="steps" glib:name="GTK_SCROLL_STEPS" gs:managed-name="Steps">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="315">Scroll in steps.</doc>
      </member>
      <member name="pages" value="1" c:identifier="GTK_SCROLL_PAGES" glib:nick="pages" glib:name="GTK_SCROLL_PAGES" gs:managed-name="Pages">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="316">Scroll by pages.</doc>
      </member>
      <member name="ends" value="2" c:identifier="GTK_SCROLL_ENDS" glib:nick="ends" glib:name="GTK_SCROLL_ENDS" gs:managed-name="Ends">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="317">Scroll to ends.</doc>
      </member>
      <member name="horizontal_steps" value="3" c:identifier="GTK_SCROLL_HORIZONTAL_STEPS" glib:nick="horizontal-steps" glib:name="GTK_SCROLL_HORIZONTAL_STEPS" gs:managed-name="HorizontalSteps">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="318">Scroll in horizontal steps.</doc>
      </member>
      <member name="horizontal_pages" value="4" c:identifier="GTK_SCROLL_HORIZONTAL_PAGES" glib:nick="horizontal-pages" glib:name="GTK_SCROLL_HORIZONTAL_PAGES" gs:managed-name="HorizontalPages">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="319">Scroll by horizontal pages.</doc>
      </member>
      <member name="horizontal_ends" value="5" c:identifier="GTK_SCROLL_HORIZONTAL_ENDS" glib:nick="horizontal-ends" glib:name="GTK_SCROLL_HORIZONTAL_ENDS" gs:managed-name="HorizontalEnds">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="320">Scroll to the horizontal ends.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_scroll_step_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="ScrollType" glib:type-name="GtkScrollType" glib:get-type="gtk_scroll_type_get_type" c:type="GtkScrollType" gs:managed-name="ScrollType">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="403">Scrolling types.</doc>
      <member name="none" value="0" c:identifier="GTK_SCROLL_NONE" glib:nick="none" glib:name="GTK_SCROLL_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="405">No scrolling.</doc>
      </member>
      <member name="jump" value="1" c:identifier="GTK_SCROLL_JUMP" glib:nick="jump" glib:name="GTK_SCROLL_JUMP" gs:managed-name="Jump">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="406">Jump to new location.</doc>
      </member>
      <member name="step_backward" value="2" c:identifier="GTK_SCROLL_STEP_BACKWARD" glib:nick="step-backward" glib:name="GTK_SCROLL_STEP_BACKWARD" gs:managed-name="StepBackward">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="407">Step backward.</doc>
      </member>
      <member name="step_forward" value="3" c:identifier="GTK_SCROLL_STEP_FORWARD" glib:nick="step-forward" glib:name="GTK_SCROLL_STEP_FORWARD" gs:managed-name="StepForward">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="408">Step forward.</doc>
      </member>
      <member name="page_backward" value="4" c:identifier="GTK_SCROLL_PAGE_BACKWARD" glib:nick="page-backward" glib:name="GTK_SCROLL_PAGE_BACKWARD" gs:managed-name="PageBackward">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="409">Page backward.</doc>
      </member>
      <member name="page_forward" value="5" c:identifier="GTK_SCROLL_PAGE_FORWARD" glib:nick="page-forward" glib:name="GTK_SCROLL_PAGE_FORWARD" gs:managed-name="PageForward">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="410">Page forward.</doc>
      </member>
      <member name="step_up" value="6" c:identifier="GTK_SCROLL_STEP_UP" glib:nick="step-up" glib:name="GTK_SCROLL_STEP_UP" gs:managed-name="StepUp">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="411">Step up.</doc>
      </member>
      <member name="step_down" value="7" c:identifier="GTK_SCROLL_STEP_DOWN" glib:nick="step-down" glib:name="GTK_SCROLL_STEP_DOWN" gs:managed-name="StepDown">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="412">Step down.</doc>
      </member>
      <member name="page_up" value="8" c:identifier="GTK_SCROLL_PAGE_UP" glib:nick="page-up" glib:name="GTK_SCROLL_PAGE_UP" gs:managed-name="PageUp">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="413">Page up.</doc>
      </member>
      <member name="page_down" value="9" c:identifier="GTK_SCROLL_PAGE_DOWN" glib:nick="page-down" glib:name="GTK_SCROLL_PAGE_DOWN" gs:managed-name="PageDown">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="414">Page down.</doc>
      </member>
      <member name="step_left" value="10" c:identifier="GTK_SCROLL_STEP_LEFT" glib:nick="step-left" glib:name="GTK_SCROLL_STEP_LEFT" gs:managed-name="StepLeft">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="415">Step to the left.</doc>
      </member>
      <member name="step_right" value="11" c:identifier="GTK_SCROLL_STEP_RIGHT" glib:nick="step-right" glib:name="GTK_SCROLL_STEP_RIGHT" gs:managed-name="StepRight">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="416">Step to the right.</doc>
      </member>
      <member name="page_left" value="12" c:identifier="GTK_SCROLL_PAGE_LEFT" glib:nick="page-left" glib:name="GTK_SCROLL_PAGE_LEFT" gs:managed-name="PageLeft">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="417">Page to the left.</doc>
      </member>
      <member name="page_right" value="13" c:identifier="GTK_SCROLL_PAGE_RIGHT" glib:nick="page-right" glib:name="GTK_SCROLL_PAGE_RIGHT" gs:managed-name="PageRight">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="418">Page to the right.</doc>
      </member>
      <member name="start" value="14" c:identifier="GTK_SCROLL_START" glib:nick="start" glib:name="GTK_SCROLL_START" gs:managed-name="Start">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="419">Scroll to start.</doc>
      </member>
      <member name="end" value="15" c:identifier="GTK_SCROLL_END" glib:nick="end" glib:name="GTK_SCROLL_END" gs:managed-name="End">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="420">Scroll to end.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_scroll_type_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="ScrollablePolicy" glib:type-name="GtkScrollablePolicy" glib:get-type="gtk_scrollable_policy_get_type" c:type="GtkScrollablePolicy" gs:managed-name="ScrollablePolicy">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="724">Defines the policy to be used in a scrollable widget when updating
the scrolled window adjustments in a given orientation.</doc>
      <member name="minimum" value="0" c:identifier="GTK_SCROLL_MINIMUM" glib:nick="minimum" glib:name="GTK_SCROLL_MINIMUM" gs:managed-name="Minimum">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="726">Scrollable adjustments are based on the minimum size</doc>
      </member>
      <member name="natural" value="1" c:identifier="GTK_SCROLL_NATURAL" glib:nick="natural" glib:name="GTK_SCROLL_NATURAL" gs:managed-name="Natural">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="727">Scrollable adjustments are based on the natural size</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_scrollable_policy_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="SelectionMode" glib:type-name="GtkSelectionMode" glib:get-type="gtk_selection_mode_get_type" c:type="GtkSelectionMode" gs:managed-name="SelectionMode">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="444">Used to control what selections users are allowed to make.</doc>
      <member name="none" value="0" c:identifier="GTK_SELECTION_NONE" glib:nick="none" glib:name="GTK_SELECTION_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="446">No selection is possible.</doc>
      </member>
      <member name="single" value="1" c:identifier="GTK_SELECTION_SINGLE" glib:nick="single" glib:name="GTK_SELECTION_SINGLE" gs:managed-name="Single">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="447">Zero or one element may be selected.</doc>
      </member>
      <member name="browse" value="2" c:identifier="GTK_SELECTION_BROWSE" glib:nick="browse" glib:name="GTK_SELECTION_BROWSE" gs:managed-name="Browse">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="448">Exactly one element is selected.
  In some circumstances, such as initially or during a search
  operation, it’s possible for no element to be selected with
  %GTK_SELECTION_BROWSE. What is really enforced is that the user
  can’t deselect a currently selected element except by selecting
  another element.</doc>
      </member>
      <member name="multiple" value="3" c:identifier="GTK_SELECTION_MULTIPLE" glib:nick="multiple" glib:name="GTK_SELECTION_MULTIPLE" gs:managed-name="Multiple">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="454">Any number of elements may be selected.
  The Ctrl key may be used to enlarge the selection, and Shift
  key to select between the focus and the child pointed to.
  Some widgets may also allow Click-drag to select a range of elements.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_selection_mode_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="SensitivityType" glib:type-name="GtkSensitivityType" glib:get-type="gtk_sensitivity_type_get_type" c:type="GtkSensitivityType" gs:managed-name="SensitivityType">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="189">Determines how GTK handles the sensitivity of various controls,
such as combo box buttons.</doc>
      <member name="auto" value="0" c:identifier="GTK_SENSITIVITY_AUTO" glib:nick="auto" glib:name="GTK_SENSITIVITY_AUTO" gs:managed-name="Auto">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="191">The control is made insensitive if no
  action can be triggered</doc>
      </member>
      <member name="on" value="1" c:identifier="GTK_SENSITIVITY_ON" glib:nick="on" glib:name="GTK_SENSITIVITY_ON" gs:managed-name="On">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="193">The control is always sensitive</doc>
      </member>
      <member name="off" value="2" c:identifier="GTK_SENSITIVITY_OFF" glib:nick="off" glib:name="GTK_SENSITIVITY_OFF" gs:managed-name="Off">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="194">The control is always insensitive</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_sensitivity_type_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <bitfield name="ShortcutActionFlags" glib:type-name="GtkShortcutActionFlags" glib:get-type="gtk_shortcut_action_flags_get_type" c:type="GtkShortcutActionFlags" gs:managed-name="ShortcutActionFlags">
      <doc xml:space="preserve" filename="../gtk/gtkshortcutaction.h" line="47">List of flags that can be passed to action activation.

More flags may be added in the future.</doc>
      <member name="exclusive" value="1" c:identifier="GTK_SHORTCUT_ACTION_EXCLUSIVE" glib:nick="exclusive" glib:name="GTK_SHORTCUT_ACTION_EXCLUSIVE" gs:managed-name="Exclusive">
        <doc xml:space="preserve" filename="../gtk/gtkshortcutaction.h" line="49">The action is the only
  action that can be activated. If this flag is not set,
  a future activation may select a different action.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_shortcut_action_flags_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </bitfield>
    <enumeration name="ShortcutScope" glib:type-name="GtkShortcutScope" glib:get-type="gtk_shortcut_scope_get_type" c:type="GtkShortcutScope" gs:managed-name="ShortcutScope">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="999">Describes where [class@Shortcut]s added to a
[class@ShortcutController] get handled.</doc>
      <member name="local" value="0" c:identifier="GTK_SHORTCUT_SCOPE_LOCAL" glib:nick="local" glib:name="GTK_SHORTCUT_SCOPE_LOCAL" gs:managed-name="Local">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1001">Shortcuts are handled inside
  the widget the controller belongs to.</doc>
      </member>
      <member name="managed" value="1" c:identifier="GTK_SHORTCUT_SCOPE_MANAGED" glib:nick="managed" glib:name="GTK_SHORTCUT_SCOPE_MANAGED" gs:managed-name="Managed">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1003">Shortcuts are handled by
  the first ancestor that is a [iface@ShortcutManager]</doc>
      </member>
      <member name="global" value="2" c:identifier="GTK_SHORTCUT_SCOPE_GLOBAL" glib:nick="global" glib:name="GTK_SHORTCUT_SCOPE_GLOBAL" gs:managed-name="Global">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1005">Shortcuts are handled by
  the root widget.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_shortcut_scope_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="ShortcutType" glib:type-name="GtkShortcutType" glib:get-type="gtk_shortcut_type_get_type" c:type="GtkShortcutType" gs:managed-name="ShortcutType">
      <doc xml:space="preserve" filename="../gtk/gtkshortcutsshortcut.h" line="38">GtkShortcutType specifies the kind of shortcut that is being described.

More values may be added to this enumeration over time.</doc>
      <member name="accelerator" value="0" c:identifier="GTK_SHORTCUT_ACCELERATOR" glib:nick="accelerator" glib:name="GTK_SHORTCUT_ACCELERATOR" gs:managed-name="Accelerator">
        <doc xml:space="preserve" filename="../gtk/gtkshortcutsshortcut.h" line="40">The shortcut is a keyboard accelerator. The GtkShortcutsShortcut:accelerator
  property will be used.</doc>
      </member>
      <member name="gesture_pinch" value="1" c:identifier="GTK_SHORTCUT_GESTURE_PINCH" glib:nick="gesture-pinch" glib:name="GTK_SHORTCUT_GESTURE_PINCH" gs:managed-name="GesturePinch">
        <doc xml:space="preserve" filename="../gtk/gtkshortcutsshortcut.h" line="43">The shortcut is a pinch gesture. GTK provides an icon and subtitle.</doc>
      </member>
      <member name="gesture_stretch" value="2" c:identifier="GTK_SHORTCUT_GESTURE_STRETCH" glib:nick="gesture-stretch" glib:name="GTK_SHORTCUT_GESTURE_STRETCH" gs:managed-name="GestureStretch">
        <doc xml:space="preserve" filename="../gtk/gtkshortcutsshortcut.h" line="45">The shortcut is a stretch gesture. GTK provides an icon and subtitle.</doc>
      </member>
      <member name="gesture_rotate_clockwise" value="3" c:identifier="GTK_SHORTCUT_GESTURE_ROTATE_CLOCKWISE" glib:nick="gesture-rotate-clockwise" glib:name="GTK_SHORTCUT_GESTURE_ROTATE_CLOCKWISE" gs:managed-name="GestureRotateClockwise">
        <doc xml:space="preserve" filename="../gtk/gtkshortcutsshortcut.h" line="47">The shortcut is a clockwise rotation gesture. GTK provides an icon and subtitle.</doc>
      </member>
      <member name="gesture_rotate_counterclockwise" value="4" c:identifier="GTK_SHORTCUT_GESTURE_ROTATE_COUNTERCLOCKWISE" glib:nick="gesture-rotate-counterclockwise" glib:name="GTK_SHORTCUT_GESTURE_ROTATE_COUNTERCLOCKWISE" gs:managed-name="GestureRotateCounterclockwise">
        <doc xml:space="preserve" filename="../gtk/gtkshortcutsshortcut.h" line="49">The shortcut is a counterclockwise rotation gesture. GTK provides an icon and subtitle.</doc>
      </member>
      <member name="gesture_two_finger_swipe_left" value="5" c:identifier="GTK_SHORTCUT_GESTURE_TWO_FINGER_SWIPE_LEFT" glib:nick="gesture-two-finger-swipe-left" glib:name="GTK_SHORTCUT_GESTURE_TWO_FINGER_SWIPE_LEFT" gs:managed-name="GestureTwoFingerSwipeLeft">
        <doc xml:space="preserve" filename="../gtk/gtkshortcutsshortcut.h" line="51">The shortcut is a two-finger swipe gesture. GTK provides an icon and subtitle.</doc>
      </member>
      <member name="gesture_two_finger_swipe_right" value="6" c:identifier="GTK_SHORTCUT_GESTURE_TWO_FINGER_SWIPE_RIGHT" glib:nick="gesture-two-finger-swipe-right" glib:name="GTK_SHORTCUT_GESTURE_TWO_FINGER_SWIPE_RIGHT" gs:managed-name="GestureTwoFingerSwipeRight">
        <doc xml:space="preserve" filename="../gtk/gtkshortcutsshortcut.h" line="53">The shortcut is a two-finger swipe gesture. GTK provides an icon and subtitle.</doc>
      </member>
      <member name="gesture" value="7" c:identifier="GTK_SHORTCUT_GESTURE" glib:nick="gesture" glib:name="GTK_SHORTCUT_GESTURE" gs:managed-name="Gesture">
        <doc xml:space="preserve" filename="../gtk/gtkshortcutsshortcut.h" line="55">The shortcut is a gesture. The GtkShortcutsShortcut:icon property will be
  used.</doc>
      </member>
      <member name="gesture_swipe_left" value="8" c:identifier="GTK_SHORTCUT_GESTURE_SWIPE_LEFT" glib:nick="gesture-swipe-left" glib:name="GTK_SHORTCUT_GESTURE_SWIPE_LEFT" gs:managed-name="GestureSwipeLeft">
        <doc xml:space="preserve" filename="../gtk/gtkshortcutsshortcut.h" line="58">The shortcut is a swipe gesture. GTK provides an icon and subtitle.</doc>
      </member>
      <member name="gesture_swipe_right" value="9" c:identifier="GTK_SHORTCUT_GESTURE_SWIPE_RIGHT" glib:nick="gesture-swipe-right" glib:name="GTK_SHORTCUT_GESTURE_SWIPE_RIGHT" gs:managed-name="GestureSwipeRight">
        <doc xml:space="preserve" filename="../gtk/gtkshortcutsshortcut.h" line="60">The shortcut is a swipe gesture. GTK provides an icon and subtitle.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_shortcut_type_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="SizeGroupMode" glib:type-name="GtkSizeGroupMode" glib:get-type="gtk_size_group_mode_get_type" c:type="GtkSizeGroupMode" gs:managed-name="SizeGroupMode">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="691">The mode of the size group determines the directions in which the size
group affects the requested sizes of its component widgets.</doc>
      <member name="none" value="0" c:identifier="GTK_SIZE_GROUP_NONE" glib:nick="none" glib:name="GTK_SIZE_GROUP_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="693">group has no effect</doc>
      </member>
      <member name="horizontal" value="1" c:identifier="GTK_SIZE_GROUP_HORIZONTAL" glib:nick="horizontal" glib:name="GTK_SIZE_GROUP_HORIZONTAL" gs:managed-name="Horizontal">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="694">group affects horizontal requisition</doc>
      </member>
      <member name="vertical" value="2" c:identifier="GTK_SIZE_GROUP_VERTICAL" glib:nick="vertical" glib:name="GTK_SIZE_GROUP_VERTICAL" gs:managed-name="Vertical">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="695">group affects vertical requisition</doc>
      </member>
      <member name="both" value="3" c:identifier="GTK_SIZE_GROUP_BOTH" glib:nick="both" glib:name="GTK_SIZE_GROUP_BOTH" gs:managed-name="Both">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="696">group affects both horizontal and vertical requisition</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_size_group_mode_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="SizeRequestMode" glib:type-name="GtkSizeRequestMode" glib:get-type="gtk_size_request_mode_get_type" c:type="GtkSizeRequestMode" gs:managed-name="SizeRequestMode">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="708">Specifies a preference for height-for-width or
width-for-height geometry management.</doc>
      <member name="height_for_width" value="0" c:identifier="GTK_SIZE_REQUEST_HEIGHT_FOR_WIDTH" glib:nick="height-for-width" glib:name="GTK_SIZE_REQUEST_HEIGHT_FOR_WIDTH" gs:managed-name="HeightForWidth">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="710">Prefer height-for-width geometry management</doc>
      </member>
      <member name="width_for_height" value="1" c:identifier="GTK_SIZE_REQUEST_WIDTH_FOR_HEIGHT" glib:nick="width-for-height" glib:name="GTK_SIZE_REQUEST_WIDTH_FOR_HEIGHT" gs:managed-name="WidthForHeight">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="711">Prefer width-for-height geometry management</doc>
      </member>
      <member name="constant_size" value="2" c:identifier="GTK_SIZE_REQUEST_CONSTANT_SIZE" glib:nick="constant-size" glib:name="GTK_SIZE_REQUEST_CONSTANT_SIZE" gs:managed-name="ConstantSize">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="712">Don’t trade height-for-width or width-for-height</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_size_request_mode_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="SortType" glib:type-name="GtkSortType" glib:get-type="gtk_sort_type_get_type" c:type="GtkSortType" gs:managed-name="SortType">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="491">Determines the direction of a sort.</doc>
      <member name="ascending" value="0" c:identifier="GTK_SORT_ASCENDING" glib:nick="ascending" glib:name="GTK_SORT_ASCENDING" gs:managed-name="Ascending">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="493">Sorting is in ascending order.</doc>
      </member>
      <member name="descending" value="1" c:identifier="GTK_SORT_DESCENDING" glib:nick="descending" glib:name="GTK_SORT_DESCENDING" gs:managed-name="Descending">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="494">Sorting is in descending order.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_sort_type_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="SorterChange" glib:type-name="GtkSorterChange" glib:get-type="gtk_sorter_change_get_type" c:type="GtkSorterChange" gs:managed-name="SorterChange">
      <doc xml:space="preserve" filename="../gtk/gtksorter.h" line="49">Describes changes in a sorter in more detail and allows users
to optimize resorting.</doc>
      <member name="different" value="0" c:identifier="GTK_SORTER_CHANGE_DIFFERENT" glib:nick="different" glib:name="GTK_SORTER_CHANGE_DIFFERENT" gs:managed-name="Different">
        <doc xml:space="preserve" filename="../gtk/gtksorter.h" line="51">The sorter change cannot be described
  by any of the other enumeration values</doc>
      </member>
      <member name="inverted" value="1" c:identifier="GTK_SORTER_CHANGE_INVERTED" glib:nick="inverted" glib:name="GTK_SORTER_CHANGE_INVERTED" gs:managed-name="Inverted">
        <doc xml:space="preserve" filename="../gtk/gtksorter.h" line="53">The sort order was inverted. Comparisons
  that returned %GTK_ORDERING_SMALLER now return %GTK_ORDERING_LARGER
  and vice versa. Other comparisons return the same values as before.</doc>
      </member>
      <member name="less_strict" value="2" c:identifier="GTK_SORTER_CHANGE_LESS_STRICT" glib:nick="less-strict" glib:name="GTK_SORTER_CHANGE_LESS_STRICT" gs:managed-name="LessStrict">
        <doc xml:space="preserve" filename="../gtk/gtksorter.h" line="56">The sorter is less strict: Comparisons
  may now return %GTK_ORDERING_EQUAL that did not do so before.</doc>
      </member>
      <member name="more_strict" value="3" c:identifier="GTK_SORTER_CHANGE_MORE_STRICT" glib:nick="more-strict" glib:name="GTK_SORTER_CHANGE_MORE_STRICT" gs:managed-name="MoreStrict">
        <doc xml:space="preserve" filename="../gtk/gtksorter.h" line="58">The sorter is more strict: Comparisons
  that did return %GTK_ORDERING_EQUAL may not do so anymore.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_sorter_change_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="SorterOrder" glib:type-name="GtkSorterOrder" glib:get-type="gtk_sorter_order_get_type" c:type="GtkSorterOrder" gs:managed-name="SorterOrder">
      <doc xml:space="preserve" filename="../gtk/gtksorter.h" line="32">Describes the type of order that a `GtkSorter` may produce.</doc>
      <member name="partial" value="0" c:identifier="GTK_SORTER_ORDER_PARTIAL" glib:nick="partial" glib:name="GTK_SORTER_ORDER_PARTIAL" gs:managed-name="Partial">
        <doc xml:space="preserve" filename="../gtk/gtksorter.h" line="34">A partial order. Any `GtkOrdering` is possible.</doc>
      </member>
      <member name="none" value="1" c:identifier="GTK_SORTER_ORDER_NONE" glib:nick="none" glib:name="GTK_SORTER_ORDER_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtksorter.h" line="35">No order, all elements are considered equal.
  gtk_sorter_compare() will only return %GTK_ORDERING_EQUAL.</doc>
      </member>
      <member name="total" value="2" c:identifier="GTK_SORTER_ORDER_TOTAL" glib:nick="total" glib:name="GTK_SORTER_ORDER_TOTAL" gs:managed-name="Total">
        <doc xml:space="preserve" filename="../gtk/gtksorter.h" line="37">A total order. gtk_sorter_compare() will only
  return %GTK_ORDERING_EQUAL if an item is compared with itself. Two
  different items will never cause this value to be returned.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_sorter_order_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="SpinButtonUpdatePolicy" glib:type-name="GtkSpinButtonUpdatePolicy" glib:get-type="gtk_spin_button_update_policy_get_type" c:type="GtkSpinButtonUpdatePolicy" gs:managed-name="SpinButtonUpdatePolicy">
      <doc xml:space="preserve" filename="../gtk/gtkspinbutton.h" line="55">Determines whether the spin button displays values outside the adjustment
bounds.

See [method@Gtk.SpinButton.set_update_policy].</doc>
      <member name="always" value="0" c:identifier="GTK_UPDATE_ALWAYS" glib:nick="always" glib:name="GTK_UPDATE_ALWAYS" gs:managed-name="Always">
        <doc xml:space="preserve" filename="../gtk/gtkspinbutton.h" line="57">When refreshing your `GtkSpinButton`, the value is
  always displayed</doc>
      </member>
      <member name="if_valid" value="1" c:identifier="GTK_UPDATE_IF_VALID" glib:nick="if-valid" glib:name="GTK_UPDATE_IF_VALID" gs:managed-name="IfValid">
        <doc xml:space="preserve" filename="../gtk/gtkspinbutton.h" line="59">When refreshing your `GtkSpinButton`, the value is
  only displayed if it is valid within the bounds of the spin button's
  adjustment</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_spin_button_update_policy_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="SpinType" glib:type-name="GtkSpinType" glib:get-type="gtk_spin_type_get_type" c:type="GtkSpinType" gs:managed-name="SpinType">
      <doc xml:space="preserve" filename="../gtk/gtkspinbutton.h" line="74">The values of the GtkSpinType enumeration are used to specify the
change to make in gtk_spin_button_spin().</doc>
      <member name="step_forward" value="0" c:identifier="GTK_SPIN_STEP_FORWARD" glib:nick="step-forward" glib:name="GTK_SPIN_STEP_FORWARD" gs:managed-name="StepForward">
        <doc xml:space="preserve" filename="../gtk/gtkspinbutton.h" line="76">Increment by the adjustments step increment.</doc>
      </member>
      <member name="step_backward" value="1" c:identifier="GTK_SPIN_STEP_BACKWARD" glib:nick="step-backward" glib:name="GTK_SPIN_STEP_BACKWARD" gs:managed-name="StepBackward">
        <doc xml:space="preserve" filename="../gtk/gtkspinbutton.h" line="77">Decrement by the adjustments step increment.</doc>
      </member>
      <member name="page_forward" value="2" c:identifier="GTK_SPIN_PAGE_FORWARD" glib:nick="page-forward" glib:name="GTK_SPIN_PAGE_FORWARD" gs:managed-name="PageForward">
        <doc xml:space="preserve" filename="../gtk/gtkspinbutton.h" line="78">Increment by the adjustments page increment.</doc>
      </member>
      <member name="page_backward" value="3" c:identifier="GTK_SPIN_PAGE_BACKWARD" glib:nick="page-backward" glib:name="GTK_SPIN_PAGE_BACKWARD" gs:managed-name="PageBackward">
        <doc xml:space="preserve" filename="../gtk/gtkspinbutton.h" line="79">Decrement by the adjustments page increment.</doc>
      </member>
      <member name="home" value="4" c:identifier="GTK_SPIN_HOME" glib:nick="home" glib:name="GTK_SPIN_HOME" gs:managed-name="Home">
        <doc xml:space="preserve" filename="../gtk/gtkspinbutton.h" line="80">Go to the adjustments lower bound.</doc>
      </member>
      <member name="end" value="5" c:identifier="GTK_SPIN_END" glib:nick="end" glib:name="GTK_SPIN_END" gs:managed-name="End">
        <doc xml:space="preserve" filename="../gtk/gtkspinbutton.h" line="81">Go to the adjustments upper bound.</doc>
      </member>
      <member name="user_defined" value="6" c:identifier="GTK_SPIN_USER_DEFINED" glib:nick="user-defined" glib:name="GTK_SPIN_USER_DEFINED" gs:managed-name="UserDefined">
        <doc xml:space="preserve" filename="../gtk/gtkspinbutton.h" line="82">Change by a specified amount.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_spin_type_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="StackTransitionType" glib:type-name="GtkStackTransitionType" glib:get-type="gtk_stack_transition_type_get_type" c:type="GtkStackTransitionType" gs:managed-name="StackTransitionType">
      <doc xml:space="preserve" filename="../gtk/gtkstack.c" line="92">Possible transitions between pages in a `GtkStack` widget.

New values may be added to this enumeration over time.</doc>
      <member name="none" value="0" c:identifier="GTK_STACK_TRANSITION_TYPE_NONE" glib:nick="none" glib:name="GTK_STACK_TRANSITION_TYPE_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtkstack.c" line="94">No transition</doc>
      </member>
      <member name="crossfade" value="1" c:identifier="GTK_STACK_TRANSITION_TYPE_CROSSFADE" glib:nick="crossfade" glib:name="GTK_STACK_TRANSITION_TYPE_CROSSFADE" gs:managed-name="Crossfade">
        <doc xml:space="preserve" filename="../gtk/gtkstack.c" line="95">A cross-fade</doc>
      </member>
      <member name="slide_right" value="2" c:identifier="GTK_STACK_TRANSITION_TYPE_SLIDE_RIGHT" glib:nick="slide-right" glib:name="GTK_STACK_TRANSITION_TYPE_SLIDE_RIGHT" gs:managed-name="SlideRight">
        <doc xml:space="preserve" filename="../gtk/gtkstack.c" line="96">Slide from left to right</doc>
      </member>
      <member name="slide_left" value="3" c:identifier="GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT" glib:nick="slide-left" glib:name="GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT" gs:managed-name="SlideLeft">
        <doc xml:space="preserve" filename="../gtk/gtkstack.c" line="97">Slide from right to left</doc>
      </member>
      <member name="slide_up" value="4" c:identifier="GTK_STACK_TRANSITION_TYPE_SLIDE_UP" glib:nick="slide-up" glib:name="GTK_STACK_TRANSITION_TYPE_SLIDE_UP" gs:managed-name="SlideUp">
        <doc xml:space="preserve" filename="../gtk/gtkstack.c" line="98">Slide from bottom up</doc>
      </member>
      <member name="slide_down" value="5" c:identifier="GTK_STACK_TRANSITION_TYPE_SLIDE_DOWN" glib:nick="slide-down" glib:name="GTK_STACK_TRANSITION_TYPE_SLIDE_DOWN" gs:managed-name="SlideDown">
        <doc xml:space="preserve" filename="../gtk/gtkstack.c" line="99">Slide from top down</doc>
      </member>
      <member name="slide_left_right" value="6" c:identifier="GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT_RIGHT" glib:nick="slide-left-right" glib:name="GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT_RIGHT" gs:managed-name="SlideLeftRight">
        <doc xml:space="preserve" filename="../gtk/gtkstack.c" line="100">Slide from left or right according to the children order</doc>
      </member>
      <member name="slide_up_down" value="7" c:identifier="GTK_STACK_TRANSITION_TYPE_SLIDE_UP_DOWN" glib:nick="slide-up-down" glib:name="GTK_STACK_TRANSITION_TYPE_SLIDE_UP_DOWN" gs:managed-name="SlideUpDown">
        <doc xml:space="preserve" filename="../gtk/gtkstack.c" line="101">Slide from top down or bottom up according to the order</doc>
      </member>
      <member name="over_up" value="8" c:identifier="GTK_STACK_TRANSITION_TYPE_OVER_UP" glib:nick="over-up" glib:name="GTK_STACK_TRANSITION_TYPE_OVER_UP" gs:managed-name="OverUp">
        <doc xml:space="preserve" filename="../gtk/gtkstack.c" line="102">Cover the old page by sliding up</doc>
      </member>
      <member name="over_down" value="9" c:identifier="GTK_STACK_TRANSITION_TYPE_OVER_DOWN" glib:nick="over-down" glib:name="GTK_STACK_TRANSITION_TYPE_OVER_DOWN" gs:managed-name="OverDown">
        <doc xml:space="preserve" filename="../gtk/gtkstack.c" line="103">Cover the old page by sliding down</doc>
      </member>
      <member name="over_left" value="10" c:identifier="GTK_STACK_TRANSITION_TYPE_OVER_LEFT" glib:nick="over-left" glib:name="GTK_STACK_TRANSITION_TYPE_OVER_LEFT" gs:managed-name="OverLeft">
        <doc xml:space="preserve" filename="../gtk/gtkstack.c" line="104">Cover the old page by sliding to the left</doc>
      </member>
      <member name="over_right" value="11" c:identifier="GTK_STACK_TRANSITION_TYPE_OVER_RIGHT" glib:nick="over-right" glib:name="GTK_STACK_TRANSITION_TYPE_OVER_RIGHT" gs:managed-name="OverRight">
        <doc xml:space="preserve" filename="../gtk/gtkstack.c" line="105">Cover the old page by sliding to the right</doc>
      </member>
      <member name="under_up" value="12" c:identifier="GTK_STACK_TRANSITION_TYPE_UNDER_UP" glib:nick="under-up" glib:name="GTK_STACK_TRANSITION_TYPE_UNDER_UP" gs:managed-name="UnderUp">
        <doc xml:space="preserve" filename="../gtk/gtkstack.c" line="106">Uncover the new page by sliding up</doc>
      </member>
      <member name="under_down" value="13" c:identifier="GTK_STACK_TRANSITION_TYPE_UNDER_DOWN" glib:nick="under-down" glib:name="GTK_STACK_TRANSITION_TYPE_UNDER_DOWN" gs:managed-name="UnderDown">
        <doc xml:space="preserve" filename="../gtk/gtkstack.c" line="107">Uncover the new page by sliding down</doc>
      </member>
      <member name="under_left" value="14" c:identifier="GTK_STACK_TRANSITION_TYPE_UNDER_LEFT" glib:nick="under-left" glib:name="GTK_STACK_TRANSITION_TYPE_UNDER_LEFT" gs:managed-name="UnderLeft">
        <doc xml:space="preserve" filename="../gtk/gtkstack.c" line="108">Uncover the new page by sliding to the left</doc>
      </member>
      <member name="under_right" value="15" c:identifier="GTK_STACK_TRANSITION_TYPE_UNDER_RIGHT" glib:nick="under-right" glib:name="GTK_STACK_TRANSITION_TYPE_UNDER_RIGHT" gs:managed-name="UnderRight">
        <doc xml:space="preserve" filename="../gtk/gtkstack.c" line="109">Uncover the new page by sliding to the right</doc>
      </member>
      <member name="over_up_down" value="16" c:identifier="GTK_STACK_TRANSITION_TYPE_OVER_UP_DOWN" glib:nick="over-up-down" glib:name="GTK_STACK_TRANSITION_TYPE_OVER_UP_DOWN" gs:managed-name="OverUpDown">
        <doc xml:space="preserve" filename="../gtk/gtkstack.c" line="110">Cover the old page sliding up or uncover the new page sliding down, according to order</doc>
      </member>
      <member name="over_down_up" value="17" c:identifier="GTK_STACK_TRANSITION_TYPE_OVER_DOWN_UP" glib:nick="over-down-up" glib:name="GTK_STACK_TRANSITION_TYPE_OVER_DOWN_UP" gs:managed-name="OverDownUp">
        <doc xml:space="preserve" filename="../gtk/gtkstack.c" line="111">Cover the old page sliding down or uncover the new page sliding up, according to order</doc>
      </member>
      <member name="over_left_right" value="18" c:identifier="GTK_STACK_TRANSITION_TYPE_OVER_LEFT_RIGHT" glib:nick="over-left-right" glib:name="GTK_STACK_TRANSITION_TYPE_OVER_LEFT_RIGHT" gs:managed-name="OverLeftRight">
        <doc xml:space="preserve" filename="../gtk/gtkstack.c" line="112">Cover the old page sliding left or uncover the new page sliding right, according to order</doc>
      </member>
      <member name="over_right_left" value="19" c:identifier="GTK_STACK_TRANSITION_TYPE_OVER_RIGHT_LEFT" glib:nick="over-right-left" glib:name="GTK_STACK_TRANSITION_TYPE_OVER_RIGHT_LEFT" gs:managed-name="OverRightLeft">
        <doc xml:space="preserve" filename="../gtk/gtkstack.c" line="113">Cover the old page sliding right or uncover the new page sliding left, according to order</doc>
      </member>
      <member name="rotate_left" value="20" c:identifier="GTK_STACK_TRANSITION_TYPE_ROTATE_LEFT" glib:nick="rotate-left" glib:name="GTK_STACK_TRANSITION_TYPE_ROTATE_LEFT" gs:managed-name="RotateLeft">
        <doc xml:space="preserve" filename="../gtk/gtkstack.c" line="114">Pretend the pages are sides of a cube and rotate that cube to the left</doc>
      </member>
      <member name="rotate_right" value="21" c:identifier="GTK_STACK_TRANSITION_TYPE_ROTATE_RIGHT" glib:nick="rotate-right" glib:name="GTK_STACK_TRANSITION_TYPE_ROTATE_RIGHT" gs:managed-name="RotateRight">
        <doc xml:space="preserve" filename="../gtk/gtkstack.c" line="115">Pretend the pages are sides of a cube and rotate that cube to the right</doc>
      </member>
      <member name="rotate_left_right" value="22" c:identifier="GTK_STACK_TRANSITION_TYPE_ROTATE_LEFT_RIGHT" glib:nick="rotate-left-right" glib:name="GTK_STACK_TRANSITION_TYPE_ROTATE_LEFT_RIGHT" gs:managed-name="RotateLeftRight">
        <doc xml:space="preserve" filename="../gtk/gtkstack.c" line="116">Pretend the pages are sides of a cube and rotate that cube to the left or right according to the children order</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_stack_transition_type_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <bitfield name="StateFlags" glib:type-name="GtkStateFlags" glib:get-type="gtk_state_flags_get_type" c:type="GtkStateFlags" gs:managed-name="StateFlags">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="738">Describes a widget state.

Widget states are used to match the widget against CSS pseudo-classes.
Note that GTK extends the regular CSS classes and sometimes uses
different names.</doc>
      <member name="normal" value="0" c:identifier="GTK_STATE_FLAG_NORMAL" glib:nick="normal" glib:name="GTK_STATE_FLAG_NORMAL" gs:managed-name="Normal">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="740">State during normal operation</doc>
      </member>
      <member name="active" value="1" c:identifier="GTK_STATE_FLAG_ACTIVE" glib:nick="active" glib:name="GTK_STATE_FLAG_ACTIVE" gs:managed-name="Active">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="741">Widget is active</doc>
      </member>
      <member name="prelight" value="2" c:identifier="GTK_STATE_FLAG_PRELIGHT" glib:nick="prelight" glib:name="GTK_STATE_FLAG_PRELIGHT" gs:managed-name="Prelight">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="742">Widget has a mouse pointer over it</doc>
      </member>
      <member name="selected" value="4" c:identifier="GTK_STATE_FLAG_SELECTED" glib:nick="selected" glib:name="GTK_STATE_FLAG_SELECTED" gs:managed-name="Selected">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="743">Widget is selected</doc>
      </member>
      <member name="insensitive" value="8" c:identifier="GTK_STATE_FLAG_INSENSITIVE" glib:nick="insensitive" glib:name="GTK_STATE_FLAG_INSENSITIVE" gs:managed-name="Insensitive">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="744">Widget is insensitive</doc>
      </member>
      <member name="inconsistent" value="16" c:identifier="GTK_STATE_FLAG_INCONSISTENT" glib:nick="inconsistent" glib:name="GTK_STATE_FLAG_INCONSISTENT" gs:managed-name="Inconsistent">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="745">Widget is inconsistent</doc>
      </member>
      <member name="focused" value="32" c:identifier="GTK_STATE_FLAG_FOCUSED" glib:nick="focused" glib:name="GTK_STATE_FLAG_FOCUSED" gs:managed-name="Focused">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="746">Widget has the keyboard focus</doc>
      </member>
      <member name="backdrop" value="64" c:identifier="GTK_STATE_FLAG_BACKDROP" glib:nick="backdrop" glib:name="GTK_STATE_FLAG_BACKDROP" gs:managed-name="Backdrop">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="747">Widget is in a background toplevel window</doc>
      </member>
      <member name="dir_ltr" value="128" c:identifier="GTK_STATE_FLAG_DIR_LTR" glib:nick="dir-ltr" glib:name="GTK_STATE_FLAG_DIR_LTR" gs:managed-name="DirLtr">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="748">Widget is in left-to-right text direction</doc>
      </member>
      <member name="dir_rtl" value="256" c:identifier="GTK_STATE_FLAG_DIR_RTL" glib:nick="dir-rtl" glib:name="GTK_STATE_FLAG_DIR_RTL" gs:managed-name="DirRtl">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="749">Widget is in right-to-left text direction</doc>
      </member>
      <member name="link" value="512" c:identifier="GTK_STATE_FLAG_LINK" glib:nick="link" glib:name="GTK_STATE_FLAG_LINK" gs:managed-name="Link">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="750">Widget is a link</doc>
      </member>
      <member name="visited" value="1024" c:identifier="GTK_STATE_FLAG_VISITED" glib:nick="visited" glib:name="GTK_STATE_FLAG_VISITED" gs:managed-name="Visited">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="751">The location the widget points to has already been visited</doc>
      </member>
      <member name="checked" value="2048" c:identifier="GTK_STATE_FLAG_CHECKED" glib:nick="checked" glib:name="GTK_STATE_FLAG_CHECKED" gs:managed-name="Checked">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="752">Widget is checked</doc>
      </member>
      <member name="drop_active" value="4096" c:identifier="GTK_STATE_FLAG_DROP_ACTIVE" glib:nick="drop-active" glib:name="GTK_STATE_FLAG_DROP_ACTIVE" gs:managed-name="DropActive">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="753">Widget is highlighted as a drop target for DND</doc>
      </member>
      <member name="focus_visible" value="8192" c:identifier="GTK_STATE_FLAG_FOCUS_VISIBLE" glib:nick="focus-visible" glib:name="GTK_STATE_FLAG_FOCUS_VISIBLE" gs:managed-name="FocusVisible">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="754">Widget has the visible focus</doc>
      </member>
      <member name="focus_within" value="16384" c:identifier="GTK_STATE_FLAG_FOCUS_WITHIN" glib:nick="focus-within" glib:name="GTK_STATE_FLAG_FOCUS_WITHIN" gs:managed-name="FocusWithin">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="755">Widget contains the keyboard focus</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_state_flags_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </bitfield>
    <enumeration name="StringFilterMatchMode" glib:type-name="GtkStringFilterMatchMode" glib:get-type="gtk_string_filter_match_mode_get_type" c:type="GtkStringFilterMatchMode" gs:managed-name="StringFilterMatchMode">
      <doc xml:space="preserve" filename="../gtk/gtkstringfilter.h" line="32">Specifies how search strings are matched inside text.</doc>
      <member name="exact" value="0" c:identifier="GTK_STRING_FILTER_MATCH_MODE_EXACT" glib:nick="exact" glib:name="GTK_STRING_FILTER_MATCH_MODE_EXACT" gs:managed-name="Exact">
        <doc xml:space="preserve" filename="../gtk/gtkstringfilter.h" line="34">The search string and
  text must match exactly.</doc>
      </member>
      <member name="substring" value="1" c:identifier="GTK_STRING_FILTER_MATCH_MODE_SUBSTRING" glib:nick="substring" glib:name="GTK_STRING_FILTER_MATCH_MODE_SUBSTRING" gs:managed-name="Substring">
        <doc xml:space="preserve" filename="../gtk/gtkstringfilter.h" line="36">The search string
  must be contained as a substring inside the text.</doc>
      </member>
      <member name="prefix" value="2" c:identifier="GTK_STRING_FILTER_MATCH_MODE_PREFIX" glib:nick="prefix" glib:name="GTK_STRING_FILTER_MATCH_MODE_PREFIX" gs:managed-name="Prefix">
        <doc xml:space="preserve" filename="../gtk/gtkstringfilter.h" line="38">The text must begin
  with the search string.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_string_filter_match_mode_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <bitfield name="StyleContextPrintFlags" glib:type-name="GtkStyleContextPrintFlags" glib:get-type="gtk_style_context_print_flags_get_type" c:type="GtkStyleContextPrintFlags" gs:managed-name="StyleContextPrintFlags">
      <doc xml:space="preserve" filename="../gtk/gtkstylecontext.c" line="1220">Flags that modify the behavior of gtk_style_context_to_string().

New values may be added to this enumeration.</doc>
      <member name="none" value="0" c:identifier="GTK_STYLE_CONTEXT_PRINT_NONE" glib:nick="none" glib:name="GTK_STYLE_CONTEXT_PRINT_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtkstylecontext.c" line="1222">Default value.</doc>
      </member>
      <member name="recurse" value="1" c:identifier="GTK_STYLE_CONTEXT_PRINT_RECURSE" glib:nick="recurse" glib:name="GTK_STYLE_CONTEXT_PRINT_RECURSE" gs:managed-name="Recurse">
        <doc xml:space="preserve" filename="../gtk/gtkstylecontext.c" line="1223">Print the entire tree of
  CSS nodes starting at the style context's node</doc>
      </member>
      <member name="show_style" value="2" c:identifier="GTK_STYLE_CONTEXT_PRINT_SHOW_STYLE" glib:nick="show-style" glib:name="GTK_STYLE_CONTEXT_PRINT_SHOW_STYLE" gs:managed-name="ShowStyle">
        <doc xml:space="preserve" filename="../gtk/gtkstylecontext.c" line="1225">Show the values of the
  CSS properties for each node</doc>
      </member>
      <member name="show_change" value="4" c:identifier="GTK_STYLE_CONTEXT_PRINT_SHOW_CHANGE" glib:nick="show-change" glib:name="GTK_STYLE_CONTEXT_PRINT_SHOW_CHANGE" gs:managed-name="ShowChange">
        <doc xml:space="preserve" filename="../gtk/gtkstylecontext.c" line="1227">Show information about
  what changes affect the styles</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_style_context_print_flags_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </bitfield>
    <enumeration name="SystemSetting" glib:type-name="GtkSystemSetting" glib:get-type="gtk_system_setting_get_type" c:type="GtkSystemSetting" gs:managed-name="SystemSetting">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1126">Values that can be passed to the [vfunc@Gtk.Widget.system_setting_changed]
vfunc.

The values indicate which system setting has changed.
Widgets may need to drop caches, or react otherwise.

Most of the values correspond to [class@Settings] properties.

More values may be added over time.</doc>
      <member name="dpi" value="0" c:identifier="GTK_SYSTEM_SETTING_DPI" glib:nick="dpi" glib:name="GTK_SYSTEM_SETTING_DPI" gs:managed-name="Dpi">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1128">the [property@Gtk.Settings:gtk-xft-dpi] setting has changed</doc>
      </member>
      <member name="font_name" value="1" c:identifier="GTK_SYSTEM_SETTING_FONT_NAME" glib:nick="font-name" glib:name="GTK_SYSTEM_SETTING_FONT_NAME" gs:managed-name="FontName">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1129">The [property@Gtk.Settings:gtk-font-name] setting has changed</doc>
      </member>
      <member name="font_config" value="2" c:identifier="GTK_SYSTEM_SETTING_FONT_CONFIG" glib:nick="font-config" glib:name="GTK_SYSTEM_SETTING_FONT_CONFIG" gs:managed-name="FontConfig">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1130">The font configuration has changed in a way that
  requires text to be redrawn. This can be any of the
  [property@Gtk.Settings:gtk-xft-antialias],
  [property@Gtk.Settings:gtk-xft-hinting],
  [property@Gtk.Settings:gtk-xft-hintstyle],
  [property@Gtk.Settings:gtk-xft-rgba] or
  [property@Gtk.Settings:gtk-fontconfig-timestamp] settings</doc>
      </member>
      <member name="display" value="3" c:identifier="GTK_SYSTEM_SETTING_DISPLAY" glib:nick="display" glib:name="GTK_SYSTEM_SETTING_DISPLAY" gs:managed-name="Display">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1137">The display has changed</doc>
      </member>
      <member name="icon_theme" value="4" c:identifier="GTK_SYSTEM_SETTING_ICON_THEME" glib:nick="icon-theme" glib:name="GTK_SYSTEM_SETTING_ICON_THEME" gs:managed-name="IconTheme">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="1138">The icon theme has changed in a way that requires
  icons to be looked up again</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_system_setting_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="TextDirection" glib:type-name="GtkTextDirection" glib:get-type="gtk_text_direction_get_type" c:type="GtkTextDirection" gs:managed-name="TextDirection">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="207">Reading directions for text.</doc>
      <member name="none" value="0" c:identifier="GTK_TEXT_DIR_NONE" glib:nick="none" glib:name="GTK_TEXT_DIR_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="209">No direction.</doc>
      </member>
      <member name="ltr" value="1" c:identifier="GTK_TEXT_DIR_LTR" glib:nick="ltr" glib:name="GTK_TEXT_DIR_LTR" gs:managed-name="Ltr">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="210">Left to right text direction.</doc>
      </member>
      <member name="rtl" value="2" c:identifier="GTK_TEXT_DIR_RTL" glib:nick="rtl" glib:name="GTK_TEXT_DIR_RTL" gs:managed-name="Rtl">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="211">Right to left text direction.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_text_direction_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="TextExtendSelection" glib:type-name="GtkTextExtendSelection" glib:get-type="gtk_text_extend_selection_get_type" c:type="GtkTextExtendSelection" gs:managed-name="TextExtendSelection">
      <doc xml:space="preserve" filename="../gtk/gtktextview.h" line="80">Granularity types that extend the text selection. Use the
`GtkTextView::extend-selection` signal to customize the selection.</doc>
      <member name="word" value="0" c:identifier="GTK_TEXT_EXTEND_SELECTION_WORD" glib:nick="word" glib:name="GTK_TEXT_EXTEND_SELECTION_WORD" gs:managed-name="Word">
        <doc xml:space="preserve" filename="../gtk/gtktextview.h" line="82">Selects the current word. It is triggered by
  a double-click for example.</doc>
      </member>
      <member name="line" value="1" c:identifier="GTK_TEXT_EXTEND_SELECTION_LINE" glib:nick="line" glib:name="GTK_TEXT_EXTEND_SELECTION_LINE" gs:managed-name="Line">
        <doc xml:space="preserve" filename="../gtk/gtktextview.h" line="84">Selects the current line. It is triggered by
  a triple-click for example.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_text_extend_selection_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <bitfield name="TextSearchFlags" glib:type-name="GtkTextSearchFlags" glib:get-type="gtk_text_search_flags_get_type" c:type="GtkTextSearchFlags" gs:managed-name="TextSearchFlags">
      <doc xml:space="preserve" filename="../gtk/gtktextiter.h" line="37">Flags affecting how a search is done.

If neither %GTK_TEXT_SEARCH_VISIBLE_ONLY nor %GTK_TEXT_SEARCH_TEXT_ONLY are
enabled, the match must be exact; the special 0xFFFC character will match
embedded paintables or child widgets.</doc>
      <member name="visible_only" value="1" c:identifier="GTK_TEXT_SEARCH_VISIBLE_ONLY" glib:nick="visible-only" glib:name="GTK_TEXT_SEARCH_VISIBLE_ONLY" gs:managed-name="VisibleOnly">
        <doc xml:space="preserve" filename="../gtk/gtktextiter.h" line="39">Search only visible data. A search match may
have invisible text interspersed.</doc>
      </member>
      <member name="text_only" value="2" c:identifier="GTK_TEXT_SEARCH_TEXT_ONLY" glib:nick="text-only" glib:name="GTK_TEXT_SEARCH_TEXT_ONLY" gs:managed-name="TextOnly">
        <doc xml:space="preserve" filename="../gtk/gtktextiter.h" line="41">Search only text. A match may have paintables or
child widgets mixed inside the matched range.</doc>
      </member>
      <member name="case_insensitive" value="4" c:identifier="GTK_TEXT_SEARCH_CASE_INSENSITIVE" glib:nick="case-insensitive" glib:name="GTK_TEXT_SEARCH_CASE_INSENSITIVE" gs:managed-name="CaseInsensitive">
        <doc xml:space="preserve" filename="../gtk/gtktextiter.h" line="43">The text will be matched regardless of
what case it is in.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_text_search_flags_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </bitfield>
    <enumeration name="TextViewLayer" glib:type-name="GtkTextViewLayer" glib:get-type="gtk_text_view_layer_get_type" c:type="GtkTextViewLayer" gs:managed-name="TextViewLayer">
      <doc xml:space="preserve" filename="../gtk/gtktextview.h" line="66">Used to reference the layers of `GtkTextView` for the purpose of customized
drawing with the ::snapshot_layer vfunc.</doc>
      <member name="below_text" value="0" c:identifier="GTK_TEXT_VIEW_LAYER_BELOW_TEXT" glib:nick="below-text" glib:name="GTK_TEXT_VIEW_LAYER_BELOW_TEXT" gs:managed-name="BelowText">
        <doc xml:space="preserve" filename="../gtk/gtktextview.h" line="68">The layer rendered below the text (but above the background).</doc>
      </member>
      <member name="above_text" value="1" c:identifier="GTK_TEXT_VIEW_LAYER_ABOVE_TEXT" glib:nick="above-text" glib:name="GTK_TEXT_VIEW_LAYER_ABOVE_TEXT" gs:managed-name="AboveText">
        <doc xml:space="preserve" filename="../gtk/gtktextview.h" line="69">The layer rendered above the text.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_text_view_layer_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="TextWindowType" glib:type-name="GtkTextWindowType" glib:get-type="gtk_text_window_type_get_type" c:type="GtkTextWindowType" gs:managed-name="TextWindowType">
      <doc xml:space="preserve" filename="../gtk/gtktextview.h" line="45">Used to reference the parts of `GtkTextView`.</doc>
      <member name="widget" value="1" c:identifier="GTK_TEXT_WINDOW_WIDGET" glib:nick="widget" glib:name="GTK_TEXT_WINDOW_WIDGET" gs:managed-name="Widget">
        <doc xml:space="preserve" filename="../gtk/gtktextview.h" line="47">Window that floats over scrolling areas.</doc>
      </member>
      <member name="text" value="2" c:identifier="GTK_TEXT_WINDOW_TEXT" glib:nick="text" glib:name="GTK_TEXT_WINDOW_TEXT" gs:managed-name="Text">
        <doc xml:space="preserve" filename="../gtk/gtktextview.h" line="48">Scrollable text window.</doc>
      </member>
      <member name="left" value="3" c:identifier="GTK_TEXT_WINDOW_LEFT" glib:nick="left" glib:name="GTK_TEXT_WINDOW_LEFT" gs:managed-name="Left">
        <doc xml:space="preserve" filename="../gtk/gtktextview.h" line="49">Left side border window.</doc>
      </member>
      <member name="right" value="4" c:identifier="GTK_TEXT_WINDOW_RIGHT" glib:nick="right" glib:name="GTK_TEXT_WINDOW_RIGHT" gs:managed-name="Right">
        <doc xml:space="preserve" filename="../gtk/gtktextview.h" line="50">Right side border window.</doc>
      </member>
      <member name="top" value="5" c:identifier="GTK_TEXT_WINDOW_TOP" glib:nick="top" glib:name="GTK_TEXT_WINDOW_TOP" gs:managed-name="Top">
        <doc xml:space="preserve" filename="../gtk/gtktextview.h" line="51">Top border window.</doc>
      </member>
      <member name="bottom" value="6" c:identifier="GTK_TEXT_WINDOW_BOTTOM" glib:nick="bottom" glib:name="GTK_TEXT_WINDOW_BOTTOM" gs:managed-name="Bottom">
        <doc xml:space="preserve" filename="../gtk/gtktextview.h" line="52">Bottom border window.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_text_window_type_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <bitfield name="TreeModelFlags" glib:type-name="GtkTreeModelFlags" glib:get-type="gtk_tree_model_flags_get_type" c:type="GtkTreeModelFlags" gs:managed-name="TreeModelFlags">
      <doc xml:space="preserve" filename="../gtk/gtktreemodel.h" line="60">These flags indicate various properties of a `GtkTreeModel`.

They are returned by [method@Gtk.TreeModel.get_flags], and must be
static for the lifetime of the object. A more complete description
of %GTK_TREE_MODEL_ITERS_PERSIST can be found in the overview of
this section.</doc>
      <member name="iters_persist" value="1" c:identifier="GTK_TREE_MODEL_ITERS_PERSIST" glib:nick="iters-persist" glib:name="GTK_TREE_MODEL_ITERS_PERSIST" gs:managed-name="ItersPersist">
        <doc xml:space="preserve" filename="../gtk/gtktreemodel.h" line="62">iterators survive all signals
  emitted by the tree</doc>
      </member>
      <member name="list_only" value="2" c:identifier="GTK_TREE_MODEL_LIST_ONLY" glib:nick="list-only" glib:name="GTK_TREE_MODEL_LIST_ONLY" gs:managed-name="ListOnly">
        <doc xml:space="preserve" filename="../gtk/gtktreemodel.h" line="64">the model is a list only, and never
  has children</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_tree_model_flags_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </bitfield>
    <enumeration name="TreeViewColumnSizing" glib:type-name="GtkTreeViewColumnSizing" glib:get-type="gtk_tree_view_column_sizing_get_type" c:type="GtkTreeViewColumnSizing" gs:managed-name="TreeViewColumnSizing">
      <doc xml:space="preserve" filename="../gtk/gtktreeviewcolumn.h" line="40">The sizing method the column uses to determine its width.  Please note
that %GTK_TREE_VIEW_COLUMN_AUTOSIZE are inefficient for large views, and
can make columns appear choppy.</doc>
      <member name="grow_only" value="0" c:identifier="GTK_TREE_VIEW_COLUMN_GROW_ONLY" glib:nick="grow-only" glib:name="GTK_TREE_VIEW_COLUMN_GROW_ONLY" gs:managed-name="GrowOnly">
        <doc xml:space="preserve" filename="../gtk/gtktreeviewcolumn.h" line="42">Columns only get bigger in reaction to changes in the model</doc>
      </member>
      <member name="autosize" value="1" c:identifier="GTK_TREE_VIEW_COLUMN_AUTOSIZE" glib:nick="autosize" glib:name="GTK_TREE_VIEW_COLUMN_AUTOSIZE" gs:managed-name="Autosize">
        <doc xml:space="preserve" filename="../gtk/gtktreeviewcolumn.h" line="43">Columns resize to be the optimal size every time the model changes.</doc>
      </member>
      <member name="fixed" value="2" c:identifier="GTK_TREE_VIEW_COLUMN_FIXED" glib:nick="fixed" glib:name="GTK_TREE_VIEW_COLUMN_FIXED" gs:managed-name="Fixed">
        <doc xml:space="preserve" filename="../gtk/gtktreeviewcolumn.h" line="44">Columns are a fixed numbers of pixels wide.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_tree_view_column_sizing_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="TreeViewDropPosition" glib:type-name="GtkTreeViewDropPosition" glib:get-type="gtk_tree_view_drop_position_get_type" c:type="GtkTreeViewDropPosition" gs:managed-name="TreeViewDropPosition">
      <doc xml:space="preserve" filename="../gtk/gtktreeview.h" line="32">An enum for determining where a dropped row goes.</doc>
      <member name="before" value="0" c:identifier="GTK_TREE_VIEW_DROP_BEFORE" glib:nick="before" glib:name="GTK_TREE_VIEW_DROP_BEFORE" gs:managed-name="Before">
        <doc xml:space="preserve" filename="../gtk/gtktreeview.h" line="34">dropped row is inserted before</doc>
      </member>
      <member name="after" value="1" c:identifier="GTK_TREE_VIEW_DROP_AFTER" glib:nick="after" glib:name="GTK_TREE_VIEW_DROP_AFTER" gs:managed-name="After">
        <doc xml:space="preserve" filename="../gtk/gtktreeview.h" line="35">dropped row is inserted after</doc>
      </member>
      <member name="into_or_before" value="2" c:identifier="GTK_TREE_VIEW_DROP_INTO_OR_BEFORE" glib:nick="into-or-before" glib:name="GTK_TREE_VIEW_DROP_INTO_OR_BEFORE" gs:managed-name="IntoOrBefore">
        <doc xml:space="preserve" filename="../gtk/gtktreeview.h" line="36">dropped row becomes a child or is inserted before</doc>
      </member>
      <member name="into_or_after" value="3" c:identifier="GTK_TREE_VIEW_DROP_INTO_OR_AFTER" glib:nick="into-or-after" glib:name="GTK_TREE_VIEW_DROP_INTO_OR_AFTER" gs:managed-name="IntoOrAfter">
        <doc xml:space="preserve" filename="../gtk/gtktreeview.h" line="37">dropped row becomes a child or is inserted after</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_tree_view_drop_position_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="TreeViewGridLines" glib:type-name="GtkTreeViewGridLines" glib:get-type="gtk_tree_view_grid_lines_get_type" c:type="GtkTreeViewGridLines" gs:managed-name="TreeViewGridLines">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="674">Used to indicate which grid lines to draw in a tree view.</doc>
      <member name="none" value="0" c:identifier="GTK_TREE_VIEW_GRID_LINES_NONE" glib:nick="none" glib:name="GTK_TREE_VIEW_GRID_LINES_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="676">No grid lines.</doc>
      </member>
      <member name="horizontal" value="1" c:identifier="GTK_TREE_VIEW_GRID_LINES_HORIZONTAL" glib:nick="horizontal" glib:name="GTK_TREE_VIEW_GRID_LINES_HORIZONTAL" gs:managed-name="Horizontal">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="677">Horizontal grid lines.</doc>
      </member>
      <member name="vertical" value="2" c:identifier="GTK_TREE_VIEW_GRID_LINES_VERTICAL" glib:nick="vertical" glib:name="GTK_TREE_VIEW_GRID_LINES_VERTICAL" gs:managed-name="Vertical">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="678">Vertical grid lines.</doc>
      </member>
      <member name="both" value="3" c:identifier="GTK_TREE_VIEW_GRID_LINES_BOTH" glib:nick="both" glib:name="GTK_TREE_VIEW_GRID_LINES_BOTH" gs:managed-name="Both">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="679">Horizontal and vertical grid lines.</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_tree_view_grid_lines_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="Unit" glib:type-name="GtkUnit" glib:get-type="gtk_unit_get_type" c:type="GtkUnit" gs:managed-name="Unit">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="655">See also gtk_print_settings_set_paper_width().</doc>
      <member name="none" value="0" c:identifier="GTK_UNIT_NONE" glib:nick="none" glib:name="GTK_UNIT_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="657">No units.</doc>
      </member>
      <member name="points" value="1" c:identifier="GTK_UNIT_POINTS" glib:nick="points" glib:name="GTK_UNIT_POINTS" gs:managed-name="Points">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="658">Dimensions in points.</doc>
      </member>
      <member name="inch" value="2" c:identifier="GTK_UNIT_INCH" glib:nick="inch" glib:name="GTK_UNIT_INCH" gs:managed-name="Inch">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="659">Dimensions in inches.</doc>
      </member>
      <member name="mm" value="3" c:identifier="GTK_UNIT_MM" glib:nick="mm" glib:name="GTK_UNIT_MM" gs:managed-name="Mm">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="660">Dimensions in millimeters</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_unit_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <enumeration name="WrapMode" glib:type-name="GtkWrapMode" glib:get-type="gtk_wrap_mode_get_type" c:type="GtkWrapMode" gs:managed-name="WrapMode">
      <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="471">Describes a type of line wrapping.</doc>
      <member name="none" value="0" c:identifier="GTK_WRAP_NONE" glib:nick="none" glib:name="GTK_WRAP_NONE" gs:managed-name="None">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="473">do not wrap lines; just make the text area wider</doc>
      </member>
      <member name="char" value="1" c:identifier="GTK_WRAP_CHAR" glib:nick="char" glib:name="GTK_WRAP_CHAR" gs:managed-name="Char">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="474">wrap text, breaking lines anywhere the cursor can
  appear (between characters, usually - if you want to be technical,
  between graphemes, see pango_get_log_attrs())</doc>
      </member>
      <member name="word" value="2" c:identifier="GTK_WRAP_WORD" glib:nick="word" glib:name="GTK_WRAP_WORD" gs:managed-name="Word">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="477">wrap text, breaking lines in between words</doc>
      </member>
      <member name="word_char" value="3" c:identifier="GTK_WRAP_WORD_CHAR" glib:nick="word-char" glib:name="GTK_WRAP_WORD_CHAR" gs:managed-name="WordChar">
        <doc xml:space="preserve" filename="../gtk/gtkenums.h" line="478">wrap text, breaking lines in between words, or if
  that is not enough, also between graphemes</doc>
      </member>
      <function name="get_g_type" gs:pinvoke-only="1" c:identifier="gtk_wrap_mode_get_type" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetGType">
        <return-value transfer-ownership="full" gs:managed-name="ret" direction="in">
          <type name="GType" c:type="GType" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </enumeration>
    <gs:static-class name="Initialize" gs:managed-name="Initialize">
      <function name="disable_setlocale" c:identifier="gtk_disable_setlocale" gs:dll-name="gtk-4.1" gs:managed-name="DisableSetlocale">
        <doc xml:space="preserve" filename="../gtk/gtkmain.c" line="250">Prevents [id@gtk_init] and [id@gtk_init_check] from automatically calling
`setlocale (LC_ALL, "")`.

You would want to use this function if you wanted to set the locale for
your program to something other than the user’s locale, or if
you wanted to set different values for different locale categories.

Most programs should not need to call this function.</doc>
        <source-position filename="../gtk/gtkmain.h" line="85" />
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <type name="none" c:type="void" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
      <function name="init" c:identifier="gtk_init" gs:dll-name="gtk-4.1" gs:managed-name="Init">
        <doc xml:space="preserve" filename="../gtk/gtkmain.c" line="621">Call this function before using any other GTK functions in your GUI
applications.  It will initialize everything needed to operate the
toolkit.

If you are using `GtkApplication`, you don't have to call gtk_init()
or gtk_init_check(); the `GApplication::startup` handler
does it for you.

This function will terminate your program if it was unable to
initialize the windowing system for some reason. If you want
your program to fall back to a textual interface you want to
call gtk_init_check() instead.

GTK calls `signal (SIGPIPE, SIG_IGN)`
during initialization, to ignore SIGPIPE signals, since these are
almost never wanted in graphical applications. If you do need to
handle SIGPIPE for some reason, reset the handler after gtk_init(),
but notice that other libraries (e.g. libdbus or gvfs) might do
similar things.</doc>
        <source-position filename="../gtk/gtkmain.h" line="57" />
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <type name="none" c:type="void" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
      <function name="try_init" c:identifier="gtk_init_check" gs:dll-name="gtk-4.1" gs:managed-name="TryInit">
        <doc xml:space="preserve" filename="../gtk/gtkmain.c" line="576">This function does the same work as gtk_init() with only a single
change: It does not terminate the program if the windowing system
can’t be initialized. Instead it returns %FALSE on failure.

This way the application can fall back to some other means of
communication with the user - for example a curses or command line
interface.</doc>
        <source-position filename="../gtk/gtkmain.h" line="60" />
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <doc xml:space="preserve" filename="../gtk/gtkmain.c" line="587">%TRUE if the windowing system has been successfully
  initialized, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
      <gs:managed-property name="is_initialized" gs:dll-name="gtk-4.1" gs:managed-name="IsInitialized">
        <doc xml:space="preserve" filename="../gtk/gtkmain.c" line="719">Use this function to check if GTK has been initialized with gtk_init()
or gtk_init_check().</doc>
        <source-position filename="../gtk/gtkmain.h" line="63" />
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <doc xml:space="preserve" filename="../gtk/gtkmain.c" line="725">the initialization status</doc>
          <type name="gboolean" c:type="gboolean" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </gs:managed-property>
      <function name="is_initialized" c:identifier="gtk_is_initialized" gs:dll-name="gtk-4.1" gs:managed-name="GetIsInitialized" gs:property-getter-for="IsInitialized" gs:access-modifiers="private">
        <doc xml:space="preserve" filename="../gtk/gtkmain.c" line="719">Use this function to check if GTK has been initialized with gtk_init()
or gtk_init_check().</doc>
        <source-position filename="../gtk/gtkmain.h" line="63" />
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <doc xml:space="preserve" filename="../gtk/gtkmain.c" line="725">the initialization status</doc>
          <type name="gboolean" c:type="gboolean" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </gs:static-class>
    <gs:static-class name="Version" gs:managed-name="Version">
      <constant name="COMPILE_TIME_BINARY_AGE" value="604" c:type="GTK_BINARY_AGE" gs:managed-name="CompileTimeBinaryAge">
        <doc xml:space="preserve" filename="../gtk/gtkversion.h" line="63">Like [func@get_binary_age], but from the headers used at
application compile time, rather than from the library linked
against at application run time.</doc>
        <source-position filename="../gtk/gtkversion.h" line="70" />
        <type name="gint" c:type="gint" />
      </constant>
      <constant name="COMPILE_TIME_INTERFACE_AGE" value="4" c:type="GTK_INTERFACE_AGE" gs:managed-name="CompileTimeInterfaceAge">
        <doc xml:space="preserve" filename="../gtk/gtkversion.h" line="72">Like [func@get_interface_age], but from the headers used at
application compile time, rather than from the library linked
against at application run time.</doc>
        <source-position filename="../gtk/gtkversion.h" line="79" />
        <type name="gint" c:type="gint" />
      </constant>
      <constant name="MAJOR_VERSION" value="4" c:type="GTK_MAJOR_VERSION" gs:access-modifiers="private" gs:managed-name="majorVersion">
        <doc xml:space="preserve" filename="../gtk/gtkversion.h" line="36">Like [func@get_major_version], but from the headers used at
application compile time, rather than from the library linked
against at application run time.</doc>
        <source-position filename="../gtk/gtkversion.h" line="43" />
        <type name="gint" c:type="gint" />
      </constant>
      <constant name="MICRO_VERSION" value="4" c:type="GTK_MICRO_VERSION" gs:access-modifiers="private" gs:managed-name="microVersion">
        <doc xml:space="preserve" filename="../gtk/gtkversion.h" line="54">Like [func@get_micro_version], but from the headers used at
application compile time, rather than from the library linked
against at application run time.</doc>
        <source-position filename="../gtk/gtkversion.h" line="61" />
        <type name="gint" c:type="gint" />
      </constant>
      <constant name="MINOR_VERSION" value="6" c:type="GTK_MINOR_VERSION" gs:access-modifiers="private" gs:managed-name="minorVersion">
        <doc xml:space="preserve" filename="../gtk/gtkversion.h" line="45">Like [func@get_minor_version], but from the headers used at
application compile time, rather than from the library linked
against at application run time.</doc>
        <source-position filename="../gtk/gtkversion.h" line="52" />
        <type name="gint" c:type="gint" />
      </constant>
      <function name="check" c:identifier="gtk_check_version" gs:dll-name="gtk-4.1" gs:managed-name="Check">
        <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="119">Checks that the GTK library in use is compatible with the
given version.

Generally you would pass in the constants %GTK_MAJOR_VERSION,
%GTK_MINOR_VERSION, %GTK_MICRO_VERSION as the three arguments
to this function; that produces a check that the library in
use is compatible with the version of GTK the application or
module was compiled against.

Compatibility is defined by two things: first the version
of the running library is newer than the version
@required_major.required_minor.@required_micro. Second
the running library must be binary compatible with the
version @required_major.required_minor.@required_micro
(same major version.)

This function is primarily for GTK modules; the module
can call this function to check that it wasn’t loaded
into an incompatible version of GTK. However, such a
check isn’t completely reliable, since the module may be
linked against an old version of GTK and calling the
old version of gtk_check_version(), but still get loaded
into an application using a newer version of GTK.</doc>
        <source-position filename="../gtk/gtkversion.h" line="110" />
        <return-value transfer-ownership="none" nullable="1" gs:managed-name="ret" direction="in">
          <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="149">%NULL if the GTK library is compatible with the
  given version, or a string describing the version mismatch.
  The returned string is owned by GTK and should not be modified
  or freed.</doc>
          <type name="utf8" c:type="const char*" gs:is-pointer="1" />
        </return-value>
        <parameters>
          <parameter name="required_major" transfer-ownership="none" gs:managed-name="requiredMajor" direction="in">
            <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="121">the required major version</doc>
            <type name="guint" c:type="guint" />
          </parameter>
          <parameter name="required_minor" transfer-ownership="none" gs:managed-name="requiredMinor" direction="in">
            <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="122">the required minor version</doc>
            <type name="guint" c:type="guint" />
          </parameter>
          <parameter name="required_micro" transfer-ownership="none" gs:managed-name="requiredMicro" direction="in">
            <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="123">the required micro version</doc>
            <type name="guint" c:type="guint" />
          </parameter>
        </parameters>
        <gs:managed-parameters>
          <parameter name="required_major" transfer-ownership="none" gs:managed-name="requiredMajor" direction="in">
            <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="121">the required major version</doc>
            <type name="guint" c:type="guint" />
          </parameter>
          <parameter name="required_minor" transfer-ownership="none" gs:managed-name="requiredMinor" direction="in">
            <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="122">the required minor version</doc>
            <type name="guint" c:type="guint" />
          </parameter>
          <parameter name="required_micro" transfer-ownership="none" gs:managed-name="requiredMicro" direction="in">
            <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="123">the required micro version</doc>
            <type name="guint" c:type="guint" />
          </parameter>
        </gs:managed-parameters>
      </function>
      <gs:managed-property name="get_run_time_binary_age" gs:dll-name="gtk-4.1" gs:managed-name="RunTimeBinaryAge">
        <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="89">Returns the binary age as passed to `libtool`.

If `libtool` means nothing to you, don't worry about it.</doc>
        <source-position filename="../gtk/gtkversion.h" line="105" />
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="96">the binary age of the GTK library</doc>
          <type name="guint" c:type="guint" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </gs:managed-property>
      <function name="get_run_time_binary_age" c:identifier="gtk_get_binary_age" gs:dll-name="gtk-4.1" gs:managed-name="GetRunTimeBinaryAge" gs:property-getter-for="RunTimeBinaryAge" gs:access-modifiers="private">
        <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="89">Returns the binary age as passed to `libtool`.

If `libtool` means nothing to you, don't worry about it.</doc>
        <source-position filename="../gtk/gtkversion.h" line="105" />
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="96">the binary age of the GTK library</doc>
          <type name="guint" c:type="guint" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
      <gs:managed-property name="get_run_time_interface_age" gs:dll-name="gtk-4.1" gs:managed-name="RunTimeInterfaceAge">
        <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="104">Returns the interface age as passed to `libtool`.

If `libtool` means nothing to you, don't worry about it.</doc>
        <source-position filename="../gtk/gtkversion.h" line="107" />
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="111">the interface age of the GTK library</doc>
          <type name="guint" c:type="guint" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </gs:managed-property>
      <function name="get_run_time_interface_age" c:identifier="gtk_get_interface_age" gs:dll-name="gtk-4.1" gs:managed-name="GetRunTimeInterfaceAge" gs:property-getter-for="RunTimeInterfaceAge" gs:access-modifiers="private">
        <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="104">Returns the interface age as passed to `libtool`.

If `libtool` means nothing to you, don't worry about it.</doc>
        <source-position filename="../gtk/gtkversion.h" line="107" />
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="111">the interface age of the GTK library</doc>
          <type name="guint" c:type="guint" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
      <gs:managed-property name="get_major_version" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="MajorVersion">
        <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="29">Returns the major version number of the GTK library.

For example, in GTK version 3.1.5 this is 3.

This function is in the library, so it represents the GTK library
your code is running against. Contrast with the %GTK_MAJOR_VERSION
macro, which represents the major version of the GTK headers you
have included when compiling your code.</doc>
        <source-position filename="../gtk/gtkversion.h" line="99" />
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="41">the major version number of the GTK library</doc>
          <type name="guint" c:type="guint" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </gs:managed-property>
      <function name="get_major_version" c:identifier="gtk_get_major_version" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetMajorVersion" gs:property-getter-for="MajorVersion">
        <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="29">Returns the major version number of the GTK library.

For example, in GTK version 3.1.5 this is 3.

This function is in the library, so it represents the GTK library
your code is running against. Contrast with the %GTK_MAJOR_VERSION
macro, which represents the major version of the GTK headers you
have included when compiling your code.</doc>
        <source-position filename="../gtk/gtkversion.h" line="99" />
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="41">the major version number of the GTK library</doc>
          <type name="guint" c:type="guint" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
      <gs:managed-property name="get_micro_version" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="MicroVersion">
        <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="69">Returns the micro version number of the GTK library.

For example, in GTK version 3.1.5 this is 5.

This function is in the library, so it represents the GTK library
your code is are running against. Contrast with the
%GTK_MICRO_VERSION macro, which represents the micro version of the
GTK headers you have included when compiling your code.</doc>
        <source-position filename="../gtk/gtkversion.h" line="103" />
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="81">the micro version number of the GTK library</doc>
          <type name="guint" c:type="guint" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </gs:managed-property>
      <function name="get_micro_version" c:identifier="gtk_get_micro_version" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetMicroVersion" gs:property-getter-for="MicroVersion">
        <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="69">Returns the micro version number of the GTK library.

For example, in GTK version 3.1.5 this is 5.

This function is in the library, so it represents the GTK library
your code is are running against. Contrast with the
%GTK_MICRO_VERSION macro, which represents the micro version of the
GTK headers you have included when compiling your code.</doc>
        <source-position filename="../gtk/gtkversion.h" line="103" />
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="81">the micro version number of the GTK library</doc>
          <type name="guint" c:type="guint" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
      <gs:managed-property name="get_minor_version" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="MinorVersion">
        <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="49">Returns the minor version number of the GTK library.

For example, in GTK version 3.1.5 this is 1.

This function is in the library, so it represents the GTK library
your code is are running against. Contrast with the
%GTK_MINOR_VERSION macro, which represents the minor version of the
GTK headers you have included when compiling your code.</doc>
        <source-position filename="../gtk/gtkversion.h" line="101" />
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="61">the minor version number of the GTK library</doc>
          <type name="guint" c:type="guint" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </gs:managed-property>
      <function name="get_minor_version" c:identifier="gtk_get_minor_version" gs:access-modifiers="private" gs:dll-name="gtk-4.1" gs:managed-name="GetMinorVersion" gs:property-getter-for="MinorVersion">
        <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="49">Returns the minor version number of the GTK library.

For example, in GTK version 3.1.5 this is 1.

This function is in the library, so it represents the GTK library
your code is are running against. Contrast with the
%GTK_MINOR_VERSION macro, which represents the minor version of the
GTK headers you have included when compiling your code.</doc>
        <source-position filename="../gtk/gtkversion.h" line="101" />
        <return-value transfer-ownership="none" gs:managed-name="ret" direction="in">
          <doc xml:space="preserve" filename="../gtk/gtkversion.c" line="61">the minor version number of the GTK library</doc>
          <type name="guint" c:type="guint" />
        </return-value>
        <parameters />
        <gs:managed-parameters />
      </function>
    </gs:static-class>
    <gs:static-class name="Priority" gs:managed-name="Priority">
      <constant name="RESIZE" value="110" c:type="GTK_PRIORITY_RESIZE" gs:managed-name="Resize">
        <doc xml:space="preserve" filename="../gtk/gtkmain.h" line="42">Use this priority for functionality related to size allocation.

It is used internally by GTK+ to compute the sizes of widgets.
This priority is higher than %GDK_PRIORITY_REDRAW to avoid
resizing a widget which was just redrawn.</doc>
        <source-position filename="../gtk/gtkmain.h" line="51" />
        <type name="gint" c:type="gint" />
      </constant>
    </gs:static-class>
  </namespace>
</repository>