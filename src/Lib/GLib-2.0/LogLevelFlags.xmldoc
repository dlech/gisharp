<declaration>

<member name='LogLevelFlags.Recursion'>
<summary>
internal flag
</summary>
</member>

<member name='LogLevelFlags.Fatal'>
<summary>
internal flag
</summary>
</member>

<member name='LogLevelFlags.Error'>
<summary>
log level for errors, see <see cref="Log.Error"/>.
    This level is also used for messages produced by g_assert().
</summary>
</member>

<member name='LogLevelFlags.Critical'>
<summary>
log level for critical warning messages, see
    <see cref="Log.Critical"/>.
    This level is also used for messages produced by g_return_if_fail()
    and g_return_val_if_fail().
</summary>
</member>

<member name='LogLevelFlags.Warning'>
<summary>
log level for warnings, see <see cref="Log.Warning"/>
</summary>
</member>

<member name='LogLevelFlags.Message'>
<summary>
log level for messages, see <see cref="Log.Message"/>
</summary>
</member>

<member name='LogLevelFlags.Info'>
<summary>
log level for informational messages, see <see cref="Log.Info"/>
</summary>
</member>

<member name='LogLevelFlags.Debug'>
<summary>
log level for debug messages, see <see cref="Log.Debug"/>
</summary>
</member>

<member name='LogLevelFlags.Mask'>
<summary>
a mask including all log levels
</summary>
</member>

<member name='LogLevelFlags'>
<summary>
Flags specifying the level of log messages.
</summary>
<remarks>
<para>
It is possible to change how GLib treats messages of the various
levels using <see cref="Log.SetHandler"/> and <see cref="Log.SetFatalMask(GISharp.Runtime.UnownedUtf8,GISharp.Lib.GLib.LogLevelFlags)"/>.
</para>
</remarks>
</member>

</declaration>
