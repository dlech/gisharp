<declaration>

<member name='UnixSignalSource.New(int)'>
<summary>
Create a <see cref="Source"/> that will be dispatched upon delivery of the UNIX
signal <paramref name="signum"/>.  In GLib versions before 2.36, only `SIGHUP`, `SIGINT`,
`SIGTERM` can be monitored.  In GLib 2.36, `SIGUSR1` and `SIGUSR2`
were added. In GLib 2.54, `SIGWINCH` was added.
</summary>
<remarks>
Note that unlike the UNIX default, all sources which have created a
watch will be dispatched, regardless of which underlying thread
invoked <see cref="UnixSignalSource.New(int)"/>.

For example, an effective use of this function is to handle `SIGTERM`
cleanly; flushing any outstanding files, and then calling
g_main_loop_quit ().  It is not safe to do any of this a regular
UNIX signal handler; your handler may be invoked while malloc() or
another library function is running, causing reentrancy if you
attempt to use it from the handler.  None of the GLib/GObject API
is safe against this kind of reentrancy.

The interaction of this source when combined with native UNIX
functions like sigprocmask() is not defined.

The source will not initially be associated with any <see cref="MainContext"/>
and must be added to one with <see cref="Source.Attach(GISharp.Lib.GLib.MainContext)"/> before it will be
executed.
</remarks>
<param name="signum">
A signal number
</param>
<returns>
A newly created <see cref="Source"/>
</returns>
</member>

<member name='UnixSignalSource'>
</member>

</declaration>
