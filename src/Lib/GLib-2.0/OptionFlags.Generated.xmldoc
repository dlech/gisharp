<declaration>

<member name='OptionFlags.None'>
<summary>
No flags.
</summary>
</member>

<member name='OptionFlags.Hidden'>
<summary>
The option doesn't appear in `--help` output.
</summary>
</member>

<member name='OptionFlags.InMain'>
<summary>
The option appears in the main section of the
    `--help` output, even if it is defined in a group.
</summary>
</member>

<member name='OptionFlags.Reverse'>
<summary>
For options of the <see cref="OptionArg.None"/> kind, this
    flag indicates that the sense of the option is reversed.
</summary>
</member>

<member name='OptionFlags.NoArg'>
<summary>
For options of the <see cref="OptionArg.Callback"/> kind,
    this flag indicates that the callback does not take any argument
    (like a <see cref="OptionArg.None"/> option).
</summary>
</member>

<member name='OptionFlags.Filename'>
<summary>
For options of the <see cref="OptionArg.Callback"/>
    kind, this flag indicates that the argument should be passed to the
    callback in the GLib filename encoding rather than UTF-8.
</summary>
</member>

<member name='OptionFlags.OptionalArg'>
<summary>
For options of the <see cref="OptionArg.Callback"/>
    kind, this flag indicates that the argument supply is optional.
    If no argument is given then data of %GOptionParseFunc will be
    set to NULL.
</summary>
</member>

<member name='OptionFlags.NoAlias'>
<summary>
This flag turns off the automatic conflict
    resolution which prefixes long option names with `groupname-` if
    there is a conflict. This option should only be used in situations
    where aliasing is necessary to model some legacy commandline interface.
    It is not safe to use this option, unless all option groups are under
    your direct control.
</summary>
</member>

<member name='OptionFlags'>
<summary>
Flags which modify individual options.
</summary>
</member>

</declaration>
