<declaration>

<member name='Idle.Add(GISharp.Lib.GLib.SourceFunc,int)'>
<summary>
Adds a function to be called whenever there are no higher priority
events pending.
</summary>
<remarks>
<para>
If the function returns <see cref="Source.Remove"/> or <c>false</c> it is automatically
removed from the list of event sources and will not be called again.
</para>
<para>
This internally creates a main loop source using <see cref="IdleSource.New()"/>
and attaches it to the global <see cref="MainContext"/> using <see cref="Source.Attach(GISharp.Lib.GLib.MainContext)"/>, so
the callback will be invoked in whichever thread is running that main
context. You can do these steps manually if you need greater control or to
use a custom main context.
</para>
</remarks>
<param name="function">
function to call
</param>
<param name="priority">
the priority of the idle source. Typically this will be in the
  range between <see cref="Priority.DefaultIdle"/> and <see cref="Priority.HighIdle"/>.
</param>
<returns>
the ID (greater than 0) of the event source.
</returns>
</member>

<member name='Idle.RemoveByData(System.IntPtr)'>
<summary>
Removes the idle function with the given data.
</summary>
<param name="data">
the data for the idle source's callback.
</param>
<returns>
<c>true</c> if an idle source was found and removed.
</returns>
</member>

<member name='Idle'>
</member>

</declaration>
