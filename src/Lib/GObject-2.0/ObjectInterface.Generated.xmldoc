<declaration>

<member name='ObjectInterface.FindProperty(GISharp.Lib.GObject.TypeInterface,GISharp.Runtime.UnownedUtf8)'>
<summary>
Find the <see cref="ParamSpec"/> with the given name for an
interface. Generally, the interface vtable passed in as <paramref name="gIface"/>
will be the default vtable from <see cref="TypeDefaultInterface.TypeDefaultInterface(GISharp.Runtime.GType)"/>, or,
if you know the interface has already been loaded,
<see cref="TypeDefaultInterface.Peek()"/>.
</summary>
<param name="gIface">
any interface vtable for the
 interface, or the default vtable for the interface
</param>
<param name="propertyName">
name of a property to look up.
</param>
<returns>
the <see cref="ParamSpec"/> for the property of the
         interface with the name <paramref name="propertyName"/>, or <c>null</c> if no
         such property exists.
</returns>
</member>

<member name='ObjectInterface.InstallProperty(GISharp.Lib.GObject.TypeInterface,GISharp.Lib.GObject.ParamSpec)'>
<summary>
Add a property to an interface; this is only useful for interfaces
that are added to GObject-derived types. Adding a property to an
interface forces all objects classes with that interface to have a
compatible property. The compatible property could be a newly
created <see cref="ParamSpec"/>, but normally
<see cref="ObjectClass.OverrideProperty(uint,GISharp.Runtime.UnownedUtf8)"/> will be used so that the object
class only needs to provide an implementation and inherits the
property description, default value, bounds, and so forth from the
interface property.
</summary>
<remarks>
<para>
This function is meant to be called from the interface's default
vtable initialization function (the <c>classInit</c> member of
<see cref="TypeInfo"/>.) It must not be called after after <c>classInit</c> has
been called for any object types implementing this interface.
</para>
<para>
If <paramref name="pspec"/> is a floating reference, it will be consumed.
</para>
</remarks>
<param name="gIface">
any interface vtable for the
   interface, or the default
 vtable for the interface.
</param>
<param name="pspec">
the <see cref="ParamSpec"/> for the new property
</param>
</member>

<member name='ObjectInterface.ListProperties(GISharp.Lib.GObject.TypeInterface)'>
<summary>
Lists the properties of an interface.Generally, the interface
vtable passed in as <paramref name="gIface"/> will be the default vtable from
<see cref="TypeDefaultInterface.TypeDefaultInterface(GISharp.Runtime.GType)"/>, or, if you know the interface has
already been loaded, <see cref="TypeDefaultInterface.Peek()"/>.
</summary>
<param name="gIface">
any interface vtable for the
 interface, or the default vtable for the interface
</param>
<returns>
a
         pointer to an array of pointers to <see cref="ParamSpec"/>
         structures. The paramspecs are owned by GLib, but the
         array should be freed with g_free() when you are done with
         it.
</returns>
</member>

<member name='ObjectInterface'>
</member>

</declaration>
