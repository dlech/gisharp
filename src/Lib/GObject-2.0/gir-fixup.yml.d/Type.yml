
### Type ###

# Type is not used
- !set-attribute
  name: introspectable
  value: 0
  xpath: gi:repository/gi:namespace/gi:alias[@name='Type']

# acutal GType type is defined in Runtime, so we make a static class with
# extension methods
- !add-element
  xml: <gs:static-class name='TypeExtensions' />
  xpath: gi:repository/gi:namespace

# Move type_* functions to static class
- !move-element
  xpath: gi:repository/gi:namespace/gi:function[starts-with(@name,'type_') and not(contains(@name,'default_interface'))]
  new-parent-xpath: gi:repository/gi:namespace/gs:static-class[@name='TypeExtensions']
- !change-attribute
  name: name
  regex: type_(.*)
  replace: $1
  xpath: gi:repository/gi:namespace/gs:static-class[@name='TypeExtensions']/gi:function

# skip stuff implemented in Runtime
- !set-attribute
  name: introspectable
  value: 0
  xpath: gi:repository/gi:namespace/gs:static-class[@name='TypeExtensions']/gi:function[@name='fundamental' or @name='test_flags' or @name='check_is_value_type' or @name='name' or @name='parent' or @name='children' or @name='is_a' or @name='from_name']
- !set-attribute
  name: introspectable
  value: 0
  xpath: gi:repository/gi:namespace/gi:function[@name='gtype_get_type']

# Change first parameter to instance-parameter to convert function to an extension method
- !change-element
  new-name: gi:method
  xpath: gi:repository/gi:namespace/gs:static-class[@name='TypeExtensions']/gi:function[gi:parameters/gi:parameter[position()=1 and gi:type[@name='GType']]]
- !change-element
  new-name: gi:instance-parameter
  xpath: gi:repository/gi:namespace/gs:static-class[@name='TypeExtensions']/gi:method/gi:parameters/gi:parameter[position()=1 and gi:type[@name='GType']]

# fix array indexes
- !set-attribute
  name: length
  value: 0
  xpath: gi:repository/gi:namespace/gs:static-class[@name='TypeExtensions']/gi:method/gi:return-value/gi:array[@length='1']

# move TYPE_* constants to static class
- !move-element
  xpath: gi:repository/gi:namespace/gi:constant[starts-with(@name,'TYPE_')]
  new-parent-xpath: gi:repository/gi:namespace/gs:static-class[@name='TypeExtensions']
- !change-attribute
  name: name
  regex: TYPE_(.*)
  replace: $1
  xpath: gi:repository/gi:namespace/gs:static-class[@name='TypeExtensions']/gi:constant
- !set-attribute
  name: gs:access-modifiers
  value: private
  xpath: gi:repository/gi:namespace/gs:static-class[@name='TypeExtensions']/gi:constant

# fix type
- !set-attribute
  name: name
  value: gsize
  xpath: gi:repository/gi:namespace/gs:static-class[@name='TypeExtensions']/gi:constant/gi:type[@name='GLib.Type']

# need special memory handling
- !set-attribute
  name: gs:pinvoke-only
  value: 1
  xpath: gi:repository/gi:namespace/gs:static-class[@name='TypeExtensions']/gi:method[contains(@name,'static')]

# plugins aren't implemented yet
- !set-attribute
  name: introspectable
  value: 0
  xpath: gi:repository/gi:namespace/gs:static-class[@name='TypeExtensions']/gi:method[contains(@name,'dynamic') or contains(@name,'plugin')]

# fix "q" prefix
- !change-attribute
  name: name
  regex: q
  replace: q_
  xpath: gi:repository/gi:namespace/gs:static-class[@name='TypeExtensions']/gi:method[contains(@name,'q') and not(@name='query')]
