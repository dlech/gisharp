// SPDX-License-Identifier: MIT
// ATTENTION: This file is automatically generated. Do not edit manually.
#nullable enable
namespace GISharp.Lib.GObject
{
    /// <summary>
    /// The type used for marshaller functions.
    /// </summary>
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Cdecl)]
    /* <type name="none" type="void" /> */
    /* transfer-ownership:none direction:in */
    public unsafe delegate void UnmanagedClosureMarshal(
    /* <type name="Closure" type="GClosure*" is-pointer="1" /> */
    /* transfer-ownership:none direction:in */
    GISharp.Lib.GObject.Closure.UnmanagedStruct* closure,
    /* <type name="Value" type="GValue*" is-pointer="1" /> */
    /* transfer-ownership:none nullable:1 allow-none:1 direction:in */
    GISharp.Lib.GObject.Value* returnValue,
    /* <type name="guint" type="guint" /> */
    /* transfer-ownership:none direction:in */
    uint nParamValues,
    /* <array length="2" zero-terminated="0" type="const GValue*" is-pointer="1">
*   <type name="Value" type="GValue" />
* </array> */
    /* transfer-ownership:none direction:in */
    GISharp.Lib.GObject.Value* paramValues,
    /* <type name="gpointer" type="gpointer" is-pointer="1" /> */
    /* transfer-ownership:none nullable:1 allow-none:1 direction:in */
    System.IntPtr invocationHint,
    /* <type name="gpointer" type="gpointer" is-pointer="1" /> */
    /* transfer-ownership:none nullable:1 allow-none:1 direction:in */
    System.IntPtr marshalData);

    /// <include file="ClosureMarshal.xmldoc" path="declaration/member[@name='ClosureMarshal']/*" />
    public delegate void ClosureMarshal(GISharp.Lib.GObject.Closure closure, ref GISharp.Lib.GObject.Value returnValue, System.ReadOnlySpan<GISharp.Lib.GObject.Value> paramValues, System.IntPtr invocationHint, System.IntPtr marshalData);

    /// <summary>
    /// Class for marshalling <see cref="ClosureMarshal"/> methods.
    /// </summary>
    public static unsafe class ClosureMarshalMarshal
    {
        /// <summary>
        /// Marshals an unmanaged pointer to a <see cref="ClosureMarshal"/>.
        /// </summary>
        public static GISharp.Lib.GObject.ClosureMarshal FromPointer(delegate* unmanaged[Cdecl]<GISharp.Lib.GObject.Closure.UnmanagedStruct*, GISharp.Lib.GObject.Value*, uint, GISharp.Lib.GObject.Value*, System.IntPtr, System.IntPtr, void> callback_, System.IntPtr userData_)
        {
            void managedCallback(GISharp.Lib.GObject.Closure closure, ref GISharp.Lib.GObject.Value returnValue, System.ReadOnlySpan<GISharp.Lib.GObject.Value> paramValues, System.IntPtr invocationHint, System.IntPtr marshalData)
            {
                fixed (GISharp.Lib.GObject.Value* paramValuesData_ = paramValues)
                {
                    fixed (GISharp.Lib.GObject.Value* returnValue_ = &returnValue)
                    {
                        var closure_ = (GISharp.Lib.GObject.Closure.UnmanagedStruct*)closure.UnsafeHandle;
                        var paramValues_ = (GISharp.Lib.GObject.Value*)paramValuesData_;
                        var nParamValues_ = (uint)paramValues.Length;
                        var invocationHint_ = (System.IntPtr)invocationHint;
                        var marshalData_ = (System.IntPtr)marshalData;
                        callback_(closure_, returnValue_, nParamValues_, paramValues_, invocationHint_, marshalData_);
                        GISharp.Runtime.GMarshal.PopUnhandledException();
                    }
                }
            }

            return managedCallback;
        }
    }
}