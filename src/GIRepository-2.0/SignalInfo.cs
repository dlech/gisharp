// This file was originally generated by the Gtk# (gapi3) code generator.
// It is now maintained by hand.

using System;
using System.Runtime.InteropServices;
using GISharp.Lib.GObject;
using GISharp.Runtime;

namespace GISharp.Lib.GIRepository
{
    public sealed class SignalInfo : CallableInfo
    {
        [DllImport ("libgirepository-1.0", CallingConvention = CallingConvention.Cdecl)]
        static extern IntPtr g_signal_info_get_class_closure (IntPtr raw);

        public VFuncInfo? ClassClosure {
            get {
                var ret_ = g_signal_info_get_class_closure(Handle);
                var ret = GetInstanceOrNull<VFuncInfo>(ret_);
                return ret;
            }
        }

        [DllImport ("libgirepository-1.0", CallingConvention = CallingConvention.Cdecl)]
        static extern SignalFlags g_signal_info_get_flags (IntPtr raw);

        public SignalFlags Flags {
            get {
                return g_signal_info_get_flags (Handle);
            }
        }

        [DllImport("libgirepository-1.0", CallingConvention = CallingConvention.Cdecl)]
        static extern Runtime.Boolean g_signal_info_true_stops_emit(IntPtr raw);

        public bool TrueStopsEmit {
            get {
                var ret_ = g_signal_info_true_stops_emit(Handle);
                var ret = ret_.IsTrue();
                return ret;
            }
        }

        public SignalInfo (IntPtr raw) : base (raw)
        {
        }
    }
}
