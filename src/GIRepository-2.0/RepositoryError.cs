// This file was generated by the Gtk# code generator.
// It is now maintained by hand.

using System.Runtime.InteropServices;
using GISharp.Lib.GLib;
using GISharp.Runtime;

namespace GISharp.Lib.GIRepository
{
    /// <summary>
    /// An error code returned from a Repository method.
    /// </summary>
    [GErrorDomain ("g-irepository-error-quark")]
    public enum RepositoryError
    {
        /// <summary>
        /// The typelib could not be found.
        /// </summary>
        TypelibNotFound,

        /// <summary>
        /// The namespace does not match the requested namespace.
        /// </summary>
        NamespaceMismatch,

        /// <summary>
        /// The version of the typelib does not match the requested version.
        /// </summary>
        NamespaceVersionConflict,

        /// <summary>
        /// The library used by the typelib could not be found.
        /// </summary>
        LibraryNotFound,
    }

    public static class RepositoryErrorDomain
    {
        [DllImport("libgirepository-1.0", CallingConvention = CallingConvention.Cdecl)]
        static extern Quark g_irepository_error_quark();

        /// <summary>
        /// Error domain for Repository.
        /// </summary>
        /// <value>The error domain.</value>
        /// <remarks>
        /// Errors in this domain will be from the <see cref="RepositoryError"/> enumeration.
        /// </remarks>
        public static Quark Quark {
            get {
                var ret = g_irepository_error_quark();
                return ret;
            }
        }
    }
}
