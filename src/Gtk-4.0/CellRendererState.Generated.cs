// SPDX-License-Identifier: MIT
// ATTENTION: This file is automatically generated. Do not edit manually.
#nullable enable
namespace GISharp.Lib.Gtk
{
    /// <include file="CellRendererState.xmldoc" path="declaration/member[@name='CellRendererState']/*" />
    [GISharp.Runtime.GTypeAttribute("GtkCellRendererState", IsProxyForUnmanagedType = true)]
    [System.FlagsAttribute]
    public enum CellRendererState
    {
        /// <include file="CellRendererState.xmldoc" path="declaration/member[@name='CellRendererState.Selected']/*" />
        Selected = 0b0000_0000_0000_0000_0000_0000_0000_0001,
        /// <include file="CellRendererState.xmldoc" path="declaration/member[@name='CellRendererState.Prelit']/*" />
        Prelit = 0b0000_0000_0000_0000_0000_0000_0000_0010,
        /// <include file="CellRendererState.xmldoc" path="declaration/member[@name='CellRendererState.Insensitive']/*" />
        Insensitive = 0b0000_0000_0000_0000_0000_0000_0000_0100,
        /// <include file="CellRendererState.xmldoc" path="declaration/member[@name='CellRendererState.Sorted']/*" />
        Sorted = 0b0000_0000_0000_0000_0000_0000_0000_1000,
        /// <include file="CellRendererState.xmldoc" path="declaration/member[@name='CellRendererState.Focused']/*" />
        Focused = 0b0000_0000_0000_0000_0000_0000_0001_0000,
        /// <include file="CellRendererState.xmldoc" path="declaration/member[@name='CellRendererState.Expandable']/*" />
        Expandable = 0b0000_0000_0000_0000_0000_0000_0010_0000,
        /// <include file="CellRendererState.xmldoc" path="declaration/member[@name='CellRendererState.Expanded']/*" />
        Expanded = 0b0000_0000_0000_0000_0000_0000_0100_0000
    }

    /// <summary>
    /// Extension methods for <see cref="CellRendererState"/>.
    /// </summary>
    public static partial class CellRendererStateExtensions
    {
        private static readonly GISharp.Lib.GObject.GType _GType = gtk_cell_renderer_state_get_type();

        static partial void CheckGetGTypeArgs();
        [System.Runtime.InteropServices.DllImportAttribute("gtk-4.1", CallingConvention = System.Runtime.InteropServices.CallingConvention.Cdecl)]
        /* <type name="GType" type="GType" managed-name="GISharp.Lib.GObject.GType" /> */
        /* transfer-ownership:full direction:out */
        private static extern unsafe GISharp.Lib.GObject.GType gtk_cell_renderer_state_get_type();
    }
}